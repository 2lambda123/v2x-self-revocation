theory RevocationSolution1 begin

// Function signature and definition of the equational theory E

builtins: multiset
functions: fst/1, pair/2, pk/1, sign/2, snd/1, true/0, verify/3
equations:
    fst(<x.1, x.2>) = x.1,
    snd(<x.1, x.2>) = x.2,
    verify(sign(x.1, x.2), x.1, pk(x.2)) = true



predicate: LessThan( x, y )<=>∃ z. (x+z) = y

predicate: GreaterThan( x, y )<=>∃ z. x = (y+z)

predicate: GreaterEqualThan( x, y )<=>(x = y) ∨ (∃ z. x = (y+z))

predicate: IsNotInList( x, y )<=>(((¬(x = y)) ∧ (¬(∃ a. (a+x) = y))) ∧ (¬(∃ b. (b+x) = y))) ∧
(¬(∃ c d. (c+d+x) = y))

predicate: IsInList( x, y )<=>(((x = y) ∨ (∃ a. (a+x) = y)) ∨ (∃ b. (b+x) = y)) ∨
(∃ c d. (c+d+x) = y)

restriction Equality:
  "∀ x y #i. (Eq( x, y ) @ #i) ⇒ (x = y)"
  // safety formula

restriction OnlyOnce:
  "∀ x #i #j. ((OnlyOnce( x ) @ #i) ∧ (OnlyOnce( x ) @ #j)) ⇒ (#i = #j)"
  // safety formula

restriction GreaterEqualThan:
  "∀ x y #i.
    (GreaterEqualThan( x, y ) @ #i) ⇒ ((x = y) ∨ (∃ z. x = (y+z)))"

restriction IsInList:
  "∀ x y #i.
    (IsInList( x, y ) @ #i) ⇒
    ((((x = y) ∨ (∃ a. (a+x) = y)) ∨ (∃ b. (b+x) = y)) ∨
     (∃ c d. (c+d+x) = y))"

restriction IsNotInList:
  "∀ x y #i.
    (IsNotInList( x, y ) @ #i) ⇒
    ((((¬(x = y)) ∧ (¬(∃ a. (a+x) = y))) ∧ (¬(∃ b. (b+x) = y))) ∧
     (¬(∃ c d. (c+d+x) = y)))"
  // safety formula

restriction IsValidPseudonym:
  "∀ ps #i.
    (IsValidPseudonym( ps ) @ #i) ⇒
    (¬(∃ c2 #k. (PseudonymRevoked( ps, c2 ) @ #k) ∧ (#k < #i)))"
  // safety formula

restriction IsLatestTime:
  "∀ t #i.
    (IsLatestTime( t ) @ #i) ⇒
    (¬(∃ t2 #j.
        ((TimeIncrement( t2 ) @ #j) ∧ (#j < #i)) ∧ (∃ z. t2 = (t+z))))"
  // safety formula

restriction IsLatestPRL:
  "∀ cnt #i.
    (IsLatestPRL( cnt ) @ #i) ⇒
    (¬(∃ prl cnt2 #j.
        ((PRLUpdated( prl, cnt2 ) @ #j) ∧ (#j < #i)) ∧ (∃ z. cnt2 = (cnt+z))))"
  // safety formula

restriction IsLatestTimeout:
  "∀ t #i.
    (IsLatestTimeout( t ) @ #i) ⇒
    (¬(∃ t2 #j. ((NewTimeout( t2 ) @ #j) ∧ (#j < #i)) ∧ (∃ z. t2 = (t+z))))"
  // safety formula

restriction HasTimeoutNotExpired:
  "∀ t tout #i.
    (HasTimeoutNotExpired( t, tout ) @ #i) ⇒ (∃ z. (t+z) = tout)"

rule (modulo E) init_parameters:
   [ ] --[ OnlyOnce( 'init_parameters' ) ]-> [ TvTmp( '1' ), TrTmp( '1' ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) increment_Tv:
   [ TvTmp( tv ) ] --> [ TvTmp( ('1'+tv) ) ]

  // loop breaker: [0]
  /* has exactly the trivial AC variant */

rule (modulo E) increment_Tr:
   [ TrTmp( tr ) ] --> [ TrTmp( ('1'+tr) ) ]

  // loop breaker: [0]
  /* has exactly the trivial AC variant */

rule (modulo E) Init:
   [ Fr( ~ps_key ), Fr( ~ltk ), TvTmp( tv ), TrTmp( tr ) ]
  --[
  OnlyOnce( 'Init' ), SystemInitialized( tv, tr ), TimeIncrement( '1' ),
  PseudonymGenerated( pk(~ps_key), '1' ), NewTimeout( ('1'+tr) ),
  PRLUpdated( '0', '1' )
  ]->
   [
   !Parameters( tv, tr ), !Time( '1' ), !Pseudonym( pk(~ps_key) ),
   !Ltk( pk(~ps_key), ~ps_key ), !Timeout( ('1'+tr) ), !Ltk( 'RA', ~ltk ),
   !Pk( 'RA', pk(~ltk) ), !PRL( '0', '1' ), Out( pk(~ltk) ),
   Out( pk(~ps_key) )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) process_message:
   [
   In( <<m, t_v2v>, signature> ), !Parameters( tv, tr ), !Pseudonym( ps ),
   !Time( t )
   ]
  --[
  Eq( verify(signature, <m, t_v2v>, ps), true ),
  GreaterEqualThan( (t_v2v+tv), t ), MessageAccepted( <m, t_v2v>, ps, t )
  ]->
   [ ]

  /*
  rule (modulo AC) process_message:
     [
     In( <<m, t_v2v>, signature> ), !Parameters( tv, tr ), !Pseudonym( ps ),
     !Time( t )
     ]
    --[
    Eq( z, true ), GreaterEqualThan( (t_v2v+tv), t ),
    MessageAccepted( <m, t_v2v>, ps, t )
    ]->
     [ ]
    variants (modulo AC)
    1. m     = m.9
       ps    = ps.9
       signature
             = signature.9
       t_v2v = t_v2v.9
       z     = verify(signature.9, <m.9, t_v2v.9>, ps.9)
    
    2. m     = x.9
       ps    = pk(x.10)
       signature
             = sign(<x.9, x.11>, x.10)
       t_v2v = x.11
       z     = true
  */

rule (modulo E) advance_time:
   [ !Time( t ) ]
  --[ OnlyOnce( <'advance_time', t> ), TimeIncrement( ('1'+t) ) ]->
   [ !Time( ('1'+t) ) ]

  // loop breaker: [0]
  /* has exactly the trivial AC variant */

rule (modulo E) TC_sign_message:
   [
   !Time( t ), !Timeout( tout ), !Pseudonym( ps ), !Ltk( ps, ps_key ),
   Fr( ~m )
   ]
  --[
  IsValidPseudonym( ps ), IsLatestTime( t ), IsLatestTimeout( tout ),
  HasTimeoutNotExpired( t, tout ), Signed( <~m, t>, ps )
  ]->
   [ Out( <<~m, t>, sign(<~m, t>, ps_key)> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) TC_process_heartbeat_no_revoke:
   [
   !Time( t ), !Parameters( tv, tr ), !Pseudonym( ps ), !Timeout( tout ),
   !Pk( 'RA', pkRA ), In( <<prl, t_hb>, signature> )
   ]
  --[
  IsLatestTimeout( tout ), IsLatestTime( t ),
  HasTimeoutNotExpired( t, tout ),
  Eq( verify(signature, <prl, t_hb>, pkRA), true ),
  GreaterEqualThan( (t_hb+tv), t ), IsNotInList( ps, prl ),
  HeartbeatProcessed( <prl, t_hb>, t ), NewTimeout( (t+tr) )
  ]->
   [ !Timeout( (t+tr) ) ]

  // loop breaker: [3]
  /*
  rule (modulo AC) TC_process_heartbeat_no_revoke:
     [
     !Time( t ), !Parameters( tv, tr ), !Pseudonym( ps ), !Timeout( tout ),
     !Pk( 'RA', pkRA ), In( <<prl, t_hb>, signature> )
     ]
    --[
    IsLatestTimeout( tout ), IsLatestTime( t ),
    HasTimeoutNotExpired( t, tout ), Eq( z, true ),
    GreaterEqualThan( (t_hb+tv), t ), IsNotInList( ps, prl ),
    HeartbeatProcessed( <prl, t_hb>, t ), NewTimeout( (t+tr) )
    ]->
     [ !Timeout( (t+tr) ) ]
    variants (modulo AC)
    1. pkRA  = pkRA.13
       prl   = prl.14
       signature
             = signature.16
       t_hb  = t_hb.18
       z     = verify(signature.16, <prl.14, t_hb.18>, pkRA.13)
    
    2. pkRA  = pk(x.26)
       prl   = prl.16
       signature
             = sign(<prl.16, t_hb.20>, x.26)
       t_hb  = t_hb.20
       z     = true
    // loop breaker: [3]
  */

rule (modulo E) TC_process_heartbeat_revoke:
   [
   !Time( t ), !Parameters( tv, tr ), !Pseudonym( ps ), !Timeout( tout ),
   !Pk( 'RA', pkRA ), In( <<prl, t_hb>, signature> )
   ]
  --[
  IsLatestTimeout( tout ), IsLatestTime( t ),
  HasTimeoutNotExpired( t, tout ),
  Eq( verify(signature, <prl, t_hb>, pkRA), true ),
  GreaterEqualThan( (t_hb+tv), t ), IsInList( ps, prl ),
  HeartbeatProcessed( <prl, t_hb>, t ), PseudonymRevoked( ps, t ),
  NewTimeout( (t+tr) )
  ]->
   [ !Timeout( (t+tr) ) ]

  // loop breaker: [3]
  /*
  rule (modulo AC) TC_process_heartbeat_revoke:
     [
     !Time( t ), !Parameters( tv, tr ), !Pseudonym( ps ), !Timeout( tout ),
     !Pk( 'RA', pkRA ), In( <<prl, t_hb>, signature> )
     ]
    --[
    IsLatestTimeout( tout ), IsLatestTime( t ),
    HasTimeoutNotExpired( t, tout ), Eq( z, true ),
    GreaterEqualThan( (t_hb+tv), t ), IsInList( ps, prl ),
    HeartbeatProcessed( <prl, t_hb>, t ), PseudonymRevoked( ps, t ),
    NewTimeout( (t+tr) )
    ]->
     [ !Timeout( (t+tr) ) ]
    variants (modulo AC)
    1. pkRA  = pkRA.13
       prl   = prl.14
       signature
             = signature.16
       t_hb  = t_hb.18
       z     = verify(signature.16, <prl.14, t_hb.18>, pkRA.13)
    
    2. pkRA  = pk(x.26)
       prl   = prl.16
       signature
             = sign(<prl.16, t_hb.20>, x.26)
       t_hb  = t_hb.20
       z     = true
    // loop breaker: [3]
  */

rule (modulo E) TC_do_operation:
   [ !Time( t ), !Timeout( tout ) ]
  --[
  IsLatestTimeout( tout ), IsLatestTime( t ),
  HasTimeoutNotExpired( t, tout ), NewOperation( t )
  ]->
   [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) RA_generate_heartbeat:
   [ !Time( t ), !PRL( prl, cnt ), !Ltk( 'RA', ltk ) ]
  --[
  IsLatestPRL( cnt ), IsLatestTime( t ),
  OnlyOnce( <'generate_hb', prl, t> ), HeartbeatGenerated( <prl, t> )
  ]->
   [ Out( <<prl, t>, sign(<prl, t>, ltk)> ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) RA_issue_revocation:
   [ !Time( t ), !Pseudonym( ps ), !PRL( prl, cnt ) ]
  --[
  IsLatestPRL( cnt ), IsLatestTime( t ),
  OnlyOnce( <'issue_revocation', ps> ), RevocationIssued( ps, t ),
  PRLUpdated( (prl+ps), ('1'+cnt) )
  ]->
   [ !PRL( (prl+ps), ('1'+cnt) ) ]

  // loop breaker: [2]
  /* has exactly the trivial AC variant */

lemma sign_possible [heuristic=I]:
  exists-trace "∃ msg ps #i. Signed( msg, ps ) @ #i"
/*
guarded formula characterizing all satisfying traces:
"∃ msg ps #i. (Signed( msg, ps ) @ #i)"
*/
simplify
solve( !Time( t ) ▶₀ #i )
  case Init_case_1
  solve( !Timeout( ('1'+z) ) ▶₁ #i )
    case Init
    solve( !Pseudonym( ps ) ▶₂ #i )
      case Init
      solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #i )
        case Init
        SOLVED // trace found
      qed
    qed
  qed
qed

lemma generate_hb_possible [heuristic=I]:
  exists-trace "∃ hb #i. HeartbeatGenerated( hb ) @ #i"
/*
guarded formula characterizing all satisfying traces:
"∃ hb #i. (HeartbeatGenerated( hb ) @ #i)"
*/
simplify
solve( !Time( t ) ▶₀ #i )
  case Init_case_1
  solve( !PRL( prl, cnt ) ▶₁ #i )
    case Init
    solve( !Ltk( 'RA', ltk ) ▶₂ #i )
      case Init
      SOLVED // trace found
    qed
  qed
qed

lemma issue_revocation_possible [heuristic=I]:
  exists-trace "∃ ps t #i. RevocationIssued( ps, t ) @ #i"
/*
guarded formula characterizing all satisfying traces:
"∃ ps t #i. (RevocationIssued( ps, t ) @ #i)"
*/
simplify
solve( !Time( t ) ▶₀ #i )
  case Init_case_1
  solve( !Pseudonym( ps ) ▶₁ #i )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #i )
      case Init
      SOLVED // trace found
    qed
  qed
qed

lemma process_hb_possible [heuristic=I]:
  exists-trace "∃ hb t #i. HeartbeatProcessed( hb, t ) @ #i"
/*
guarded formula characterizing all satisfying traces:
"∃ hb t #i. (HeartbeatProcessed( hb, t ) @ #i)"
*/
simplify
solve( HeartbeatProcessed( hb, t ) @ #i )
  case TC_process_heartbeat_no_revoke
  solve( !Time( t ) ▶₀ #i )
    case Init_case_01
    solve( !Parameters( tv, tr ) ▶₁ #i )
      case Init
      solve( !Pseudonym( ps ) ▶₂ #i )
        case Init
        solve( !Pk( 'RA', pk(x) ) ▶₄ #i )
          case Init
          solve( !Timeout( ('1'+z) ) ▶₃ #i )
            case Init
            solve( !KU( sign(<prl, '1'>, ~ltk) ) @ #vk.4 )
              case RA_generate_heartbeat_case_1
              SOLVED // trace found
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma revocation_possible [heuristic=I]:
  exists-trace "∃ ps t #i. PseudonymRevoked( ps, t ) @ #i"
/*
guarded formula characterizing all satisfying traces:
"∃ ps t #i. (PseudonymRevoked( ps, t ) @ #i)"
*/
simplify
solve( !Time( t ) ▶₀ #i )
  case Init_case_01
  solve( !Parameters( tv, tr ) ▶₁ #i )
    case Init
    solve( !Pseudonym( ps ) ▶₂ #i )
      case Init
      solve( !Pk( 'RA', pk(x) ) ▶₄ #i )
        case Init
        solve( (pk(~ps_key) = prl)  ∥ (∃ a. ((a+pk(~ps_key)) = prl))  ∥
               (∃ b. ((b+pk(~ps_key)) = prl))  ∥ (∃ c d. ((c+d+pk(~ps_key)) = prl)) )
          case case_2
          solve( !Timeout( ('1'+z) ) ▶₃ #i )
            case Init
            solve( !KU( sign(<(a+pk(~ps_key)), '1'>, ~ltk) ) @ #vk.4 )
              case RA_generate_heartbeat_case_2
              solve( !PRL( a, cnt ) ▶₂ #vr.4 )
                case Init
                solve( !KU( pk(~ps_key) ) @ #vk.6 )
                  case Init
                  SOLVED // trace found
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma process_message_possible [heuristic=I]:
  exists-trace "∃ msg ps t #i. MessageAccepted( msg, ps, t ) @ #i"
/*
guarded formula characterizing all satisfying traces:
"∃ msg ps t #i. (MessageAccepted( msg, ps, t ) @ #i)"
*/
simplify
solve( !Parameters( tv, tr ) ▶₁ #i )
  case Init_case_1
  solve( !Pseudonym( pk(x) ) ▶₂ #i )
    case Init
    solve( !Time( t ) ▶₃ #i )
      case Init
      solve( !KU( sign(<m, t_v2v>, ~ps_key) ) @ #vk.4 )
        case TC_sign_message_case_1
        solve( !KU( ~m ) @ #vk.3 )
          case TC_sign_message
          SOLVED // trace found
        qed
      qed
    qed
  qed
qed

lemma exists_par_tr_5 [heuristic=I]:
  exists-trace
  "∃ tv tr #i.
    (SystemInitialized( tv, tr ) @ #i) ∧ (tr = ('1'+'1'+'1'+'1'+'1'))"
/*
guarded formula characterizing all satisfying traces:
"∃ tv tr #i.
  (SystemInitialized( tv, tr ) @ #i) ∧ (tr = ('1'+'1'+'1'+'1'+'1'))"
*/
simplify
solve( SystemInitialized( tv, ('1'+'1'+'1'+'1'+'1') ) @ #i )
  case Init
  solve( TvTmp( tv ) ▶₂ #i )
    case increment_Tv
    solve( TrTmp( ('1'+'1'+'1'+'1'+'1') ) ▶₃ #i )
      case increment_Tr
      solve( TvTmp( tv ) ▶₀ #vr )
        case increment_Tv
        solve( TrTmp( ('1'+'1'+'1'+'1') ) ▶₀ #vr.1 )
          case increment_Tr
          solve( TvTmp( tv ) ▶₀ #vr.2 )
            case increment_Tv
            solve( TrTmp( ('1'+'1'+'1') ) ▶₀ #vr.3 )
              case increment_Tr
              solve( TvTmp( tv ) ▶₀ #vr.4 )
                case increment_Tv
                solve( TrTmp( ('1'+'1') ) ▶₀ #vr.5 )
                  case increment_Tr
                  solve( TvTmp( tv ) ▶₀ #vr.6 )
                    case increment_Tv
                    solve( TrTmp( '1' ) ▶₀ #vr.7 )
                      case init_parameters
                      solve( TvTmp( tv ) ▶₀ #vr.8 )
                        case increment_Tv
                        solve( TvTmp( tv ) ▶₀ #vr.10 )
                          case increment_Tv
                          solve( TvTmp( tv ) ▶₀ #vr.11 )
                            case init_parameters
                            SOLVED // trace found
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma exists_par_tr_8 [heuristic=I]:
  exists-trace
  "∃ tv tr #i.
    (SystemInitialized( tv, tr ) @ #i) ∧
    (tr = ('1'+'1'+'1'+'1'+'1'+'1'+'1'+'1'))"
/*
guarded formula characterizing all satisfying traces:
"∃ tv tr #i.
  (SystemInitialized( tv, tr ) @ #i) ∧
  (tr = ('1'+'1'+'1'+'1'+'1'+'1'+'1'+'1'))"
*/
simplify
solve( SystemInitialized( tv, ('1'+'1'+'1'+'1'+'1'+'1'+'1'+'1') ) @ #i )
  case Init
  solve( TvTmp( tv ) ▶₂ #i )
    case increment_Tv
    solve( TrTmp( ('1'+'1'+'1'+'1'+'1'+'1'+'1'+'1') ) ▶₃ #i )
      case increment_Tr
      solve( TvTmp( tv ) ▶₀ #vr )
        case increment_Tv
        solve( TrTmp( ('1'+'1'+'1'+'1'+'1'+'1'+'1') ) ▶₀ #vr.1 )
          case increment_Tr
          solve( TvTmp( tv ) ▶₀ #vr.2 )
            case increment_Tv
            solve( TrTmp( ('1'+'1'+'1'+'1'+'1'+'1') ) ▶₀ #vr.3 )
              case increment_Tr
              solve( TvTmp( tv ) ▶₀ #vr.4 )
                case increment_Tv
                solve( TrTmp( ('1'+'1'+'1'+'1'+'1') ) ▶₀ #vr.5 )
                  case increment_Tr
                  solve( TvTmp( tv ) ▶₀ #vr.6 )
                    case init_parameters
                    solve( TrTmp( ('1'+'1'+'1'+'1') ) ▶₀ #vr.7 )
                      case increment_Tr
                      solve( TrTmp( ('1'+'1'+'1') ) ▶₀ #vr.9 )
                        case increment_Tr
                        solve( TrTmp( ('1'+'1') ) ▶₀ #vr.10 )
                          case increment_Tr
                          solve( TrTmp( '1' ) ▶₀ #vr.11 )
                            case init_parameters
                            SOLVED // trace found
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma exists_par_tv_2 [heuristic=I]:
  exists-trace
  "∃ tv tr #i. (SystemInitialized( tv, tr ) @ #i) ∧ (tv = ('1'+'1'))"
/*
guarded formula characterizing all satisfying traces:
"∃ tv tr #i. (SystemInitialized( tv, tr ) @ #i) ∧ (tv = ('1'+'1'))"
*/
simplify
solve( SystemInitialized( ('1'+'1'), tr ) @ #i )
  case Init
  solve( TvTmp( ('1'+'1') ) ▶₂ #i )
    case increment_Tv
    solve( TrTmp( tr ) ▶₃ #i )
      case increment_Tr
      solve( TvTmp( '1' ) ▶₀ #vr )
        case init_parameters
        solve( TrTmp( tr ) ▶₀ #vr.1 )
          case increment_Tr
          solve( TrTmp( tr ) ▶₀ #vr.3 )
            case init_parameters
            SOLVED // trace found
          qed
        qed
      qed
    qed
  qed
qed

lemma exists_par_tv_4 [heuristic=I]:
  exists-trace
  "∃ tv tr #i.
    (SystemInitialized( tv, tr ) @ #i) ∧ (tv = ('1'+'1'+'1'+'1'))"
/*
guarded formula characterizing all satisfying traces:
"∃ tv tr #i.
  (SystemInitialized( tv, tr ) @ #i) ∧ (tv = ('1'+'1'+'1'+'1'))"
*/
simplify
solve( SystemInitialized( ('1'+'1'+'1'+'1'), tr ) @ #i )
  case Init
  solve( TvTmp( ('1'+'1'+'1'+'1') ) ▶₂ #i )
    case increment_Tv
    solve( TrTmp( tr ) ▶₃ #i )
      case init_parameters
      solve( TvTmp( ('1'+'1'+'1') ) ▶₀ #vr )
        case increment_Tv
        solve( TvTmp( ('1'+'1') ) ▶₀ #vr.2 )
          case increment_Tv
          solve( TvTmp( '1' ) ▶₀ #vr.3 )
            case init_parameters
            SOLVED // trace found
          qed
        qed
      qed
    qed
  qed
qed

lemma no_signing_after_timeout [heuristic=I]:
  all-traces
  "∀ m t ps #i.
    (Signed( <m, t>, ps ) @ #i) ⇒
    (∃ t2 #j. ((NewTimeout( t2 ) @ #j) ∧ (#j < #i)) ∧ (∃ z. (t+z) = t2))"
/*
guarded formula characterizing all counter-examples:
"∃ m t ps #i.
  (Signed( <m, t>, ps ) @ #i)
 ∧
  ∀ t2 #j.
   (NewTimeout( t2 ) @ #j) ⇒ ((¬(#j < #i)) ∨ (∀ z. ((t+z) = t2) ⇒ ⊥))"
*/
simplify
solve( !Time( t ) ▶₀ #i )
  case Init_case_1
  by contradiction /* from formulas */
next
  case Init_case_2
  by contradiction /* from formulas */
next
  case Init_case_3
  by contradiction /* from formulas */
next
  case Init_case_4
  by contradiction /* from formulas */
next
  case advance_time
  solve( !Timeout( ('1'+t+z) ) ▶₁ #i )
    case Init_case_1
    by contradiction /* from formulas */
  next
    case Init_case_2
    by contradiction /* from formulas */
  next
    case Init_case_3
    by contradiction /* from formulas */
  next
    case Init_case_4
    by contradiction /* from formulas */
  next
    case Init_case_5
    by contradiction /* from formulas */
  next
    case Init_case_6
    by contradiction /* from formulas */
  next
    case Init_case_7
    by contradiction /* from formulas */
  next
    case Init_case_8
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_01
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_02
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_03
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_04
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_05
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_06
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_07
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_08
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_09
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_10
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_11
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_12
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_13
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_14
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_15
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_16
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_17
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_18
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_19
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_20
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_21
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_22
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_23
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_24
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_25
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_26
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_27
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_28
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_29
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_30
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_31
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_32
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_33
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_34
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_35
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_36
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_37
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_38
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_39
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_40
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_41
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_42
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_43
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_44
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_45
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_46
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_47
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_no_revoke_case_48
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_01
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_02
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_03
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_04
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_05
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_06
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_07
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_08
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_09
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_10
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_11
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_12
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_13
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_14
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_15
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_16
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_17
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_18
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_19
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_20
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_21
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_22
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_23
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_24
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_25
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_26
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_27
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_28
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_29
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_30
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_31
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_32
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_33
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_34
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_35
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_36
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_37
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_38
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_39
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_40
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_41
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_42
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_43
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_44
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_45
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_46
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_47
    by contradiction /* from formulas */
  next
    case TC_process_heartbeat_revoke_case_48
    by contradiction /* from formulas */
  qed
qed

lemma no_signing_after_revoking_pseudonym [heuristic=I]:
  all-traces
  "∀ msg ps #i.
    (Signed( msg, ps ) @ #i) ⇒
    (¬(∃ t2 #j. (PseudonymRevoked( ps, t2 ) @ #j) ∧ (#j < #i)))"
/*
guarded formula characterizing all counter-examples:
"∃ msg ps #i.
  (Signed( msg, ps ) @ #i)
 ∧
  ∃ t2 #j. (PseudonymRevoked( ps, t2 ) @ #j) ∧ #j < #i"
*/
simplify
by contradiction /* from formulas */

lemma all_heartbeats_processed_within_tolerance [heuristic=o "oracle.py"]:
  all-traces
  "∀ prl t_hb t #i.
    (HeartbeatProcessed( <prl, t_hb>, t ) @ #i) ⇒
    (∃ tv tr #j.
      ((SystemInitialized( tv, tr ) @ #j) ∧ (#j < #i)) ∧
      (((t_hb+tv) = t) ∨ (∃ z. (t_hb+tv) = (t+z))))"
/*
guarded formula characterizing all counter-examples:
"∃ prl t_hb t #i.
  (HeartbeatProcessed( <prl, t_hb>, t ) @ #i)
 ∧
  ∀ tv tr #j.
   (SystemInitialized( tv, tr ) @ #j)
  ⇒
   ((¬(#j < #i)) ∨ ((¬((t_hb+tv) = t)) ∧ (∀ z. ((t_hb+tv) = (t+z)) ⇒ ⊥)))"
*/
simplify
solve( HeartbeatProcessed( <prl, t_hb>, t ) @ #i )
  case TC_process_heartbeat_no_revoke
  solve( !Pseudonym( ps ) ▶₂ #i )
    case Init_case_1
    solve( !Parameters( tv, tr ) ▶₁ #i )
      case Init
      solve( (('1'+t_hb) = t)  ∥ (∃ z. (('1'+t_hb) = (t+z))) )
        case case_1
        by contradiction /* from formulas */
      next
        case case_2_case_1
        by contradiction /* from formulas */
      next
        case case_2_case_2
        by contradiction /* from formulas */
      next
        case case_2_case_3
        by contradiction /* from formulas */
      next
        case case_2_case_4
        by contradiction /* from formulas */
      qed
    qed
  next
    case Init_case_2
    solve( !Parameters( tv, tr ) ▶₁ #i )
      case Init
      solve( (('1'+t_hb) = t)  ∥ (∃ z. (('1'+t_hb) = (t+z))) )
        case case_1
        by contradiction /* from formulas */
      next
        case case_2_case_1
        by contradiction /* from formulas */
      next
        case case_2_case_2
        by contradiction /* from formulas */
      next
        case case_2_case_3
        by contradiction /* from formulas */
      next
        case case_2_case_4
        by contradiction /* from formulas */
      qed
    qed
  next
    case Init_case_3
    solve( !Parameters( tv, tr ) ▶₁ #i )
      case Init
      solve( (('1'+t_hb+tv) = t)  ∥ (∃ z. (('1'+t_hb+tv) = (t+z))) )
        case case_1
        by contradiction /* from formulas */
      next
        case case_2_case_01
        by contradiction /* from formulas */
      next
        case case_2_case_02
        by contradiction /* from formulas */
      next
        case case_2_case_03
        by contradiction /* from formulas */
      next
        case case_2_case_04
        by contradiction /* from formulas */
      next
        case case_2_case_05
        by contradiction /* from formulas */
      next
        case case_2_case_06
        by contradiction /* from formulas */
      next
        case case_2_case_07
        by contradiction /* from formulas */
      next
        case case_2_case_08
        by contradiction /* from formulas */
      next
        case case_2_case_09
        by contradiction /* from formulas */
      next
        case case_2_case_10
        by contradiction /* from formulas */
      next
        case case_2_case_11
        by contradiction /* from formulas */
      next
        case case_2_case_12
        by contradiction /* from formulas */
      next
        case case_2_case_13
        by contradiction /* from formulas */
      next
        case case_2_case_14
        by contradiction /* from formulas */
      next
        case case_2_case_15
        by contradiction /* from formulas */
      next
        case case_2_case_16
        by contradiction /* from formulas */
      qed
    qed
  next
    case Init_case_4
    solve( !Parameters( tv, tr ) ▶₁ #i )
      case Init
      solve( (('1'+t_hb+tv) = t)  ∥ (∃ z. (('1'+t_hb+tv) = (t+z))) )
        case case_1
        by contradiction /* from formulas */
      next
        case case_2_case_01
        by contradiction /* from formulas */
      next
        case case_2_case_02
        by contradiction /* from formulas */
      next
        case case_2_case_03
        by contradiction /* from formulas */
      next
        case case_2_case_04
        by contradiction /* from formulas */
      next
        case case_2_case_05
        by contradiction /* from formulas */
      next
        case case_2_case_06
        by contradiction /* from formulas */
      next
        case case_2_case_07
        by contradiction /* from formulas */
      next
        case case_2_case_08
        by contradiction /* from formulas */
      next
        case case_2_case_09
        by contradiction /* from formulas */
      next
        case case_2_case_10
        by contradiction /* from formulas */
      next
        case case_2_case_11
        by contradiction /* from formulas */
      next
        case case_2_case_12
        by contradiction /* from formulas */
      next
        case case_2_case_13
        by contradiction /* from formulas */
      next
        case case_2_case_14
        by contradiction /* from formulas */
      next
        case case_2_case_15
        by contradiction /* from formulas */
      next
        case case_2_case_16
        by contradiction /* from formulas */
      qed
    qed
  qed
next
  case TC_process_heartbeat_revoke
  solve( !Pseudonym( ps ) ▶₂ #i )
    case Init_case_1
    solve( !Parameters( tv, tr ) ▶₁ #i )
      case Init
      solve( (('1'+t_hb) = t)  ∥ (∃ z. (('1'+t_hb) = (t+z))) )
        case case_1
        by contradiction /* from formulas */
      next
        case case_2_case_1
        by contradiction /* from formulas */
      next
        case case_2_case_2
        by contradiction /* from formulas */
      next
        case case_2_case_3
        by contradiction /* from formulas */
      next
        case case_2_case_4
        by contradiction /* from formulas */
      qed
    qed
  next
    case Init_case_2
    solve( !Parameters( tv, tr ) ▶₁ #i )
      case Init
      solve( (('1'+t_hb) = t)  ∥ (∃ z. (('1'+t_hb) = (t+z))) )
        case case_1
        by contradiction /* from formulas */
      next
        case case_2_case_1
        by contradiction /* from formulas */
      next
        case case_2_case_2
        by contradiction /* from formulas */
      next
        case case_2_case_3
        by contradiction /* from formulas */
      next
        case case_2_case_4
        by contradiction /* from formulas */
      qed
    qed
  next
    case Init_case_3
    solve( !Parameters( tv, tr ) ▶₁ #i )
      case Init
      solve( (('1'+t_hb+tv) = t)  ∥ (∃ z. (('1'+t_hb+tv) = (t+z))) )
        case case_1
        by contradiction /* from formulas */
      next
        case case_2_case_01
        by contradiction /* from formulas */
      next
        case case_2_case_02
        by contradiction /* from formulas */
      next
        case case_2_case_03
        by contradiction /* from formulas */
      next
        case case_2_case_04
        by contradiction /* from formulas */
      next
        case case_2_case_05
        by contradiction /* from formulas */
      next
        case case_2_case_06
        by contradiction /* from formulas */
      next
        case case_2_case_07
        by contradiction /* from formulas */
      next
        case case_2_case_08
        by contradiction /* from formulas */
      next
        case case_2_case_09
        by contradiction /* from formulas */
      next
        case case_2_case_10
        by contradiction /* from formulas */
      next
        case case_2_case_11
        by contradiction /* from formulas */
      next
        case case_2_case_12
        by contradiction /* from formulas */
      next
        case case_2_case_13
        by contradiction /* from formulas */
      next
        case case_2_case_14
        by contradiction /* from formulas */
      next
        case case_2_case_15
        by contradiction /* from formulas */
      next
        case case_2_case_16
        by contradiction /* from formulas */
      qed
    qed
  next
    case Init_case_4
    solve( !Parameters( tv, tr ) ▶₁ #i )
      case Init
      solve( (('1'+t_hb+tv) = t)  ∥ (∃ z. (('1'+t_hb+tv) = (t+z))) )
        case case_1
        by contradiction /* from formulas */
      next
        case case_2_case_01
        by contradiction /* from formulas */
      next
        case case_2_case_02
        by contradiction /* from formulas */
      next
        case case_2_case_03
        by contradiction /* from formulas */
      next
        case case_2_case_04
        by contradiction /* from formulas */
      next
        case case_2_case_05
        by contradiction /* from formulas */
      next
        case case_2_case_06
        by contradiction /* from formulas */
      next
        case case_2_case_07
        by contradiction /* from formulas */
      next
        case case_2_case_08
        by contradiction /* from formulas */
      next
        case case_2_case_09
        by contradiction /* from formulas */
      next
        case case_2_case_10
        by contradiction /* from formulas */
      next
        case case_2_case_11
        by contradiction /* from formulas */
      next
        case case_2_case_12
        by contradiction /* from formulas */
      next
        case case_2_case_13
        by contradiction /* from formulas */
      next
        case case_2_case_14
        by contradiction /* from formulas */
      next
        case case_2_case_15
        by contradiction /* from formulas */
      next
        case case_2_case_16
        by contradiction /* from formulas */
      qed
    qed
  qed
qed

lemma all_messages_accepted_signed_exists [reuse,
                                           heuristic=o "oracle.py"]:
  all-traces
  "∀ msg ps t #i.
    (MessageAccepted( msg, ps, t ) @ #i) ⇒
    (∃ #j. (Signed( msg, ps ) @ #j) ∧ (#j < #i))"
/*
guarded formula characterizing all counter-examples:
"∃ msg ps t #i.
  (MessageAccepted( msg, ps, t ) @ #i)
 ∧
  ∀ #j. (Signed( msg, ps ) @ #j) ⇒ ¬(#j < #i)"
*/
simplify
solve( !Pseudonym( pk(x) ) ▶₂ #i )
  case Init_case_1
  solve( !Parameters( tv, tr ) ▶₁ #i )
    case Init
    solve( !KU( sign(<m, t_v2v>, ~ps_key) ) @ #vk.4 )
      case TC_sign_message_case_1
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_2
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_3
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_4
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_5
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_6
      by contradiction /* from formulas */
    next
      case c_sign
      by solve( !KU( ~ps_key ) @ #vk.5 )
    qed
  qed
next
  case Init_case_2
  solve( !Parameters( tv, tr ) ▶₁ #i )
    case Init
    solve( !KU( sign(<m, t_v2v>, ~ps_key) ) @ #vk.4 )
      case TC_sign_message_case_01
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_02
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_03
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_04
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_05
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_06
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_07
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_08
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_09
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_10
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_11
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_12
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_13
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_14
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_15
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_16
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_17
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_18
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_19
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_20
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_21
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_22
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_23
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_24
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_25
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_26
      by contradiction /* from formulas */
    next
      case c_sign
      by solve( !KU( ~ps_key ) @ #vk.5 )
    qed
  qed
next
  case Init_case_3
  solve( !Parameters( tv, tr ) ▶₁ #i )
    case Init
    solve( !KU( sign(<m, t_v2v>, ~ps_key) ) @ #vk.4 )
      case TC_sign_message_case_1
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_2
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_3
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_4
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_5
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_6
      by contradiction /* from formulas */
    next
      case c_sign
      by solve( !KU( ~ps_key ) @ #vk.5 )
    qed
  qed
next
  case Init_case_4
  solve( !Parameters( tv, tr ) ▶₁ #i )
    case Init
    solve( !KU( sign(<m, t_v2v>, ~ps_key) ) @ #vk.4 )
      case TC_sign_message_case_01
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_02
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_03
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_04
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_05
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_06
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_07
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_08
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_09
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_10
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_11
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_12
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_13
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_14
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_15
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_16
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_17
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_18
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_19
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_20
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_21
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_22
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_23
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_24
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_25
      by contradiction /* from formulas */
    next
      case TC_sign_message_case_26
      by contradiction /* from formulas */
    next
      case c_sign
      by solve( !KU( ~ps_key ) @ #vk.5 )
    qed
  qed
qed

lemma all_messages_accepted_within_tolerance [reuse,
                                              heuristic=o "oracle.py"]:
  all-traces
  "∀ m t_v2v ps t #i.
    (MessageAccepted( <m, t_v2v>, ps, t ) @ #i) ⇒
    (∃ tv tr #j.
      ((SystemInitialized( tv, tr ) @ #j) ∧ (#j < #i)) ∧
      (((t_v2v+tv) = t) ∨ (∃ z. (t_v2v+tv) = (t+z))))"
/*
guarded formula characterizing all counter-examples:
"∃ m t_v2v ps t #i.
  (MessageAccepted( <m, t_v2v>, ps, t ) @ #i)
 ∧
  ∀ tv tr #j.
   (SystemInitialized( tv, tr ) @ #j)
  ⇒
   ((¬(#j < #i)) ∨ ((¬((t_v2v+tv) = t)) ∧ (∀ z. ((t_v2v+tv) = (t+z)) ⇒ ⊥)))"
*/
simplify
solve( !Pseudonym( pk(x) ) ▶₂ #i )
  case Init_case_1
  solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
    case Init
    solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
      case Init
      solve( !Parameters( tv, tr ) ▶₁ #i )
        case Init
        solve( (('1'+t_v2v) = t)  ∥ (∃ z. (('1'+t_v2v) = (t+z))) )
          case case_1
          by contradiction /* from formulas */
        next
          case case_2_case_1
          by contradiction /* from formulas */
        next
          case case_2_case_2
          by contradiction /* from formulas */
        next
          case case_2_case_3
          by contradiction /* from formulas */
        next
          case case_2_case_4
          by contradiction /* from formulas */
        qed
      qed
    qed
  qed
next
  case Init_case_2
  solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
    case Init
    solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
      case Init
      solve( !Parameters( tv, tr ) ▶₁ #i )
        case Init
        solve( (('1'+t_v2v) = t)  ∥ (∃ z. (('1'+t_v2v) = (t+z))) )
          case case_1
          by contradiction /* from formulas */
        next
          case case_2_case_1
          by contradiction /* from formulas */
        next
          case case_2_case_2
          by contradiction /* from formulas */
        next
          case case_2_case_3
          by contradiction /* from formulas */
        next
          case case_2_case_4
          by contradiction /* from formulas */
        qed
      qed
    qed
  qed
next
  case Init_case_3
  solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
    case Init
    solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
      case Init
      solve( !Parameters( tv, tr ) ▶₁ #i )
        case Init
        solve( (('1'+t_v2v+tv) = t)  ∥ (∃ z. (('1'+t_v2v+tv) = (t+z))) )
          case case_1
          by contradiction /* from formulas */
        next
          case case_2_case_01
          by contradiction /* from formulas */
        next
          case case_2_case_02
          by contradiction /* from formulas */
        next
          case case_2_case_03
          by contradiction /* from formulas */
        next
          case case_2_case_04
          by contradiction /* from formulas */
        next
          case case_2_case_05
          by contradiction /* from formulas */
        next
          case case_2_case_06
          by contradiction /* from formulas */
        next
          case case_2_case_07
          by contradiction /* from formulas */
        next
          case case_2_case_08
          by contradiction /* from formulas */
        next
          case case_2_case_09
          by contradiction /* from formulas */
        next
          case case_2_case_10
          by contradiction /* from formulas */
        next
          case case_2_case_11
          by contradiction /* from formulas */
        next
          case case_2_case_12
          by contradiction /* from formulas */
        next
          case case_2_case_13
          by contradiction /* from formulas */
        next
          case case_2_case_14
          by contradiction /* from formulas */
        next
          case case_2_case_15
          by contradiction /* from formulas */
        next
          case case_2_case_16
          by contradiction /* from formulas */
        qed
      qed
    qed
  qed
next
  case Init_case_4
  solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
    case Init
    solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
      case Init
      solve( !Parameters( tv, tr ) ▶₁ #i )
        case Init
        solve( (('1'+t_v2v+tv) = t)  ∥ (∃ z. (('1'+t_v2v+tv) = (t+z))) )
          case case_1
          by contradiction /* from formulas */
        next
          case case_2_case_01
          by contradiction /* from formulas */
        next
          case case_2_case_02
          by contradiction /* from formulas */
        next
          case case_2_case_03
          by contradiction /* from formulas */
        next
          case case_2_case_04
          by contradiction /* from formulas */
        next
          case case_2_case_05
          by contradiction /* from formulas */
        next
          case case_2_case_06
          by contradiction /* from formulas */
        next
          case case_2_case_07
          by contradiction /* from formulas */
        next
          case case_2_case_08
          by contradiction /* from formulas */
        next
          case case_2_case_09
          by contradiction /* from formulas */
        next
          case case_2_case_10
          by contradiction /* from formulas */
        next
          case case_2_case_11
          by contradiction /* from formulas */
        next
          case case_2_case_12
          by contradiction /* from formulas */
        next
          case case_2_case_13
          by contradiction /* from formulas */
        next
          case case_2_case_14
          by contradiction /* from formulas */
        next
          case case_2_case_15
          by contradiction /* from formulas */
        next
          case case_2_case_16
          by contradiction /* from formulas */
        qed
      qed
    qed
  qed
qed

lemma all_signatures_before_t [reuse, heuristic=o "oracle.py"]:
  all-traces
  "∀ m t ps #i.
    (Signed( <m, t>, ps ) @ #i) ⇒
    (∃ tv tr #j.
      ((SystemInitialized( tv, tr ) @ #j) ∧ (#j < #i)) ∧
      (¬(∃ t_rev #k.
          ((RevocationIssued( ps, t_rev ) @ #k) ∧ (#k < #i)) ∧
          ((t = (t_rev+tr+tv)) ∨ (∃ z. t = (t_rev+tr+tv+z))))))"
/*
guarded formula characterizing all counter-examples:
"∃ m t ps #i.
  (Signed( <m, t>, ps ) @ #i)
 ∧
  ∀ tv tr #j.
   (SystemInitialized( tv, tr ) @ #j)
  ⇒
   ((¬(#j < #i)) ∨
    (∃ t_rev #k.
      (RevocationIssued( ps, t_rev ) @ #k)
     ∧
      (#k < #i) ∧ (((t = (t_rev+tr+tv)) ∨ (∃ z. (t = (t_rev+tr+tv+z)))))))"
*/
simplify
solve( !Pseudonym( ps ) ▶₂ #i )
  case Init_case_1
  solve( !Pseudonym( pk(~ps_key) ) ▶₁ #k )
    case Init
    solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #i )
      case Init
      solve( !PRL( prl, cnt ) ▶₂ #k )
        case Init
        solve( (t = ('1'+'1'+t_rev))  ∥ (∃ z. (t = ('1'+'1'+t_rev+z))) )
          case case_1
          solve( !Time( ('1'+'1'+t_rev) ) ▶₀ #i )
            case advance_time
            solve( !Time( ('1'+t_rev) ) ▶₀ #vr.2 )
              case advance_time
              solve( (¬(#vr.2 < #k))  ∥ (∀ z. (('1'+'1'+t_rev) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+t_rev) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( !Timeout( ('1'+'1'+t_rev+z) ) ▶₁ #i )
                    case TC_process_heartbeat_no_revoke
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.5 < #k))  ∥ (∀ z.1. (('1'+t_rev+z) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+z))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* cyclic */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* cyclic */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_revoke
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case case_2
          solve( !Time( ('1'+'1'+t_rev+z) ) ▶₀ #i )
            case advance_time
            solve( !Time( ('1'+t_rev+z) ) ▶₀ #vr.2 )
              case advance_time
              solve( (¬(#vr.2 < #k))  ∥
                     (∀ z.1. (('1'+'1'+t_rev+z) = (t_rev+z.1)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.3 < #k))  ∥ (∀ z.1. (('1'+t_rev+z) = (t_rev+z.1)) ⇒ ⊥) )
                  case case_1
                  solve( !Timeout( ('1'+'1'+t_rev+z+z.1) ) ▶₁ #i )
                    case TC_process_heartbeat_no_revoke
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.5 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t) = ('1'+t_rev+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* cyclic */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* cyclic */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_revoke
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case Init_case_2
  solve( !Pseudonym( pk(~ps_key) ) ▶₁ #k )
    case Init
    solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #i )
      case Init
      solve( !PRL( prl, cnt ) ▶₂ #k )
        case Init
        solve( (t = ('1'+'1'+t_rev+tr))  ∥ (∃ z. (t = ('1'+'1'+t_rev+tr+z))) )
          case case_1
          solve( !Time( ('1'+'1'+t_rev+tr) ) ▶₀ #i )
            case advance_time
            solve( !Time( ('1'+t_rev+tr) ) ▶₀ #vr.3 )
              case advance_time
              solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+'1'+t_rev+tr) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.4 < #k))  ∥ (∀ z. (('1'+t_rev+tr) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( !Timeout( ('1'+'1'+t_rev+tr+z) ) ▶₁ #i )
                    case TC_process_heartbeat_no_revoke_case_01
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+t_rev+z) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+z))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* cyclic */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_02
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z. (('1'+t_rev+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+t) = ('1'+t_rev+z+x.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* cyclic */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_03
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+t) = ('1'+t_rev+tr))  ∥
                               (∃ z. (('1'+'1'+t) = ('1'+t_rev+tr+z))) )
                          case case_1_case_1
                          by contradiction /* from formulas */
                        next
                          case case_1_case_2
                          by contradiction /* from formulas */
                        next
                          case case_1_case_3
                          by contradiction /* from formulas */
                        next
                          case case_1_case_4
                          by contradiction /* from formulas */
                        next
                          case case_2_case_1
                          by contradiction /* from formulas */
                        next
                          case case_2_case_2
                          by contradiction /* cyclic */
                        next
                          case case_2_case_3
                          by contradiction /* from formulas */
                        next
                          case case_2_case_4
                          by contradiction /* from formulas */
                        next
                          case case_2_case_5
                          by contradiction /* from formulas */
                        next
                          case case_2_case_6
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_04
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z. (('1'+t_rev+tr+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+tr+x))  ∥
                                 (∃ z. (('1'+'1'+t) = ('1'+t_rev+tr+x+z))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* cyclic */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* cyclic */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_05
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+t_rev+z) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+z))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* cyclic */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_06
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+t_rev+z) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+z))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* cyclic */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_07
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+t_rev+z) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+z))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* cyclic */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_08
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z. (('1'+t_rev+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t) = ('1'+t_rev+x+z+x.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* cyclic */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_09
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+t_rev+z) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+z))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* cyclic */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_10
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z. (('1'+t_rev+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+t) = ('1'+t_rev+z+x.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* cyclic */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_11
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+t_rev+z) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+z))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* cyclic */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_12
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+x+z+x.1) = (x+x.1+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+x+z+x.1+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* cyclic */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_13
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+x+z+x.2) = (x+z.1+x.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+x+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+x+z+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* cyclic */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_14
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+tr+x+z) = (tr+x+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+tr+x+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* cyclic */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_15
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (x+z+x.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+x+x.1+x.2+x.3))  ∥
                                 (∃ z. (('1'+'1'+t) = ('1'+x+z+x.1+x.2+x.3))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* cyclic */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_16
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+x+z+x.2) = (x+z.1+x.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+x+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+x+z+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* cyclic */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_17
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z. (('1'+x+x.2+x.3+x.4) = (x+z+x.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+x+x.2+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+t) = ('1'+x+z+x.2+x.3+x.4))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* cyclic */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_revoke_case_01
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_02
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_03
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_04
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_05
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_06
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_07
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_08
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_09
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_10
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_11
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_12
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_13
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_14
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_15
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_16
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_17
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case case_2
          solve( !Time( ('1'+'1'+t_rev+tr+z) ) ▶₀ #i )
            case advance_time
            solve( !Time( ('1'+t_rev+tr+z) ) ▶₀ #vr.3 )
              case advance_time
              solve( (¬(#vr.3 < #k))  ∥
                     (∀ z.1. (('1'+'1'+t_rev+tr+z) = (t_rev+z.1)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.4 < #k))  ∥ (∀ z.1. (('1'+t_rev+tr+z) = (t_rev+z.1)) ⇒ ⊥) )
                  case case_1
                  solve( !Timeout( ('1'+'1'+t_rev+tr+z+z.1) ) ▶₁ #i )
                    case TC_process_heartbeat_no_revoke_case_01
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t) = ('1'+t_rev+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* cyclic */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_02
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+z+x.1+x.2) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+z+x.1+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* cyclic */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_03
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+x+z+x.2) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+x+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+x+z+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* cyclic */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_04
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+t_rev+x+x.2+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+x+x.2+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+t) = ('1'+t_rev+x+z+x.2+x.3+x.4))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* cyclic */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_05
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t) = ('1'+t_rev+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* cyclic */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_06
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+x+z+x.1) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+x+z+x.1+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* cyclic */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_07
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+x+z+x.1) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+x+z+x.1+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* cyclic */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_08
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+t_rev+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+x+x.1+x.2+x.3))  ∥
                                 (∃ z. (('1'+'1'+t) = ('1'+t_rev+x+z+x.1+x.2+x.3))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* cyclic */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_09
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t) = ('1'+t_rev+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* cyclic */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_10
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+z+x.1+x.2) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+z+x.1+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* cyclic */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_11
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t) = ('1'+t_rev+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* cyclic */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_12
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+x+z+x.2) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+x+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+x+z+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* cyclic */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_13
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+t) = ('1'+t_rev+tr+z))  ∥
                               (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+tr+z+z.1))) )
                          case case_1_case_1
                          by contradiction /* from formulas */
                        next
                          case case_1_case_2
                          by contradiction /* from formulas */
                        next
                          case case_1_case_3
                          by contradiction /* from formulas */
                        next
                          case case_1_case_4
                          by contradiction /* from formulas */
                        next
                          case case_1_case_5
                          by contradiction /* from formulas */
                        next
                          case case_1_case_6
                          by contradiction /* from formulas */
                        next
                          case case_2_case_1
                          by contradiction /* from formulas */
                        next
                          case case_2_case_2
                          by contradiction /* from formulas */
                        next
                          case case_2_case_3
                          by contradiction /* cyclic */
                        next
                          case case_2_case_4
                          by contradiction /* from formulas */
                        next
                          case case_2_case_5
                          by contradiction /* from formulas */
                        next
                          case case_2_case_6
                          by contradiction /* from formulas */
                        next
                          case case_2_case_7
                          by contradiction /* from formulas */
                        next
                          case case_2_case_8
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_14
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tr+x+z) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+tr+x+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* cyclic */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* cyclic */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_15
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+t_rev+tr+z) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+tr+z))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+tr+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* cyclic */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_16
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tr+x+z) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+tr+x+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* cyclic */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_17
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t) = ('1'+t_rev+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* cyclic */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_18
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t) = ('1'+t_rev+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* cyclic */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_19
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t) = ('1'+t_rev+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* cyclic */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_20
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t) = ('1'+t_rev+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* cyclic */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_21
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+x+z+x.1) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+x+z+x.1+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* cyclic */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_22
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t) = ('1'+t_rev+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* cyclic */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_23
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+x+z+x.1) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+x+z+x.1+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* cyclic */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_24
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+x+z+x.1) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+x+z+x.1+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* cyclic */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_25
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+t_rev+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+x+x.1+x.2+x.3))  ∥
                                 (∃ z. (('1'+'1'+t) = ('1'+t_rev+x+z+x.1+x.2+x.3))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* cyclic */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_26
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+x+z+x.1) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+x+z+x.1+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* cyclic */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_27
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t) = ('1'+t_rev+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* cyclic */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_28
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+z+x.1+x.2) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+z+x.1+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* cyclic */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_29
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+x+z+x.2) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+x+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+x+z+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* cyclic */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_30
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+t_rev+x+x.2+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+x+x.2+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+t) = ('1'+t_rev+x+z+x.2+x.3+x.4))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* cyclic */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_31
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t) = ('1'+t_rev+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* cyclic */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_32
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+z+x.1+x.2) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+z+x.1+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* cyclic */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_33
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t) = ('1'+t_rev+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* cyclic */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_34
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+x+z+x.2) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+x+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+x+z+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* cyclic */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_35
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+t_rev+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t) = ('1'+t_rev+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* cyclic */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_36
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+x+z+x.1+z.1) = (x+x.1+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+x+z+x.1+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t) = ('1'+x+z+x.1+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* cyclic */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_37
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+x+z+z.1+x.2) = (x+x.2+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+x+z+z.1+x.2))  ∥
                                 (∃ z.2. (('1'+'1'+t) = ('1'+x+z+z.1+x.2+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* cyclic */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_38
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+x+z+x.1+z.1) = (x+x.1+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+x+z+x.1+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t) = ('1'+x+z+x.1+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* cyclic */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_39
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+x+z+x.1+z.1) = (x+x.1+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+x+z+x.1+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t) = ('1'+x+z+x.1+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* cyclic */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_40
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+x+z+x.1+x.2+x.3) = (x+x.1+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* cyclic */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_41
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+x+z+x.1+x.2+x.3) = (x+z.1+x.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* cyclic */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_42
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+x+z+z.1+x.2) = (x+x.2+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+x+z+z.1+x.2))  ∥
                                 (∃ z.2. (('1'+'1'+t) = ('1'+x+z+z.1+x.2+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* cyclic */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_43
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+x+z+z.1+x.2) = (x+x.2+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+x+z+z.1+x.2))  ∥
                                 (∃ z.2. (('1'+'1'+t) = ('1'+x+z+z.1+x.2+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* cyclic */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_44
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+x+z+x.2+x.3+x.4) = (x+z.1+x.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+x+z+x.2+x.3+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+x+z+z.1+x.2+x.3+x.4))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* cyclic */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_45
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+x+z+x.1+x.3+x.4) = (x+z.1+x.3)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+x+z+x.1+x.3+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+x+z+x.1+z.1+x.3+x.4))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* cyclic */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_46
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.2. (('1'+tr+x+z+z.1) = (tr+x+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+tr+x+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t) = ('1'+tr+x+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* cyclic */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_47
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+x+z+x.1+x.2+x.3) = (x+x.1+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* cyclic */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_48
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+x+z+x.1+x.2+x.3) = (x+z.1+x.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* cyclic */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_49
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+x+z+z.1+x.2) = (x+x.2+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+x+z+z.1+x.2))  ∥
                                 (∃ z.2. (('1'+'1'+t) = ('1'+x+z+z.1+x.2+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* cyclic */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_50
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+x+x.1+x.2+x.3+x.4+x.5) = (x+z+x.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+x+x.1+x.2+x.3+x.4+x.5))  ∥
                                 (∃ z. (('1'+'1'+t) = ('1'+x+z+x.1+x.2+x.3+x.4+x.5))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_1_case_11
                            by contradiction /* from formulas */
                          next
                            case case_1_case_12
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* cyclic */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          next
                            case case_2_case_13
                            by contradiction /* from formulas */
                          next
                            case case_2_case_14
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_51
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+x+z+x.2+x.3+x.4) = (x+z.1+x.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+x+z+x.2+x.3+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+x+z+z.1+x.2+x.3+x.4))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* cyclic */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_52
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+x+z+x.1+x.3+x.4) = (x+z.1+x.3)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+x+z+x.1+x.3+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+t) = ('1'+x+z+x.1+z.1+x.3+x.4))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* cyclic */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_53
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+x+x.1+x.3+x.4+x.5+x.6) = (x+z+x.3)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t) = ('1'+x+x.1+x.3+x.4+x.5+x.6))  ∥
                                 (∃ z. (('1'+'1'+t) = ('1'+x+z+x.1+x.3+x.4+x.5+x.6))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_1_case_11
                            by contradiction /* from formulas */
                          next
                            case case_1_case_12
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* cyclic */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          next
                            case case_2_case_13
                            by contradiction /* from formulas */
                          next
                            case case_2_case_14
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_revoke_case_01
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_02
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_03
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_04
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_05
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_06
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_07
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_08
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_09
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_10
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_11
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_12
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_13
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_14
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_15
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_16
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_17
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_18
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_19
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_20
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_21
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_22
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_23
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_24
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_25
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_26
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_27
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_28
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_29
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_30
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_31
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_32
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_33
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_34
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_35
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_36
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_37
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_38
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_39
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_40
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_41
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_42
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_43
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_44
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_45
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_46
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_47
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_48
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_49
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_50
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_51
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_52
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_53
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case Init_case_3
  solve( !Pseudonym( pk(~ps_key) ) ▶₁ #k )
    case Init
    solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #i )
      case Init
      solve( !PRL( prl, cnt ) ▶₂ #k )
        case Init
        solve( (t = ('1'+'1'+t_rev+tv))  ∥ (∃ z. (t = ('1'+'1'+t_rev+tv+z))) )
          case case_1
          solve( !Time( ('1'+'1'+t_rev+tv) ) ▶₀ #i )
            case advance_time
            solve( !Time( ('1'+t_rev+tv) ) ▶₀ #vr.3 )
              case advance_time
              solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+'1'+t_rev+tv) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.4 < #k))  ∥ (∀ z. (('1'+t_rev+tv) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( !Timeout( ('1'+'1'+t_rev+tv+z) ) ▶₁ #i )
                    case TC_process_heartbeat_no_revoke
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+t_rev+tv+z) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_revoke
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case case_2
          solve( !Time( ('1'+'1'+t_rev+tv+z) ) ▶₀ #i )
            case advance_time
            solve( !Time( ('1'+t_rev+tv+z) ) ▶₀ #vr.3 )
              case advance_time
              solve( (¬(#vr.3 < #k))  ∥
                     (∀ z.1. (('1'+'1'+t_rev+tv+z) = (t_rev+z.1)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.4 < #k))  ∥ (∀ z.1. (('1'+t_rev+tv+z) = (t_rev+z.1)) ⇒ ⊥) )
                  case case_1
                  solve( !Timeout( ('1'+'1'+t_rev+tv+z+z.1) ) ▶₁ #i )
                    case TC_process_heartbeat_no_revoke
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tv+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_revoke
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      qed
    qed
  qed
next
  case Init_case_4
  solve( !Pseudonym( pk(~ps_key) ) ▶₁ #k )
    case Init
    solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #i )
      case Init
      solve( !PRL( prl, cnt ) ▶₂ #k )
        case Init
        solve( (t = ('1'+'1'+t_rev+tr+tv))  ∥
               (∃ z. (t = ('1'+'1'+t_rev+tr+tv+z))) )
          case case_1
          solve( !Time( ('1'+'1'+t_rev+tr+tv) ) ▶₀ #i )
            case advance_time
            solve( !Time( ('1'+t_rev+tr+tv) ) ▶₀ #vr.3 )
              case advance_time
              solve( (¬(#vr.3 < #k))  ∥
                     (∀ z. (('1'+'1'+t_rev+tr+tv) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.4 < #k))  ∥ (∀ z. (('1'+t_rev+tr+tv) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( !Timeout( ('1'+'1'+t_rev+tr+tv+z) ) ▶₁ #i )
                    case TC_process_heartbeat_no_revoke_case_01
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+t_rev+tv+z) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_02
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+t_rev+tv+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+x.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_03
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+z+x.1+x.2) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_04
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+t_rev+x.1+x.2+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+x.1+x.2+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+x.2+x.3+x.4))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_05
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+t_rev+tv+z) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_06
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z. (('1'+t_rev+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_07
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+x+z+x.1) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_08
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+t_rev+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+x.1+x.2+x.3))  ∥
                                 (∃ z. (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1+x.2+x.3))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_09
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+t_rev+tv+z) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_10
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+t_rev+tv+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+x.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_11
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+t_rev+tv+z) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_12
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+z+x.1+x.2) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_13
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+t+tv) = ('1'+t_rev+tr+tv))  ∥
                               (∃ z. (('1'+'1'+t+tv) = ('1'+t_rev+tr+tv+z))) )
                          case case_1_case_1
                          by contradiction /* from formulas */
                        next
                          case case_1_case_2
                          by contradiction /* from formulas */
                        next
                          case case_1_case_3
                          by contradiction /* from formulas */
                        next
                          case case_1_case_4
                          by contradiction /* from formulas */
                        next
                          case case_2_case_1
                          by contradiction /* from formulas */
                        next
                          case case_2_case_2
                          by contradiction /* from formulas */
                        next
                          case case_2_case_3
                          by contradiction /* from formulas */
                        next
                          case case_2_case_4
                          by contradiction /* from formulas */
                        next
                          case case_2_case_5
                          by contradiction /* from formulas */
                        next
                          case case_2_case_6
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_14
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z. (('1'+t_rev+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tr+tv+x))  ∥
                                 (∃ z. (('1'+'1'+t+tv) = ('1'+t_rev+tr+tv+x+z))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_15
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+t_rev+tr+z) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr) = ('1'+t_rev+tr+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr) = ('1'+t_rev+tr+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_16
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tr+x+z) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+x) = ('1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+t_rev+tr+x+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_17
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+t_rev+tv+z) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_18
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+t_rev+tv+z) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_19
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+t_rev+tv+z) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_20
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+t_rev+tv+z) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_21
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z. (('1'+t_rev+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_22
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+t_rev+tv+z) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_23
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z. (('1'+t_rev+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_24
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+x+z+x.1) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_25
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+t_rev+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+x.1+x.2+x.3))  ∥
                                 (∃ z. (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1+x.2+x.3))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_26
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+x+z+x.1) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_27
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+t_rev+tv+z) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_28
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+t_rev+tv+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+x.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_29
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+z+x.1+x.2) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_30
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+t_rev+x.1+x.2+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+x.1+x.2+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+x.2+x.3+x.4))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_31
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+t_rev+tv+z) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_32
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+t_rev+tv+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+x.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_33
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+t_rev+tv+z) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_34
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+z+x.1+x.2) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_35
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+t_rev+tv+z) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_36
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+tv+x+z+x.1) = (x+x.1+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_37
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+tv+x+z+x.2) = (x+z.1+x.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+tv+x+z+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_38
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+tv+x+z+x.1) = (x+x.1+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_39
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+tv+x+z+x.1) = (x+x.1+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_40
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+tv+x+x.1+x.2+x.3) = (x+z+x.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+x.1+x.2+x.3))  ∥
                                 (∃ z. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+x.2+x.3))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_41
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+x+z+x.1+x.2+x.3) = (x+z.1+x.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.3) = ('1'+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+x.1+x.3) = ('1'+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_42
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+tv+x+z+x.2) = (x+z.1+x.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+tv+x+z+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_43
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+tv+x+z+x.2) = (x+z.1+x.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+tv+x+z+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_44
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+tv+x+x.2+x.3+x.4) = (x+z+x.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+x.2+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.2+x.3+x.4))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_45
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+x+z+x.2+x.3+x.4) = (x+z.1+x.3)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.2+x.4) = ('1'+x+z+x.2+x.3+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+t+x.2+x.4) = ('1'+x+z+z.1+x.2+x.3+x.4))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_46
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+tr+tv+x+z) = (tr+x+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tr+tv+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+tr+tv+x+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_47
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+tv+x+x.1+x.2+x.3) = (x+z+x.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+x.1+x.2+x.3))  ∥
                                 (∃ z. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+x.2+x.3))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_48
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+x+z+x.1+x.2+x.3) = (x+z.1+x.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.3) = ('1'+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+x.1+x.3) = ('1'+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_49
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥ (∀ z.1. (('1'+tv+x+z+x.2) = (x+z.1+x.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+tv+x+z+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_50
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+x+x.1+x.2+x.3+x.4+x.5) = (x+z+x.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.3) = ('1'+x+x.1+x.2+x.3+x.4+x.5))  ∥
                                 (∃ z. (('1'+'1'+t+x.1+x.3) = ('1'+x+z+x.1+x.2+x.3+x.4+x.5))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_51
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+tv+x+x.2+x.3+x.4) = (x+z+x.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+x.2+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.2+x.3+x.4))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_52
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+x+z+x.2+x.3+x.4) = (x+z.1+x.3)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.2+x.4) = ('1'+x+z+x.2+x.3+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+t+x.2+x.4) = ('1'+x+z+z.1+x.2+x.3+x.4))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_53
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+x+x.2+x.3+x.4+x.5+x.6) = (x+z+x.3)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.2+x.4) = ('1'+x+x.2+x.3+x.4+x.5+x.6))  ∥
                                 (∃ z. (('1'+'1'+t+x.2+x.4) = ('1'+x+z+x.2+x.3+x.4+x.5+x.6))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_revoke_case_01
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_02
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_03
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_04
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_05
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_06
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_07
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_08
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_09
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_10
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_11
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_12
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_13
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_14
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_15
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_16
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_17
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_18
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_19
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_20
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_21
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_22
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_23
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_24
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_25
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_26
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_27
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_28
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_29
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_30
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_31
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_32
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_33
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_34
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_35
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_36
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_37
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_38
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_39
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_40
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_41
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_42
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_43
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_44
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_45
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_46
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_47
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_48
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_49
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_50
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_51
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_52
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_53
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          qed
        next
          case case_2
          solve( !Time( ('1'+'1'+t_rev+tr+tv+z) ) ▶₀ #i )
            case advance_time
            solve( !Time( ('1'+t_rev+tr+tv+z) ) ▶₀ #vr.3 )
              case advance_time
              solve( (¬(#vr.3 < #k))  ∥
                     (∀ z.1. (('1'+'1'+t_rev+tr+tv+z) = (t_rev+z.1)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.4 < #k))  ∥
                       (∀ z.1. (('1'+t_rev+tr+tv+z) = (t_rev+z.1)) ⇒ ⊥) )
                  case case_1
                  solve( !Timeout( ('1'+'1'+t_rev+tr+tv+z+z.1) ) ▶₁ #i )
                    case TC_process_heartbeat_no_revoke_case_001
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tv+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_002
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+z+x.1+x.2) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+x.1+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_003
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+x+z+x.2) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_004
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+t_rev+tv+x+x.2+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+x.2+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.2+x.3+x.4))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_005
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+z+x.1+z.1+x.2) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+z.1+x.2))  ∥
                                 (∃ z.2. (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+z.1+x.2+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_006
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+z+x.1+x.2+x.3+x.4) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+x.2+x.3+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+z.1+x.2+x.3+x.4))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_007
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+x+z+x.2+x.3+x.4) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.2+x.3) = ('1'+t_rev+x+z+x.2+x.3+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+t+x.2+x.3) = ('1'+t_rev+x+z+z.1+x.2+x.3+x.4))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_008
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+t_rev+x+x.2+x.3+x.4+x.5+x.6) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.2+x.3) = ('1'+t_rev+x+x.2+x.3+x.4+x.5+x.6))  ∥
                                 (∃ z. (('1'+'1'+t+x.2+x.3) = ('1'+t_rev+x+z+x.2+x.3+x.4+x.5+x.6))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_009
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tv+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_010
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+x+z+x.1) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_011
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+x+z+x.1) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_012
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+t_rev+tv+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+x.1+x.2+x.3))  ∥
                                 (∃ z. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1+x.2+x.3))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_013
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+x+z+x.1+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_014
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+x+z+x.1+x.2+x.3) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_015
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+x+z+x.1+x.2+x.3) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_016
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+t_rev+x+x.1+x.2+x.3+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+x+x.1+x.2+x.3+x.4+x.5))  ∥
                                 (∃ z. (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+x+z+x.1+x.2+x.3+x.4+x.5))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_017
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tv+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_018
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+z+x.1+x.2) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+x.1+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_019
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+x+z+x.2) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_020
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+t_rev+tv+x+x.2+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+x.2+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.2+x.3+x.4))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_021
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tv+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_022
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tv+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_023
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+z+x.1+x.2) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+x.1+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_024
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+x+z+x.2) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_025
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+z+x.1+z.1+x.2) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+z.1+x.2))  ∥
                                 (∃ z.2. (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+z.1+x.2+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_026
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+z+x.1+x.2+x.3+x.4) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+x.2+x.3+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+z.1+x.2+x.3+x.4))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_027
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+z+x.1+z.1+x.2) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+z.1+x.2))  ∥
                                 (∃ z.2. (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+z.1+x.2+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_028
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+x+z+x.2+x.3+x.4) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.2+x.3) = ('1'+t_rev+x+z+x.2+x.3+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+t+x.2+x.3) = ('1'+t_rev+x+z+z.1+x.2+x.3+x.4))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_029
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tv+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_030
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+x+z+x.1) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_031
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+x+z+x.1) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_032
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+t_rev+tv+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+x.1+x.2+x.3))  ∥
                                 (∃ z. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1+x.2+x.3))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_033
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tv+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_034
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tv+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_035
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+x+z+x.1) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_036
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+x+z+x.1) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_037
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+x+z+x.1+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_038
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+x+z+x.1+x.2+x.3) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_039
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+x+z+x.1+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_040
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+x+z+x.1+x.2+x.3) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_041
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tv+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_042
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+z+x.1+x.2) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+x.1+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_043
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tv+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_044
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+x+z+x.2) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_045
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tv+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_046
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+z+x.1+z.1+x.2) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+z.1+x.2))  ∥
                                 (∃ z.2. (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+z.1+x.2+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_047
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+t+tv) = ('1'+t_rev+tr+tv+z))  ∥
                               (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tr+tv+z+z.1))) )
                          case case_1_case_1
                          by contradiction /* from formulas */
                        next
                          case case_1_case_2
                          by contradiction /* from formulas */
                        next
                          case case_1_case_3
                          by contradiction /* from formulas */
                        next
                          case case_1_case_4
                          by contradiction /* from formulas */
                        next
                          case case_1_case_5
                          by contradiction /* from formulas */
                        next
                          case case_1_case_6
                          by contradiction /* from formulas */
                        next
                          case case_2_case_1
                          by contradiction /* from formulas */
                        next
                          case case_2_case_2
                          by contradiction /* from formulas */
                        next
                          case case_2_case_3
                          by contradiction /* from formulas */
                        next
                          case case_2_case_4
                          by contradiction /* from formulas */
                        next
                          case case_2_case_5
                          by contradiction /* from formulas */
                        next
                          case case_2_case_6
                          by contradiction /* from formulas */
                        next
                          case case_2_case_7
                          by contradiction /* from formulas */
                        next
                          case case_2_case_8
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_048
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tr+tv+x+z) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tr+tv+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tr+tv+x+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_049
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tr+tv+z) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tr+tv+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tr+tv+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_050
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tr+tv+x+z) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tr+tv+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tr+tv+x+z+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_051
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tr+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr) = ('1'+t_rev+tr+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tr) = ('1'+t_rev+tr+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_052
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tr+x+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+x) = ('1'+t_rev+tr+x+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tr+x) = ('1'+t_rev+tr+x+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_053
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tv+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_054
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tv+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_055
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tv+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_056
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tv+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_057
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tv+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_058
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+x+z+x.1) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_059
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tv+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_060
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+x+z+x.1) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_061
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+x+z+x.1) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_062
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+t_rev+tv+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+x.1+x.2+x.3))  ∥
                                 (∃ z. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1+x.2+x.3))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_063
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+x+z+x.1) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_064
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tv+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_065
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tv+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_066
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+x+z+x.1) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_067
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+x+z+x.1) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_068
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tv+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_069
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+x+z+x.1) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_070
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+t_rev+tv+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+x.1+x.2+x.3))  ∥
                                 (∃ z. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1+x.2+x.3))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_071
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+x+z+x.1) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.1+z.1))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_072
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+x+z+x.1+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_073
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+x+z+x.1+x.2+x.3) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_074
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+x+z+x.1+x.2+x.3) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_075
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+t_rev+x+x.1+x.2+x.3+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+x+x.1+x.2+x.3+x.4+x.5))  ∥
                                 (∃ z. (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+x+z+x.1+x.2+x.3+x.4+x.5))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_076
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+x+z+x.1+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_077
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+x+z+x.1+x.2+x.3) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_078
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+x+z+x.1+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_079
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+x+z+x.1+x.2+x.3) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_080
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+x+z+x.1+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+x+x.1) = ('1'+t_rev+x+z+x.1+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_081
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tv+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_082
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+z+x.1+x.2) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+x.1+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_083
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+x+z+x.2) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_084
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+t_rev+tv+x+x.2+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+x.2+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.2+x.3+x.4))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_085
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+z+x.1+z.1+x.2) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+z.1+x.2))  ∥
                                 (∃ z.2. (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+z.1+x.2+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_086
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+z+x.1+x.2+x.3+x.4) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+x.2+x.3+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+z.1+x.2+x.3+x.4))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_087
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+x+z+x.2+x.3+x.4) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.2+x.3) = ('1'+t_rev+x+z+x.2+x.3+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+t+x.2+x.3) = ('1'+t_rev+x+z+z.1+x.2+x.3+x.4))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_088
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+t_rev+x+x.2+x.3+x.4+x.5+x.6) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.2+x.3) = ('1'+t_rev+x+x.2+x.3+x.4+x.5+x.6))  ∥
                                 (∃ z. (('1'+'1'+t+x.2+x.3) = ('1'+t_rev+x+z+x.2+x.3+x.4+x.5+x.6))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_089
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tv+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_090
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+z+x.1+x.2) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+x.1+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_091
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+x+z+x.2) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_092
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+t_rev+tv+x+x.2+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+x.2+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.2+x.3+x.4))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_093
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tv+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_094
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tv+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_095
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+z+x.1+x.2) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+x.1+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_096
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+x+z+x.2) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_097
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+z+x.1+z.1+x.2) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+z.1+x.2))  ∥
                                 (∃ z.2. (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+z.1+x.2+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_098
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+z+x.1+x.2+x.3+x.4) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+x.2+x.3+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+z.1+x.2+x.3+x.4))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_099
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+z+x.1+z.1+x.2) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+z.1+x.2))  ∥
                                 (∃ z.2. (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+z.1+x.2+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_100
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+x+z+x.2+x.3+x.4) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.2+x.3) = ('1'+t_rev+x+z+x.2+x.3+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+t+x.2+x.3) = ('1'+t_rev+x+z+z.1+x.2+x.3+x.4))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_101
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tv+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_102
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+z+x.1+x.2) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+x.1+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_103
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tv+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_104
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+t_rev+tv+x+z+x.2) = (t_rev+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+x+z+z.1+x.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_105
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tv+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_106
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+z+x.1+z.1+x.2) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+z.1+x.2))  ∥
                                 (∃ z.2. (('1'+'1'+t+x.1+x.2) = ('1'+t_rev+z+x.1+z.1+x.2+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_107
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+t_rev+tv+z+z.1) = (t_rev+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_1
                            by contradiction /* from formulas */
                          next
                            case case_2_case_2
                            by contradiction /* from formulas */
                          next
                            case case_2_case_3
                            by contradiction /* from formulas */
                          next
                            case case_2_case_4
                            by contradiction /* from formulas */
                          next
                            case case_2_case_5
                            by contradiction /* from formulas */
                          next
                            case case_2_case_6
                            by contradiction /* from formulas */
                          next
                            case case_2_case_7
                            by contradiction /* from formulas */
                          next
                            case case_2_case_8
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case RA_generate_heartbeat_case_3
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_108
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+tv+x+z+x.1+z.1) = (x+x.1+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_109
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+tv+x+z+z.1+x.2) = (x+x.2+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+z.1+x.2))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+tv+x+z+z.1+x.2+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_110
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+tv+x+z+x.1+z.1) = (x+x.1+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_111
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+tv+x+z+x.1+z.1) = (x+x.1+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_112
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+tv+x+z+x.1+z.1) = (x+x.1+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_113
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+tv+x+z+x.1+x.2+x.3) = (x+x.1+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_114
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+tv+x+z+x.1+x.2+x.3) = (x+z.1+x.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_115
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+x+z+x.1+z.1+x.2+x.3) = (x+x.2+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.3) = ('1'+x+z+x.1+z.1+x.2+x.3))  ∥
                                 (∃ z.2. (('1'+'1'+t+x.1+x.3) = ('1'+x+z+x.1+z.1+x.2+z.2+x.3))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_116
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+tv+x+z+z.1+x.2) = (x+x.2+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+z.1+x.2))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+tv+x+z+z.1+x.2+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_117
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+tv+x+z+z.1+x.2) = (x+x.2+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+z.1+x.2))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+tv+x+z+z.1+x.2+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_118
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+tv+x+z+z.1+x.2) = (x+x.2+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+z.1+x.2))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+tv+x+z+z.1+x.2+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_119
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+tv+x+z+x.2+x.3+x.4) = (x+z.1+x.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.2+x.3+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+tv+x+z+z.1+x.2+x.3+x.4))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_120
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+tv+x+z+x.1+x.3+x.4) = (x+z.1+x.3)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+x.3+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+z.1+x.3+x.4))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_121
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+x+z+z.1+x.2+x.3+x.4) = (x+z.2+x.3)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.2+x.4) = ('1'+x+z+z.1+x.2+x.3+x.4))  ∥
                                 (∃ z.2. (('1'+'1'+t+x.2+x.4) = ('1'+x+z+z.1+x.2+z.2+x.3+x.4))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_122
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+tv+x+z+x.1+z.1) = (x+x.1+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_123
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+tv+x+z+x.1+z.1) = (x+x.1+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_124
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+tv+x+z+x.1+z.1) = (x+x.1+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_125
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+tv+x+z+x.1+x.2+x.3) = (x+x.1+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_126
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+tv+x+z+x.1+x.2+x.3) = (x+z.1+x.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_127
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+tv+x+z+x.1+x.2+x.3) = (x+x.1+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_128
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+tv+x+z+x.1+x.2+x.3) = (x+z.1+x.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_129
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+x+z+x.1+z.1+x.2+x.3) = (x+x.2+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.3) = ('1'+x+z+x.1+z.1+x.2+x.3))  ∥
                                 (∃ z.2. (('1'+'1'+t+x.1+x.3) = ('1'+x+z+x.1+z.1+x.2+z.2+x.3))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_130
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+x+z+x.1+z.1+x.2+x.3) = (x+x.2+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.3) = ('1'+x+z+x.1+z.1+x.2+x.3))  ∥
                                 (∃ z.2. (('1'+'1'+t+x.1+x.3) = ('1'+x+z+x.1+z.1+x.2+z.2+x.3))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_131
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+tv+x+z+z.1+x.2) = (x+x.2+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+z.1+x.2))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+tv+x+z+z.1+x.2+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_132
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+tv+x+z+z.1+x.2) = (x+x.2+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+z.1+x.2))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+tv+x+z+z.1+x.2+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_133
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+tv+x+z+z.1+x.2) = (x+x.2+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+z.1+x.2))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+tv+x+z+z.1+x.2+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_134
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+tv+x+x.1+x.2+x.3+x.4+x.5) = (x+z+x.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+x.1+x.2+x.3+x.4+x.5))  ∥
                                 (∃ z. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+x.2+x.3+x.4+x.5))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_1_case_11
                            by contradiction /* from formulas */
                          next
                            case case_1_case_12
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          next
                            case case_2_case_13
                            by contradiction /* from formulas */
                          next
                            case case_2_case_14
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_135
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+x+z+x.1+x.2+x.3+x.4+x.5) = (x+z.1+x.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.3) = ('1'+x+z+x.1+x.2+x.3+x.4+x.5))  ∥
                                 (∃ z.1. (('1'+'1'+t+x.1+x.3) = ('1'+x+z+x.1+z.1+x.2+x.3+x.4+x.5))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_136
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+x+z+x.1+x.2+x.3+x.4+x.5) = (x+z.1+x.3)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.2+x.4) = ('1'+x+z+x.1+x.2+x.3+x.4+x.5))  ∥
                                 (∃ z.1. (('1'+'1'+t+x.2+x.4) = ('1'+x+z+x.1+z.1+x.2+x.3+x.4+x.5))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_137
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+tv+x+z+x.2+x.3+x.4) = (x+z.1+x.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.2+x.3+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+tv+x+z+z.1+x.2+x.3+x.4))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_138
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+tv+x+z+x.1+x.3+x.4) = (x+z.1+x.3)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+x.3+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+z.1+x.3+x.4))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_139
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+tv+x+z+x.2+x.3+x.4) = (x+z.1+x.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.2+x.3+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+tv+x+z+z.1+x.2+x.3+x.4))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_140
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+tv+x+z+x.1+x.3+x.4) = (x+z.1+x.3)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+x.3+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+z.1+x.3+x.4))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_141
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+x+z+z.1+x.2+x.3+x.4) = (x+z.2+x.3)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.2+x.4) = ('1'+x+z+z.1+x.2+x.3+x.4))  ∥
                                 (∃ z.2. (('1'+'1'+t+x.2+x.4) = ('1'+x+z+z.1+x.2+z.2+x.3+x.4))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_142
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+x+z+z.1+x.2+x.3+x.4) = (x+z.2+x.3)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.2+x.4) = ('1'+x+z+z.1+x.2+x.3+x.4))  ∥
                                 (∃ z.2. (('1'+'1'+t+x.2+x.4) = ('1'+x+z+z.1+x.2+z.2+x.3+x.4))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_143
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+tv+x+x.1+x.3+x.4+x.5+x.6) = (x+z+x.3)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+x.1+x.3+x.4+x.5+x.6))  ∥
                                 (∃ z. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+x.3+x.4+x.5+x.6))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_1_case_11
                            by contradiction /* from formulas */
                          next
                            case case_1_case_12
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          next
                            case case_2_case_13
                            by contradiction /* from formulas */
                          next
                            case case_2_case_14
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_144
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+x+z+x.2+x.3+x.4+x.5+x.6) = (x+z.1+x.3)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.2+x.4) = ('1'+x+z+x.2+x.3+x.4+x.5+x.6))  ∥
                                 (∃ z.1. (('1'+'1'+t+x.2+x.4) = ('1'+x+z+z.1+x.2+x.3+x.4+x.5+x.6))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_145
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+x+z+x.1+x.3+x.4+x.5+x.6) = (x+z.1+x.4)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.3+x.5) = ('1'+x+z+x.1+x.3+x.4+x.5+x.6))  ∥
                                 (∃ z.1. (('1'+'1'+t+x.3+x.5) = ('1'+x+z+x.1+z.1+x.3+x.4+x.5+x.6))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_146
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+tr+tv+x+z+z.1) = (tr+x+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tr+tv+x+z+z.1))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+tr+tv+x+z+z.1+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_147
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+tv+x+z+x.1+x.2+x.3) = (x+x.1+z.1)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_148
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+tv+x+z+x.1+x.2+x.3) = (x+z.1+x.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_149
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+x+z+x.1+z.1+x.2+x.3) = (x+x.2+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.3) = ('1'+x+z+x.1+z.1+x.2+x.3))  ∥
                                 (∃ z.2. (('1'+'1'+t+x.1+x.3) = ('1'+x+z+x.1+z.1+x.2+z.2+x.3))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_150
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+tv+x+z+z.1+x.2) = (x+x.2+z.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+z.1+x.2))  ∥
                                 (∃ z.2. (('1'+'1'+t+tv) = ('1'+tv+x+z+z.1+x.2+z.2))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_151
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+tv+x+x.1+x.2+x.3+x.4+x.5) = (x+z+x.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+x.1+x.2+x.3+x.4+x.5))  ∥
                                 (∃ z. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+x.2+x.3+x.4+x.5))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_1_case_11
                            by contradiction /* from formulas */
                          next
                            case case_1_case_12
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          next
                            case case_2_case_13
                            by contradiction /* from formulas */
                          next
                            case case_2_case_14
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_152
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+x+z+x.1+x.2+x.3+x.4+x.5) = (x+z.1+x.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.1+x.3) = ('1'+x+z+x.1+x.2+x.3+x.4+x.5))  ∥
                                 (∃ z.1. (('1'+'1'+t+x.1+x.3) = ('1'+x+z+x.1+z.1+x.2+x.3+x.4+x.5))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_153
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+x+z+x.1+x.2+x.3+x.4+x.5) = (x+z.1+x.3)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.2+x.4) = ('1'+x+z+x.1+x.2+x.3+x.4+x.5))  ∥
                                 (∃ z.1. (('1'+'1'+t+x.2+x.4) = ('1'+x+z+x.1+z.1+x.2+x.3+x.4+x.5))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_154
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+tv+x+z+x.2+x.3+x.4) = (x+z.1+x.2)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.2+x.3+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+tv+x+z+z.1+x.2+x.3+x.4))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_155
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+tv+x+z+x.1+x.3+x.4) = (x+z.1+x.3)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+x.3+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+z.1+x.3+x.4))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_156
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.2. (('1'+x+z+z.1+x.2+x.3+x.4) = (x+z.2+x.3)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.2+x.4) = ('1'+x+z+z.1+x.2+x.3+x.4))  ∥
                                 (∃ z.2. (('1'+'1'+t+x.2+x.4) = ('1'+x+z+z.1+x.2+z.2+x.3+x.4))) )
                            case case_1_case_1
                            by contradiction /* from formulas */
                          next
                            case case_1_case_2
                            by contradiction /* from formulas */
                          next
                            case case_1_case_3
                            by contradiction /* from formulas */
                          next
                            case case_1_case_4
                            by contradiction /* from formulas */
                          next
                            case case_1_case_5
                            by contradiction /* from formulas */
                          next
                            case case_1_case_6
                            by contradiction /* from formulas */
                          next
                            case case_1_case_7
                            by contradiction /* from formulas */
                          next
                            case case_1_case_8
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_157
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+x+x.1+x.2+x.3+x.4+x.5+x.6+x.7) = (x+z+x.3)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.2+x.4) = ('1'+x+x.1+x.2+x.3+x.4+x.5+x.6+x.7))  ∥
                                 (∃ z. (('1'+'1'+t+x.2+x.4) = ('1'+x+z+x.1+x.2+x.3+x.4+x.5+x.6+x.7))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_1_case_11
                            by contradiction /* from formulas */
                          next
                            case case_1_case_12
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          next
                            case case_2_case_13
                            by contradiction /* from formulas */
                          next
                            case case_2_case_14
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_158
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+tv+x+x.1+x.3+x.4+x.5+x.6) = (x+z+x.3)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv) = ('1'+tv+x+x.1+x.3+x.4+x.5+x.6))  ∥
                                 (∃ z. (('1'+'1'+t+tv) = ('1'+tv+x+z+x.1+x.3+x.4+x.5+x.6))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_1_case_11
                            by contradiction /* from formulas */
                          next
                            case case_1_case_12
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          next
                            case case_2_case_13
                            by contradiction /* from formulas */
                          next
                            case case_2_case_14
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_159
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+x+z+x.2+x.3+x.4+x.5+x.6) = (x+z.1+x.3)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.2+x.4) = ('1'+x+z+x.2+x.3+x.4+x.5+x.6))  ∥
                                 (∃ z.1. (('1'+'1'+t+x.2+x.4) = ('1'+x+z+z.1+x.2+x.3+x.4+x.5+x.6))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_160
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z.1. (('1'+x+z+x.1+x.3+x.4+x.5+x.6) = (x+z.1+x.4)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.3+x.5) = ('1'+x+z+x.1+x.3+x.4+x.5+x.6))  ∥
                                 (∃ z.1. (('1'+'1'+t+x.3+x.5) = ('1'+x+z+x.1+z.1+x.3+x.4+x.5+x.6))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_no_revoke_case_161
                    solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
                      case RA_generate_heartbeat_case_1
                      solve( (¬(#vr.6 < #k))  ∥
                             (∀ z. (('1'+x+x.1+x.3+x.4+x.5+x.6+x.7+x.8) = (x+z+x.4)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#k < #vr.7))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x.3+x.5) = ('1'+x+x.1+x.3+x.4+x.5+x.6+x.7+x.8))  ∥
                                 (∃ z. (('1'+'1'+t+x.3+x.5) = ('1'+x+z+x.1+x.3+x.4+x.5+x.6+x.7+x.8))) )
                            case case_1_case_01
                            by contradiction /* from formulas */
                          next
                            case case_1_case_02
                            by contradiction /* from formulas */
                          next
                            case case_1_case_03
                            by contradiction /* from formulas */
                          next
                            case case_1_case_04
                            by contradiction /* from formulas */
                          next
                            case case_1_case_05
                            by contradiction /* from formulas */
                          next
                            case case_1_case_06
                            by contradiction /* from formulas */
                          next
                            case case_1_case_07
                            by contradiction /* from formulas */
                          next
                            case case_1_case_08
                            by contradiction /* from formulas */
                          next
                            case case_1_case_09
                            by contradiction /* from formulas */
                          next
                            case case_1_case_10
                            by contradiction /* from formulas */
                          next
                            case case_1_case_11
                            by contradiction /* from formulas */
                          next
                            case case_1_case_12
                            by contradiction /* from formulas */
                          next
                            case case_2_case_01
                            by contradiction /* from formulas */
                          next
                            case case_2_case_02
                            by contradiction /* from formulas */
                          next
                            case case_2_case_03
                            by contradiction /* from formulas */
                          next
                            case case_2_case_04
                            by contradiction /* from formulas */
                          next
                            case case_2_case_05
                            by contradiction /* from formulas */
                          next
                            case case_2_case_06
                            by contradiction /* from formulas */
                          next
                            case case_2_case_07
                            by contradiction /* from formulas */
                          next
                            case case_2_case_08
                            by contradiction /* from formulas */
                          next
                            case case_2_case_09
                            by contradiction /* from formulas */
                          next
                            case case_2_case_10
                            by contradiction /* from formulas */
                          next
                            case case_2_case_11
                            by contradiction /* from formulas */
                          next
                            case case_2_case_12
                            by contradiction /* from formulas */
                          next
                            case case_2_case_13
                            by contradiction /* from formulas */
                          next
                            case case_2_case_14
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case RA_generate_heartbeat_case_2
                      by contradiction /* from formulas */
                    next
                      case c_sign
                      by solve( !KU( ~ltk ) @ #vk.5 )
                    qed
                  next
                    case TC_process_heartbeat_revoke_case_001
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_002
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_003
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_004
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_005
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_006
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_007
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_008
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_009
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_010
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_011
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_012
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_013
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_014
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_015
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_016
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_017
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_018
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_019
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_020
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_021
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_022
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_023
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_024
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_025
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_026
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_027
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_028
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_029
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_030
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_031
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_032
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_033
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_034
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_035
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_036
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_037
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_038
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_039
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_040
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_041
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_042
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_043
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_044
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_045
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_046
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_047
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_048
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_049
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_050
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_051
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_052
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_053
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_054
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_055
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_056
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_057
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_058
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_059
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_060
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_061
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_062
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_063
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_064
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_065
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_066
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_067
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_068
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_069
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_070
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_071
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_072
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_073
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_074
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_075
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_076
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_077
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_078
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_079
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_080
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_081
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_082
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_083
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_084
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_085
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_086
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_087
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_088
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_089
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_090
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_091
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_092
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_093
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_094
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_095
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_096
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_097
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_098
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_099
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_100
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_101
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_102
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_103
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_104
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_105
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_106
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_107
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_108
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_109
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_110
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_111
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_112
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_113
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_114
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_115
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_116
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_117
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_118
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_119
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_120
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_121
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_122
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_123
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_124
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_125
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_126
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_127
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_128
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_129
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_130
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_131
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_132
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_133
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_134
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_135
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_136
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_137
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_138
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_139
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_140
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_141
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_142
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_143
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_144
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_145
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_146
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_147
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_148
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_149
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_150
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_151
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_152
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_153
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_154
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_155
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_156
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_157
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_158
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_159
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_160
                    by contradiction /* from formulas */
                  next
                    case TC_process_heartbeat_revoke_case_161
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma no_messages_accepted_with_timestamp_t [reuse,
                                             heuristic=o "oracle.py"]:
  all-traces
  "∀ m t_v2v ps t #i.
    (MessageAccepted( <m, t_v2v>, ps, t ) @ #i) ⇒
    (∃ tv tr #j.
      ((SystemInitialized( tv, tr ) @ #j) ∧ (#j < #i)) ∧
      (¬(∃ t_rev #k.
          ((RevocationIssued( ps, t_rev ) @ #k) ∧ (#k < #i)) ∧
          ((t_v2v = (t_rev+tr+tv)) ∨ (∃ z. t_v2v = (t_rev+tr+tv+z))))))"
/*
guarded formula characterizing all counter-examples:
"∃ m t_v2v ps t #i.
  (MessageAccepted( <m, t_v2v>, ps, t ) @ #i)
 ∧
  ∀ tv tr #j.
   (SystemInitialized( tv, tr ) @ #j)
  ⇒
   ((¬(#j < #i)) ∨
    (∃ t_rev #k.
      (RevocationIssued( ps, t_rev ) @ #k)
     ∧
      (#k < #i) ∧
      (((t_v2v = (t_rev+tr+tv)) ∨ (∃ z. (t_v2v = (t_rev+tr+tv+z)))))))"
*/
simplify
solve( !Pseudonym( pk(x) ) ▶₂ #i )
  case Init_case_1
  solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j.1 )
    case Init
    solve( !Pseudonym( pk(~ps_key) ) ▶₁ #k )
      case Init
      solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j.1 )
        case Init
        solve( !PRL( prl, cnt ) ▶₂ #k )
          case Init
          solve( !Parameters( tv, tr ) ▶₁ #i )
            case Init
            solve( !KU( sign(<~m, t_v2v>, ~ps_key) ) @ #vk.4 )
              case TC_sign_message_case_1
              solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.9 )
                case RA_generate_heartbeat_case_1
                solve( (¬(#vr.2 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#k < #vr.4))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+t) = ('1'+'1'+t_rev))  ∥
                              (∃ z. (('1'+t) = ('1'+'1'+t_rev+z))) )
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( (¬(#k < #vr.4))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+t) = ('1'+'1'+t_rev))  ∥
                              (∃ z. (('1'+t) = ('1'+'1'+t_rev+z))) )
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case RA_generate_heartbeat_case_2
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_3
                solve( (¬(#vr.2 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#k < #vr.4))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+t) = ('1'+'1'+t_rev))  ∥
                           (∃ z. (('1'+t) = ('1'+'1'+t_rev+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( (¬(#k < #vr.4))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+t) = ('1'+'1'+t_rev))  ∥
                           (∃ z. (('1'+t) = ('1'+'1'+t_rev+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case RA_generate_heartbeat_case_4
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_5
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~ltk ) @ #vk.12 )
              qed
            next
              case TC_sign_message_case_2
              by contradiction /* from formulas */
            next
              case TC_sign_message_case_3
              solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.9 )
                case RA_generate_heartbeat_case_1
                solve( !Time( ('1'+x) ) ▶₀ #vr.2 )
                  case advance_time
                  solve( (¬(#vr.2 < #k))  ∥ (∀ z. (('1'+'1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.4 < #k))  ∥ (∀ z.1. (('1'+x+z) = (t_rev+z.1)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.4 < #k))  ∥ (∀ z.1. (('1'+x+z) = (t_rev+z.1)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_2
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~ltk ) @ #vk.13 )
              qed
            next
              case c_sign
              by solve( !KU( ~ps_key ) @ #vk.5 )
            qed
          qed
        qed
      qed
    qed
  qed
next
  case Init_case_2
  solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j.1 )
    case Init
    solve( !Pseudonym( pk(~ps_key) ) ▶₁ #k )
      case Init
      solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j.1 )
        case Init
        solve( !PRL( prl, cnt ) ▶₂ #k )
          case Init
          solve( !Parameters( tv, tr ) ▶₁ #i )
            case Init
            solve( !KU( sign(<~m, t_v2v>, ~ps_key) ) @ #vk.4 )
              case TC_sign_message_case_01
              solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.9 )
                case RA_generate_heartbeat_case_1
                solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+t) = ('1'+'1'+t_rev+tr))  ∥
                              (∃ z. (('1'+t) = ('1'+'1'+t_rev+tr+z))) )
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+t) = ('1'+'1'+t_rev+tr))  ∥
                              (∃ z. (('1'+t) = ('1'+'1'+t_rev+tr+z))) )
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case RA_generate_heartbeat_case_2
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_3
                solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+t) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+t) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+t) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+t) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case RA_generate_heartbeat_case_4
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_5
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~ltk ) @ #vk.12 )
              qed
            next
              case TC_sign_message_case_02
              by contradiction /* from formulas */
            next
              case TC_sign_message_case_03
              solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.9 )
                case RA_generate_heartbeat_case_1
                solve( !Time( ('1'+t) ) ▶₀ #vr.3 )
                  case advance_time
                  solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+'1'+t) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        by solve( (('1'+'1'+t) = ('1'+'1'+t_rev+z))  ∥
                                  (∃ z.1. (('1'+'1'+t) = ('1'+'1'+t_rev+z+z.1))) )
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        by solve( (('1'+'1'+t) = ('1'+'1'+t_rev+z))  ∥
                                  (∃ z.1. (('1'+'1'+t) = ('1'+'1'+t_rev+z+z.1))) )
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        by solve( (('1'+'1'+t) = ('1'+'1'+t_rev+z))  ∥
                                  (∃ z.1. (('1'+'1'+t) = ('1'+'1'+t_rev+z+z.1))) )
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        by solve( (('1'+'1'+t) = ('1'+'1'+t_rev+z))  ∥
                                  (∃ z.1. (('1'+'1'+t) = ('1'+'1'+t_rev+z+z.1))) )
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_2
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_3
                solve( !Time( ('1'+t) ) ▶₀ #vr.3 )
                  case advance_time
                  solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+'1'+t) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+t) = ('1'+'1'+t_rev+z))  ∥
                               (∃ z.1. (('1'+'1'+t) = ('1'+'1'+t_rev+z+z.1))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+t) = ('1'+'1'+t_rev+z))  ∥
                               (∃ z.1. (('1'+'1'+t) = ('1'+'1'+t_rev+z+z.1))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+t) = ('1'+'1'+t_rev+z))  ∥
                               (∃ z.1. (('1'+'1'+t) = ('1'+'1'+t_rev+z+z.1))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+t) = ('1'+'1'+t_rev+z))  ∥
                               (∃ z.1. (('1'+'1'+t) = ('1'+'1'+t_rev+z+z.1))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_4
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_5
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~ltk ) @ #vk.13 )
              qed
            next
              case TC_sign_message_case_04
              solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.9 )
                case RA_generate_heartbeat_case_1
                solve( !Time( ('1'+x) ) ▶₀ #vr.3 )
                  case advance_time
                  solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+'1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_2
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~ltk ) @ #vk.13 )
              qed
            next
              case TC_sign_message_case_05
              solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.9 )
                case RA_generate_heartbeat_case_1
                solve( !Time( ('1'+t+x) ) ▶₀ #vr.3 )
                  case advance_time
                  solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+'1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                                    (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                        next
                          case case_2
                          by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                                    (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                                    (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                        next
                          case case_2
                          by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                                    (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                                    (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                        next
                          case case_2
                          by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                                    (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                                    (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                        next
                          case case_2
                          by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                                    (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_2
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_3
                solve( !Time( ('1'+t+x) ) ▶₀ #vr.3 )
                  case advance_time
                  solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+'1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_4
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_5
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~ltk ) @ #vk.14 )
              qed
            next
              case TC_sign_message_case_06
              solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.9 )
                case RA_generate_heartbeat_case_1
                solve( !Time( ('1'+tr+x) ) ▶₀ #vr.3 )
                  case advance_time
                  solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+'1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z.1. (('1'+x+z) = (t_rev+z.1)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z.1. (('1'+x+z) = (t_rev+z.1)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_2
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~ltk ) @ #vk.14 )
              qed
            next
              case TC_sign_message_case_07
              solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.9 )
                case RA_generate_heartbeat_case_1
                solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.3 )
                  case advance_time
                  solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+'1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+x+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+x+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_2
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~ltk ) @ #vk.14 )
              qed
            next
              case TC_sign_message_case_08
              solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.9 )
                case RA_generate_heartbeat_case_1
                solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      by solve( (('1'+t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                                (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      by solve( (('1'+t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                                (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      by solve( (('1'+t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                                (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      by solve( (('1'+t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                                (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_2
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_3
                solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                             (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                             (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                             (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                             (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_4
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_5
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~ltk ) @ #vk.14 )
              qed
            next
              case TC_sign_message_case_09
              solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.9 )
                case RA_generate_heartbeat_case_1
                solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      by solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr))  ∥
                                (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+z))) )
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      by solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr))  ∥
                                (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+z))) )
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      by solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr))  ∥
                                (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+z))) )
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      by solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr))  ∥
                                (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+z))) )
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_2
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_3
                solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_4
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_5
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~ltk ) @ #vk.14 )
              qed
            next
              case TC_sign_message_case_10
              solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.9 )
                case RA_generate_heartbeat_case_1
                solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_2
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~ltk ) @ #vk.14 )
              qed
            next
              case TC_sign_message_case_11
              solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.9 )
                case RA_generate_heartbeat_case_1
                solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+x+x.3) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x.1+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+z+x.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x.1+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+z+x.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+x+x.3) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x.1+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+z+x.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x.1+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+z+x.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_2
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_3
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~ltk ) @ #vk.14 )
              qed
            next
              case c_sign
              by solve( !KU( ~ps_key ) @ #vk.5 )
            qed
          qed
        qed
      qed
    qed
  qed
next
  case Init_case_3
  solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j.1 )
    case Init
    solve( !Pseudonym( pk(~ps_key) ) ▶₁ #k )
      case Init
      solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j.1 )
        case Init
        solve( !PRL( prl, cnt ) ▶₂ #k )
          case Init
          solve( !Parameters( tv, tr ) ▶₁ #i )
            case Init
            solve( !KU( sign(<~m, t_v2v>, ~ps_key) ) @ #vk.4 )
              case TC_sign_message_case_1
              solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.9 )
                case RA_generate_heartbeat_case_1
                solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+t) = ('1'+'1'+t_rev+tv))  ∥
                              (∃ z. (('1'+t) = ('1'+'1'+t_rev+tv+z))) )
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+t) = ('1'+'1'+t_rev+tv))  ∥
                              (∃ z. (('1'+t) = ('1'+'1'+t_rev+tv+z))) )
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case RA_generate_heartbeat_case_2
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_3
                solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+t) = ('1'+'1'+t_rev+tv))  ∥
                           (∃ z. (('1'+t) = ('1'+'1'+t_rev+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+t) = ('1'+'1'+t_rev+tv))  ∥
                           (∃ z. (('1'+t) = ('1'+'1'+t_rev+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case RA_generate_heartbeat_case_4
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_5
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~ltk ) @ #vk.12 )
              qed
            next
              case TC_sign_message_case_2
              by contradiction /* from formulas */
            next
              case TC_sign_message_case_3
              solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.9 )
                case RA_generate_heartbeat_case_1
                solve( !Time( ('1'+x) ) ▶₀ #vr.3 )
                  case advance_time
                  solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+'1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z.1. (('1'+x+z) = (t_rev+z.1)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                                    (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                        next
                          case case_2
                          by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                                    (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                                    (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                        next
                          case case_2
                          by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                                    (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z.1. (('1'+x+z) = (t_rev+z.1)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                                    (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                        next
                          case case_2
                          by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                                    (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                                    (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                        next
                          case case_2
                          by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                                    (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_2
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_3
                solve( !Time( ('1'+x) ) ▶₀ #vr.3 )
                  case advance_time
                  solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+'1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z.1. (('1'+x+z) = (t_rev+z.1)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z.1. (('1'+x+z) = (t_rev+z.1)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_4
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_5
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~ltk ) @ #vk.13 )
              qed
            next
              case c_sign
              by solve( !KU( ~ps_key ) @ #vk.5 )
            qed
          qed
        qed
      qed
    qed
  qed
next
  case Init_case_4
  solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j.1 )
    case Init
    solve( !Pseudonym( pk(~ps_key) ) ▶₁ #k )
      case Init
      solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j.1 )
        case Init
        solve( !PRL( prl, cnt ) ▶₂ #k )
          case Init
          solve( !Parameters( tv, tr ) ▶₁ #i )
            case Init
            solve( !KU( sign(<~m, t_v2v>, ~ps_key) ) @ #vk.4 )
              case TC_sign_message_case_01
              solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.9 )
                case RA_generate_heartbeat_case_1
                solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+t) = ('1'+'1'+t_rev+tr+tv))  ∥
                              (∃ z. (('1'+t) = ('1'+'1'+t_rev+tr+tv+z))) )
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+t) = ('1'+'1'+t_rev+tr+tv))  ∥
                              (∃ z. (('1'+t) = ('1'+'1'+t_rev+tr+tv+z))) )
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case RA_generate_heartbeat_case_2
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_3
                solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+t) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+t) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+t) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+t) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case RA_generate_heartbeat_case_4
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_5
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~ltk ) @ #vk.12 )
              qed
            next
              case TC_sign_message_case_02
              by contradiction /* from formulas */
            next
              case TC_sign_message_case_03
              solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.9 )
                case RA_generate_heartbeat_case_1
                solve( !Time( ('1'+t) ) ▶₀ #vr.3 )
                  case advance_time
                  solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+'1'+t) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        by solve( (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z))  ∥
                                  (∃ z.1. (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z+z.1))) )
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        by solve( (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z))  ∥
                                  (∃ z.1. (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z+z.1))) )
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        by solve( (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z))  ∥
                                  (∃ z.1. (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z+z.1))) )
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        by solve( (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z))  ∥
                                  (∃ z.1. (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z+z.1))) )
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_2
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_3
                solve( !Time( ('1'+t) ) ▶₀ #vr.3 )
                  case advance_time
                  solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+'1'+t) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z))  ∥
                               (∃ z.1. (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z+z.1))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z))  ∥
                               (∃ z.1. (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z+z.1))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z))  ∥
                               (∃ z.1. (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z+z.1))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z))  ∥
                               (∃ z.1. (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z+z.1))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_4
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_5
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~ltk ) @ #vk.13 )
              qed
            next
              case TC_sign_message_case_04
              solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.9 )
                case RA_generate_heartbeat_case_1
                solve( !Time( ('1'+x) ) ▶₀ #vr.3 )
                  case advance_time
                  solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+'1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                    (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        next
                          case case_2
                          by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                    (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                    (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        next
                          case case_2
                          by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                    (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                    (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        next
                          case case_2
                          by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                    (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                    (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        next
                          case case_2
                          by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                    (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_2
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_3
                solve( !Time( ('1'+x) ) ▶₀ #vr.3 )
                  case advance_time
                  solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+'1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_4
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_5
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~ltk ) @ #vk.13 )
              qed
            next
              case TC_sign_message_case_05
              solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.9 )
                case RA_generate_heartbeat_case_1
                solve( !Time( ('1'+t+x) ) ▶₀ #vr.3 )
                  case advance_time
                  solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+'1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                                    (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                        next
                          case case_2
                          by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                                    (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                                    (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                        next
                          case case_2
                          by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                                    (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                                    (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                        next
                          case case_2
                          by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                                    (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                                    (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                        next
                          case case_2
                          by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                                    (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_2
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_3
                solve( !Time( ('1'+t+x) ) ▶₀ #vr.3 )
                  case advance_time
                  solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+'1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_4
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_5
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~ltk ) @ #vk.14 )
              qed
            next
              case TC_sign_message_case_06
              solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.9 )
                case RA_generate_heartbeat_case_1
                solve( !Time( ('1'+tr+x) ) ▶₀ #vr.3 )
                  case advance_time
                  solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+'1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z.1. (('1'+x+z) = (t_rev+z.1)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          by solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                    (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        next
                          case case_2
                          by solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                    (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          by solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                    (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        next
                          case case_2
                          by solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                    (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z.1. (('1'+x+z) = (t_rev+z.1)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          by solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                    (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        next
                          case case_2
                          by solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                    (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          by solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                    (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        next
                          case case_2
                          by solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                    (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_2
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_3
                solve( !Time( ('1'+tr+x) ) ▶₀ #vr.3 )
                  case advance_time
                  solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+'1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z.1. (('1'+x+z) = (t_rev+z.1)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z.1. (('1'+x+z) = (t_rev+z.1)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_4
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_5
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~ltk ) @ #vk.14 )
              qed
            next
              case TC_sign_message_case_07
              solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.9 )
                case RA_generate_heartbeat_case_1
                solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.3 )
                  case advance_time
                  solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+'1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+x+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          by solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.2))  ∥
                                    (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.2))) )
                        next
                          case case_2
                          by solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.2))  ∥
                                    (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.2))) )
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          by solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.2))  ∥
                                    (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.2))) )
                        next
                          case case_2
                          by solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.2))  ∥
                                    (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.2))) )
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+x+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          by solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.2))  ∥
                                    (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.2))) )
                        next
                          case case_2
                          by solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.2))  ∥
                                    (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.2))) )
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          by solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.2))  ∥
                                    (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.2))) )
                        next
                          case case_2
                          by solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.2))  ∥
                                    (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.2))) )
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_2
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_3
                solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.3 )
                  case advance_time
                  solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+'1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+x+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+x+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_4
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_5
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~ltk ) @ #vk.14 )
              qed
            next
              case TC_sign_message_case_08
              solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.9 )
                case RA_generate_heartbeat_case_1
                solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      by solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      by solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      by solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      by solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_2
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_3
                solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_4
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_5
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~ltk ) @ #vk.14 )
              qed
            next
              case TC_sign_message_case_09
              solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.9 )
                case RA_generate_heartbeat_case_1
                solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      by solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                                (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      by solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                                (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      by solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                                (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      by solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                                (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_2
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_3
                solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_4
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_5
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~ltk ) @ #vk.14 )
              qed
            next
              case TC_sign_message_case_10
              solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.9 )
                case RA_generate_heartbeat_case_1
                solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      by solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      by solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      by solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      by solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_2
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_3
                solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_4
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_5
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~ltk ) @ #vk.14 )
              qed
            next
              case TC_sign_message_case_11
              solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.9 )
                case RA_generate_heartbeat_case_1
                solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+x+x.3) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      by solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.2))  ∥
                                (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.2))) )
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      by solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.2))  ∥
                                (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.2))) )
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+x+x.3) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      by solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.2))  ∥
                                (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.2))) )
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      by solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.2))  ∥
                                (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.2))) )
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_2
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_3
                solve( (¬(#vr.3 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+x+x.3) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.5 < #k))  ∥ (∀ z. (('1'+x+x.3) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (¬(#k < #vr.6))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case RA_generate_heartbeat_case_4
                by contradiction /* from formulas */
              next
                case RA_generate_heartbeat_case_5
                by contradiction /* from formulas */
              next
                case c_sign
                by solve( !KU( ~ltk ) @ #vk.14 )
              qed
            next
              case c_sign
              by solve( !KU( ~ps_key ) @ #vk.5 )
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma effective_revocation [heuristic=o "oracle.py"]:
  all-traces
  "∀ msg ps t #i.
    (MessageAccepted( msg, ps, t ) @ #i) ⇒
    (∃ tv tr #j.
      ((SystemInitialized( tv, tr ) @ #j) ∧ (#j < #i)) ∧
      (¬(∃ t_rev #k.
          ((RevocationIssued( ps, t_rev ) @ #k) ∧ (#k < #i)) ∧
          ((t = (t_rev+tr+tv+tv)) ∨ (∃ z. t = (t_rev+tr+tv+tv+z))))))"
/*
guarded formula characterizing all counter-examples:
"∃ msg ps t #i.
  (MessageAccepted( msg, ps, t ) @ #i)
 ∧
  ∀ tv tr #j.
   (SystemInitialized( tv, tr ) @ #j)
  ⇒
   ((¬(#j < #i)) ∨
    (∃ t_rev #k.
      (RevocationIssued( ps, t_rev ) @ #k)
     ∧
      (#k < #i) ∧
      (((t = (t_rev+tr+tv+tv)) ∨ (∃ z. (t = (t_rev+tr+tv+tv+z)))))))"
*/
simplify
solve( (t = (t_rev+tr.1+tv.1+tv.1))  ∥
       (∃ z. (t = (t_rev+z+tr.1+tv.1+tv.1))) )
  case case_1
  solve( !Time( (t_rev+tr.1+tv.1+tv.1) ) ▶₃ #i )
    case advance_time_case_1
    solve( !Parameters( tv, tr ) ▶₁ #i )
      case Init_case_1
      solve( !Pseudonym( pk(x) ) ▶₂ #i )
        case Init
        solve( !Time( t_v2v ) ▶₀ #j )
          case advance_time
          solve( !Timeout( ('1'+t+z) ) ▶₁ #j )
            case TC_process_heartbeat_no_revoke_case_1
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t) = ('1'+'1'+'1'+'1'))  ∥
                       (∃ z. (('1'+'1'+t) = ('1'+'1'+'1'+'1'+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_2
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_no_revoke_case_3
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+x) = ('1'+'1'+'1'+'1'))  ∥
                       (∃ z. (('1'+'1'+'1'+x) = ('1'+'1'+'1'+'1'+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_revoke_case_1
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_2
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_3
            by contradiction /* from formulas */
          qed
        qed
      qed
    next
      case Init_case_2
      solve( !Pseudonym( pk(x) ) ▶₂ #i )
        case Init
        solve( !Time( t_v2v ) ▶₀ #j )
          case advance_time
          solve( !Timeout( ('1'+t+z) ) ▶₁ #j )
            case TC_process_heartbeat_no_revoke_case_01
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t) = ('1'+'1'+'1'+'1'+tr))  ∥
                       (∃ z. (('1'+'1'+t) = ('1'+'1'+'1'+'1'+tr+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_02
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_no_revoke_case_03
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+t) = ('1'+'1'+'1'+'1'+tr))  ∥
                       (∃ z. (('1'+'1'+'1'+t) = ('1'+'1'+'1'+'1'+tr+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_04
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+t+x) = ('1'+'1'+'1'+'1'+x+z))  ∥
                       (∃ z.1. (('1'+'1'+'1'+t+x) = ('1'+'1'+'1'+'1'+x+z+z.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_05
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+x) = ('1'+'1'+'1'+'1'+tr))  ∥
                       (∃ z. (('1'+'1'+'1'+x) = ('1'+'1'+'1'+'1'+tr+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_06
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+tr+x) = ('1'+'1'+'1'+'1'+tr))  ∥
                       (∃ z. (('1'+'1'+'1'+tr+x) = ('1'+'1'+'1'+'1'+tr+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_07
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+x+x.1) = ('1'+'1'+'1'+'1'+x.1+x.2))  ∥
                       (∃ z. (('1'+'1'+'1'+x+x.1) = ('1'+'1'+'1'+'1'+z+x.1+x.2))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_08
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+tr) = ('1'+'1'+'1'+'1'+tr))  ∥
                       (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+'1'+'1'+tr+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_09
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+x) = ('1'+'1'+'1'+'1'+x+x.1))  ∥
                       (∃ z. (('1'+'1'+t+x) = ('1'+'1'+'1'+'1'+x+z+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_10
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+tr+x) = ('1'+'1'+'1'+'1'+tr))  ∥
                       (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+'1'+'1'+tr+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_11
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+x+x.1) = ('1'+'1'+'1'+'1'+x.1+x.2))  ∥
                       (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+'1'+'1'+z+x.1+x.2))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_revoke_case_01
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_02
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_03
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_04
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_05
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_06
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_07
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_08
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_09
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_10
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_11
            by contradiction /* from formulas */
          qed
        qed
      qed
    next
      case Init_case_3
      solve( !Pseudonym( pk(x) ) ▶₂ #i )
        case Init
        solve( !Time( t_v2v ) ▶₀ #j )
          case advance_time
          solve( !Timeout( ('1'+t+z) ) ▶₁ #j )
            case TC_process_heartbeat_no_revoke_case_1
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+tv) = ('1'+'1'+'1'+'1'+tv+tv))  ∥
                       (∃ z. (('1'+'1'+t+tv) = ('1'+'1'+'1'+'1'+tv+tv+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_2
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_no_revoke_case_3
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+tv+x) = ('1'+'1'+'1'+'1'+tv+tv))  ∥
                       (∃ z. (('1'+'1'+'1'+tv+x) = ('1'+'1'+'1'+'1'+tv+tv+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_revoke_case_1
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_2
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_3
            by contradiction /* from formulas */
          qed
        qed
      qed
    next
      case Init_case_4
      solve( !Pseudonym( pk(x) ) ▶₂ #i )
        case Init
        solve( !Time( t_v2v ) ▶₀ #j )
          case advance_time
          solve( !Timeout( ('1'+t+z) ) ▶₁ #j )
            case TC_process_heartbeat_no_revoke_case_01
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+tv) = ('1'+'1'+'1'+'1'+tr+tv+tv))  ∥
                       (∃ z. (('1'+'1'+t+tv) = ('1'+'1'+'1'+'1'+tr+tv+tv+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_02
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_no_revoke_case_03
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+t+tv) = ('1'+'1'+'1'+'1'+tr+tv+tv))  ∥
                       (∃ z. (('1'+'1'+'1'+t+tv) = ('1'+'1'+'1'+'1'+tr+tv+tv+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_04
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+t+tv+x) = ('1'+'1'+'1'+'1'+tv+tv+x+z))  ∥
                       (∃ z.1. (('1'+'1'+'1'+t+tv+x) = ('1'+'1'+'1'+'1'+tv+tv+x+z+z.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_05
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+tv+x) = ('1'+'1'+'1'+'1'+tr+tv+tv))  ∥
                       (∃ z. (('1'+'1'+'1'+tv+x) = ('1'+'1'+'1'+'1'+tr+tv+tv+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_06
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+tr+tv+x) = ('1'+'1'+'1'+'1'+tr+tv+tv))  ∥
                       (∃ z. (('1'+'1'+'1'+tr+tv+x) = ('1'+'1'+'1'+'1'+tr+tv+tv+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_07
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+tv+x+x.1) = ('1'+'1'+'1'+'1'+tv+tv+x.1+x.2))  ∥
                       (∃ z. (('1'+'1'+'1'+tv+x+x.1) = ('1'+'1'+'1'+'1'+tv+tv+z+x.1+x.2))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_08
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+tr+tv) = ('1'+'1'+'1'+'1'+tr+tv+tv))  ∥
                       (∃ z. (('1'+'1'+t+tr+tv) = ('1'+'1'+'1'+'1'+tr+tv+tv+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_09
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+tv+x) = ('1'+'1'+'1'+'1'+tv+tv+x+x.1))  ∥
                       (∃ z. (('1'+'1'+t+tv+x) = ('1'+'1'+'1'+'1'+tv+tv+x+z+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_10
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+'1'+'1'+tr+tv+tv))  ∥
                       (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+'1'+'1'+tr+tv+tv+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_11
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+'1'+'1'+tv+tv+x.1+x.2))  ∥
                       (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+'1'+'1'+tv+tv+z+x.1+x.2))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_revoke_case_01
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_02
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_03
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_04
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_05
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_06
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_07
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_08
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_09
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_10
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_11
            by contradiction /* from formulas */
          qed
        qed
      qed
    qed
  next
    case advance_time_case_2
    solve( !Parameters( tv, tr ) ▶₁ #i )
      case Init_case_1
      solve( !Pseudonym( pk(x) ) ▶₂ #i )
        case Init
        solve( !Time( t_v2v ) ▶₀ #j )
          case advance_time
          solve( !Timeout( ('1'+t+z) ) ▶₁ #j )
            case TC_process_heartbeat_no_revoke_case_1
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t) = ('1'+'1'+'1'+t_rev))  ∥
                       (∃ z. (('1'+'1'+t) = ('1'+'1'+'1'+t_rev+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_2
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_no_revoke_case_3
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+x) = ('1'+'1'+'1'+t_rev))  ∥
                       (∃ z. (('1'+'1'+'1'+x) = ('1'+'1'+'1'+t_rev+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_revoke_case_1
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_2
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_3
            by contradiction /* from formulas */
          qed
        qed
      qed
    next
      case Init_case_2
      solve( !Pseudonym( pk(x) ) ▶₂ #i )
        case Init
        solve( !Time( t_v2v ) ▶₀ #j )
          case advance_time
          solve( !Timeout( ('1'+t+z) ) ▶₁ #j )
            case TC_process_heartbeat_no_revoke_case_01
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t) = ('1'+'1'+'1'+t_rev+tr))  ∥
                       (∃ z. (('1'+'1'+t) = ('1'+'1'+'1'+t_rev+tr+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_02
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_no_revoke_case_03
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+t) = ('1'+'1'+'1'+t_rev+tr))  ∥
                       (∃ z. (('1'+'1'+'1'+t) = ('1'+'1'+'1'+t_rev+tr+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_04
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+t+x) = ('1'+'1'+'1'+t_rev+x+z))  ∥
                       (∃ z.1. (('1'+'1'+'1'+t+x) = ('1'+'1'+'1'+t_rev+x+z+z.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_05
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+x) = ('1'+'1'+'1'+t_rev+tr))  ∥
                       (∃ z. (('1'+'1'+'1'+x) = ('1'+'1'+'1'+t_rev+tr+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_06
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+tr+x) = ('1'+'1'+'1'+t_rev+tr))  ∥
                       (∃ z. (('1'+'1'+'1'+tr+x) = ('1'+'1'+'1'+t_rev+tr+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_07
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+x+x.1) = ('1'+'1'+'1'+t_rev+x.1+x.2))  ∥
                       (∃ z. (('1'+'1'+'1'+x+x.1) = ('1'+'1'+'1'+t_rev+z+x.1+x.2))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_08
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+tr) = ('1'+'1'+'1'+t_rev+tr))  ∥
                       (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+'1'+t_rev+tr+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_09
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+x) = ('1'+'1'+'1'+t_rev+x+x.1))  ∥
                       (∃ z. (('1'+'1'+t+x) = ('1'+'1'+'1'+t_rev+x+z+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_10
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+tr+x) = ('1'+'1'+'1'+t_rev+tr))  ∥
                       (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+'1'+t_rev+tr+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_11
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+x+x.1) = ('1'+'1'+'1'+t_rev+x.1+x.2))  ∥
                       (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+'1'+t_rev+z+x.1+x.2))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_revoke_case_01
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_02
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_03
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_04
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_05
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_06
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_07
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_08
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_09
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_10
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_11
            by contradiction /* from formulas */
          qed
        qed
      qed
    qed
  next
    case advance_time_case_3
    solve( !Parameters( tv, tr ) ▶₁ #i )
      case Init_case_1
      solve( !Pseudonym( pk(x) ) ▶₂ #i )
        case Init
        solve( !Time( t_v2v ) ▶₀ #j )
          case advance_time
          solve( !Timeout( ('1'+t+z) ) ▶₁ #j )
            case TC_process_heartbeat_no_revoke_case_1
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+x) = ('1'+'1'+'1'+t_rev+x+x))  ∥
                       (∃ z. (('1'+'1'+t+x) = ('1'+'1'+'1'+t_rev+x+x+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_2
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_no_revoke_case_3
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+x+x.1) = ('1'+'1'+'1'+t_rev+x.1+x.1))  ∥
                       (∃ z. (('1'+'1'+'1'+x+x.1) = ('1'+'1'+'1'+t_rev+z+x.1+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_revoke_case_1
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_2
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_3
            by contradiction /* from formulas */
          qed
        qed
      qed
    next
      case Init_case_2
      solve( !Pseudonym( pk(x) ) ▶₂ #i )
        case Init
        solve( !Time( t_v2v ) ▶₀ #j )
          case advance_time
          solve( !Timeout( ('1'+t+z) ) ▶₁ #j )
            case TC_process_heartbeat_no_revoke_case_01
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+x) = ('1'+'1'+'1'+t_rev+tr+x+x))  ∥
                       (∃ z. (('1'+'1'+t+x) = ('1'+'1'+'1'+t_rev+tr+x+x+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_02
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_no_revoke_case_03
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+t+x) = ('1'+'1'+'1'+t_rev+tr+x+x))  ∥
                       (∃ z. (('1'+'1'+'1'+t+x) = ('1'+'1'+'1'+t_rev+tr+x+x+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_04
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+t+x+x.1) = ('1'+'1'+'1'+t_rev+x+z+x.1+x.1))  ∥
                       (∃ z.1. (('1'+'1'+'1'+t+x+x.1) = ('1'+'1'+'1'+t_rev+x+z+x.1+x.1+z.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_05
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+x+x.1) = ('1'+'1'+'1'+t_rev+tr+x.1+x.1))  ∥
                       (∃ z. (('1'+'1'+'1'+x+x.1) = ('1'+'1'+'1'+t_rev+tr+z+x.1+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_06
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+tr+x+x.1) = ('1'+'1'+'1'+t_rev+tr+x.1+x.1))  ∥
                       (∃ z. (('1'+'1'+'1'+tr+x+x.1) = ('1'+'1'+'1'+t_rev+tr+z+x.1+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_07
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+x+x.1+x.2) = ('1'+'1'+'1'+t_rev+x.1+x.2+x.2+x.3))  ∥
                       (∃ z.
                         (('1'+'1'+'1'+x+x.1+x.2) = ('1'+'1'+'1'+t_rev+z+x.1+x.2+x.2+x.3))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_08
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+tr+x) = ('1'+'1'+'1'+t_rev+tr+x+x))  ∥
                       (∃ z. (('1'+'1'+t+tr+x) = ('1'+'1'+'1'+t_rev+tr+x+x+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_09
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+'1'+t_rev+x+x.1+x.1+x.2))  ∥
                       (∃ z. (('1'+'1'+t+x+x.1) = ('1'+'1'+'1'+t_rev+x+z+x.1+x.1+x.2))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_10
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+'1'+t_rev+tr+x.1+x.1))  ∥
                       (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+'1'+t_rev+tr+z+x.1+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_11
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+'1'+t_rev+x.1+x.2+x.2+x.3))  ∥
                       (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+'1'+t_rev+z+x.1+x.2+x.2+x.3))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_revoke_case_01
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_02
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_03
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_04
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_05
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_06
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_07
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_08
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_09
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_10
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_11
            by contradiction /* from formulas */
          qed
        qed
      qed
    qed
  next
    case advance_time_case_4
    solve( !Parameters( tv, tr ) ▶₁ #i )
      case Init_case_1
      solve( !Pseudonym( pk(x) ) ▶₂ #i )
        case Init
        solve( !Time( t_v2v ) ▶₀ #j )
          case advance_time
          solve( !Timeout( ('1'+t+z) ) ▶₁ #j )
            case TC_process_heartbeat_no_revoke_case_1
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t) = ('1'+'1'+'1'+t_rev))  ∥
                       (∃ z. (('1'+'1'+t) = ('1'+'1'+'1'+t_rev+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_2
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_no_revoke_case_3
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+x) = ('1'+'1'+'1'+t_rev))  ∥
                       (∃ z. (('1'+'1'+'1'+x) = ('1'+'1'+'1'+t_rev+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_revoke_case_1
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_2
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_3
            by contradiction /* from formulas */
          qed
        qed
      qed
    next
      case Init_case_2
      solve( !Pseudonym( pk(x) ) ▶₂ #i )
        case Init
        solve( !Time( t_v2v ) ▶₀ #j )
          case advance_time
          solve( !Timeout( ('1'+t+z) ) ▶₁ #j )
            case TC_process_heartbeat_no_revoke_case_1
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+tv) = ('1'+'1'+'1'+t_rev+tv+tv))  ∥
                       (∃ z. (('1'+'1'+t+tv) = ('1'+'1'+'1'+t_rev+tv+tv+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_2
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_no_revoke_case_3
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+tv+x) = ('1'+'1'+'1'+t_rev+tv+tv))  ∥
                       (∃ z. (('1'+'1'+'1'+tv+x) = ('1'+'1'+'1'+t_rev+tv+tv+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_revoke_case_1
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_2
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_3
            by contradiction /* from formulas */
          qed
        qed
      qed
    qed
  next
    case advance_time_case_5
    solve( !Parameters( tv, tr ) ▶₁ #i )
      case Init_case_1
      solve( !Pseudonym( pk(x) ) ▶₂ #i )
        case Init
        solve( !Time( t_v2v ) ▶₀ #j )
          case advance_time
          solve( !Timeout( ('1'+t+z) ) ▶₁ #j )
            case TC_process_heartbeat_no_revoke_case_01
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t) = ('1'+'1'+'1'+t_rev+x))  ∥
                       (∃ z. (('1'+'1'+t) = ('1'+'1'+'1'+t_rev+x+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_02
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_no_revoke_case_03
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+t) = ('1'+'1'+'1'+t_rev+x))  ∥
                       (∃ z. (('1'+'1'+'1'+t) = ('1'+'1'+'1'+t_rev+x+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_04
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+t+x) = ('1'+'1'+'1'+t_rev+x+z))  ∥
                       (∃ z.1. (('1'+'1'+'1'+t+x) = ('1'+'1'+'1'+t_rev+x+z+z.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_05
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+x) = ('1'+'1'+'1'+t_rev+x.1))  ∥
                       (∃ z. (('1'+'1'+'1'+x) = ('1'+'1'+'1'+t_rev+z+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_06
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+x+x.1) = ('1'+'1'+'1'+t_rev+x.1))  ∥
                       (∃ z. (('1'+'1'+'1'+x+x.1) = ('1'+'1'+'1'+t_rev+z+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_07
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+x+x.1) = ('1'+'1'+'1'+t_rev+x.1+x.2))  ∥
                       (∃ z. (('1'+'1'+'1'+x+x.1) = ('1'+'1'+'1'+t_rev+z+x.1+x.2))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_08
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+x) = ('1'+'1'+'1'+t_rev+x))  ∥
                       (∃ z. (('1'+'1'+t+x) = ('1'+'1'+'1'+t_rev+x+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_09
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+x) = ('1'+'1'+'1'+t_rev+x+x.1))  ∥
                       (∃ z. (('1'+'1'+t+x) = ('1'+'1'+'1'+t_rev+x+z+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_10
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+x+x.1) = ('1'+'1'+'1'+t_rev+x.1))  ∥
                       (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+'1'+t_rev+z+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_11
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+x+x.1) = ('1'+'1'+'1'+t_rev+x.1+x.2))  ∥
                       (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+'1'+t_rev+z+x.1+x.2))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_revoke_case_01
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_02
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_03
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_04
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_05
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_06
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_07
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_08
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_09
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_10
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_11
            by contradiction /* from formulas */
          qed
        qed
      qed
    next
      case Init_case_2
      solve( !Pseudonym( pk(x) ) ▶₂ #i )
        case Init
        solve( !Time( t_v2v ) ▶₀ #j )
          case advance_time
          solve( !Timeout( ('1'+t+z) ) ▶₁ #j )
            case TC_process_heartbeat_no_revoke_case_01
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+tv) = ('1'+'1'+'1'+t_rev+tv+tv+x))  ∥
                       (∃ z. (('1'+'1'+t+tv) = ('1'+'1'+'1'+t_rev+tv+tv+x+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_02
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_no_revoke_case_03
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+t+tv) = ('1'+'1'+'1'+t_rev+tv+tv+x))  ∥
                       (∃ z. (('1'+'1'+'1'+t+tv) = ('1'+'1'+'1'+t_rev+tv+tv+x+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_04
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+t+tv+x) = ('1'+'1'+'1'+t_rev+tv+tv+x+z))  ∥
                       (∃ z.1. (('1'+'1'+'1'+t+tv+x) = ('1'+'1'+'1'+t_rev+tv+tv+x+z+z.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_05
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+tv+x) = ('1'+'1'+'1'+t_rev+tv+tv+x.1))  ∥
                       (∃ z. (('1'+'1'+'1'+tv+x) = ('1'+'1'+'1'+t_rev+tv+tv+z+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_06
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+tv+x+x.1) = ('1'+'1'+'1'+t_rev+tv+tv+x.1))  ∥
                       (∃ z. (('1'+'1'+'1'+tv+x+x.1) = ('1'+'1'+'1'+t_rev+tv+tv+z+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_07
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+tv+x+x.1) = ('1'+'1'+'1'+t_rev+tv+tv+x.1+x.2))  ∥
                       (∃ z. (('1'+'1'+'1'+tv+x+x.1) = ('1'+'1'+'1'+t_rev+tv+tv+z+x.1+x.2))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_08
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+tv+x) = ('1'+'1'+'1'+t_rev+tv+tv+x))  ∥
                       (∃ z. (('1'+'1'+t+tv+x) = ('1'+'1'+'1'+t_rev+tv+tv+x+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_09
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+tv+x) = ('1'+'1'+'1'+t_rev+tv+tv+x+x.1))  ∥
                       (∃ z. (('1'+'1'+t+tv+x) = ('1'+'1'+'1'+t_rev+tv+tv+x+z+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_10
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+'1'+t_rev+tv+tv+x.1))  ∥
                       (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+'1'+t_rev+tv+tv+z+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_11
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+'1'+t_rev+tv+tv+x.1+x.2))  ∥
                       (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+'1'+t_rev+tv+tv+z+x.1+x.2))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_revoke_case_01
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_02
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_03
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_04
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_05
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_06
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_07
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_08
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_09
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_10
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_11
            by contradiction /* from formulas */
          qed
        qed
      qed
    qed
  next
    case advance_time_case_6
    solve( !Parameters( tv, tr ) ▶₁ #i )
      case Init_case_1
      solve( !Pseudonym( pk(x) ) ▶₂ #i )
        case Init
        solve( !Time( t_v2v ) ▶₀ #j )
          case advance_time
          solve( !Timeout( ('1'+t+z) ) ▶₁ #j )
            case TC_process_heartbeat_no_revoke_case_1
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t) = ('1'+'1'+'1'+'1'+x))  ∥
                       (∃ z. (('1'+'1'+t) = ('1'+'1'+'1'+'1'+x+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_2
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_no_revoke_case_3
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+x) = ('1'+'1'+'1'+'1'+x.1))  ∥
                       (∃ z. (('1'+'1'+'1'+x) = ('1'+'1'+'1'+'1'+z+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_revoke_case_1
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_2
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_3
            by contradiction /* from formulas */
          qed
        qed
      qed
    next
      case Init_case_2
      solve( !Pseudonym( pk(x) ) ▶₂ #i )
        case Init
        solve( !Time( t_v2v ) ▶₀ #j )
          case advance_time
          solve( !Timeout( ('1'+t+z) ) ▶₁ #j )
            case TC_process_heartbeat_no_revoke_case_01
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t) = ('1'+'1'+'1'+'1'+tr+x))  ∥
                       (∃ z. (('1'+'1'+t) = ('1'+'1'+'1'+'1'+tr+x+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_02
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_no_revoke_case_03
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+t) = ('1'+'1'+'1'+'1'+tr+x))  ∥
                       (∃ z. (('1'+'1'+'1'+t) = ('1'+'1'+'1'+'1'+tr+x+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_04
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+t+x) = ('1'+'1'+'1'+'1'+x+z+x.1))  ∥
                       (∃ z.1. (('1'+'1'+'1'+t+x) = ('1'+'1'+'1'+'1'+x+z+x.1+z.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_05
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+x) = ('1'+'1'+'1'+'1'+tr+x.1))  ∥
                       (∃ z. (('1'+'1'+'1'+x) = ('1'+'1'+'1'+'1'+tr+z+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_06
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+tr+x) = ('1'+'1'+'1'+'1'+tr+x.1))  ∥
                       (∃ z. (('1'+'1'+'1'+tr+x) = ('1'+'1'+'1'+'1'+tr+z+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_07
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+x+x.1) = ('1'+'1'+'1'+'1'+x.1+x.2+x.3))  ∥
                       (∃ z. (('1'+'1'+'1'+x+x.1) = ('1'+'1'+'1'+'1'+z+x.1+x.2+x.3))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_08
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+tr) = ('1'+'1'+'1'+'1'+tr+x))  ∥
                       (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+'1'+'1'+tr+x+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_09
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+x) = ('1'+'1'+'1'+'1'+x+x.1+x.2))  ∥
                       (∃ z. (('1'+'1'+t+x) = ('1'+'1'+'1'+'1'+x+z+x.1+x.2))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_10
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+tr+x) = ('1'+'1'+'1'+'1'+tr+x.1))  ∥
                       (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+'1'+'1'+tr+z+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_11
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+x+x.1) = ('1'+'1'+'1'+'1'+x.1+x.2+x.3))  ∥
                       (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+'1'+'1'+z+x.1+x.2+x.3))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_revoke_case_01
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_02
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_03
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_04
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_05
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_06
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_07
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_08
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_09
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_10
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_11
            by contradiction /* from formulas */
          qed
        qed
      qed
    next
      case Init_case_3
      solve( !Pseudonym( pk(x) ) ▶₂ #i )
        case Init
        solve( !Time( t_v2v ) ▶₀ #j )
          case advance_time
          solve( !Timeout( ('1'+t+z) ) ▶₁ #j )
            case TC_process_heartbeat_no_revoke_case_1
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+tv) = ('1'+'1'+'1'+'1'+tv+tv+x))  ∥
                       (∃ z. (('1'+'1'+t+tv) = ('1'+'1'+'1'+'1'+tv+tv+x+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_2
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_no_revoke_case_3
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+tv+x) = ('1'+'1'+'1'+'1'+tv+tv+x.1))  ∥
                       (∃ z. (('1'+'1'+'1'+tv+x) = ('1'+'1'+'1'+'1'+tv+tv+z+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_revoke_case_1
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_2
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_3
            by contradiction /* from formulas */
          qed
        qed
      qed
    next
      case Init_case_4
      solve( !Pseudonym( pk(x) ) ▶₂ #i )
        case Init
        solve( !Time( t_v2v ) ▶₀ #j )
          case advance_time
          solve( !Timeout( ('1'+t+z) ) ▶₁ #j )
            case TC_process_heartbeat_no_revoke_case_01
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+tv) = ('1'+'1'+'1'+'1'+tr+tv+tv+x))  ∥
                       (∃ z. (('1'+'1'+t+tv) = ('1'+'1'+'1'+'1'+tr+tv+tv+x+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_02
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_no_revoke_case_03
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+t+tv) = ('1'+'1'+'1'+'1'+tr+tv+tv+x))  ∥
                       (∃ z. (('1'+'1'+'1'+t+tv) = ('1'+'1'+'1'+'1'+tr+tv+tv+x+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_04
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+t+tv+x) = ('1'+'1'+'1'+'1'+tv+tv+x+z+x.1))  ∥
                       (∃ z.1. (('1'+'1'+'1'+t+tv+x) = ('1'+'1'+'1'+'1'+tv+tv+x+z+x.1+z.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_05
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+tv+x) = ('1'+'1'+'1'+'1'+tr+tv+tv+x.1))  ∥
                       (∃ z. (('1'+'1'+'1'+tv+x) = ('1'+'1'+'1'+'1'+tr+tv+tv+z+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_06
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+tr+tv+x) = ('1'+'1'+'1'+'1'+tr+tv+tv+x.1))  ∥
                       (∃ z. (('1'+'1'+'1'+tr+tv+x) = ('1'+'1'+'1'+'1'+tr+tv+tv+z+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_07
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+tv+x+x.1) = ('1'+'1'+'1'+'1'+tv+tv+x.1+x.2+x.3))  ∥
                       (∃ z. (('1'+'1'+'1'+tv+x+x.1) = ('1'+'1'+'1'+'1'+tv+tv+z+x.1+x.2+x.3))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_08
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+tr+tv) = ('1'+'1'+'1'+'1'+tr+tv+tv+x))  ∥
                       (∃ z. (('1'+'1'+t+tr+tv) = ('1'+'1'+'1'+'1'+tr+tv+tv+x+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_09
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+tv+x) = ('1'+'1'+'1'+'1'+tv+tv+x+x.1+x.2))  ∥
                       (∃ z. (('1'+'1'+t+tv+x) = ('1'+'1'+'1'+'1'+tv+tv+x+z+x.1+x.2))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_10
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+'1'+'1'+tr+tv+tv+x.1))  ∥
                       (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+'1'+'1'+tr+tv+tv+z+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_11
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+'1'+'1'+tv+tv+x.1+x.2+x.3))  ∥
                       (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+'1'+'1'+tv+tv+z+x.1+x.2+x.3))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_revoke_case_01
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_02
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_03
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_04
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_05
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_06
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_07
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_08
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_09
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_10
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_11
            by contradiction /* from formulas */
          qed
        qed
      qed
    qed
  qed
next
  case case_2
  solve( !Parameters( tv, tr ) ▶₁ #i )
    case Init_case_1
    solve( !Pseudonym( pk(x) ) ▶₂ #i )
      case Init
      solve( !Time( ('1'+'1'+'1'+t_rev+z) ) ▶₃ #i )
        case advance_time
        solve( !Time( t_v2v ) ▶₀ #j )
          case advance_time
          solve( !Timeout( ('1'+t+z.1) ) ▶₁ #j )
            case TC_process_heartbeat_no_revoke_case_1
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t) = ('1'+'1'+'1'+t_rev+z))  ∥
                       (∃ z.1. (('1'+'1'+t) = ('1'+'1'+'1'+t_rev+z+z.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_2
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_no_revoke_case_3
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+x) = ('1'+'1'+'1'+t_rev+z))  ∥
                       (∃ z.1. (('1'+'1'+'1'+x) = ('1'+'1'+'1'+t_rev+z+z.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_revoke_case_1
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_2
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_3
            by contradiction /* from formulas */
          qed
        qed
      qed
    qed
  next
    case Init_case_2
    solve( !Pseudonym( pk(x) ) ▶₂ #i )
      case Init
      solve( !Time( ('1'+'1'+'1'+t_rev+tr+z) ) ▶₃ #i )
        case advance_time
        solve( !Time( t_v2v ) ▶₀ #j )
          case advance_time
          solve( !Timeout( ('1'+t+z.1) ) ▶₁ #j )
            case TC_process_heartbeat_no_revoke_case_01
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t) = ('1'+'1'+'1'+t_rev+tr+z))  ∥
                       (∃ z.1. (('1'+'1'+t) = ('1'+'1'+'1'+t_rev+tr+z+z.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_02
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_no_revoke_case_03
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+t) = ('1'+'1'+'1'+t_rev+tr+z))  ∥
                       (∃ z.1. (('1'+'1'+'1'+t) = ('1'+'1'+'1'+t_rev+tr+z+z.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_04
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+t+x) = ('1'+'1'+'1'+t_rev+x+z+z.1))  ∥
                       (∃ z.2. (('1'+'1'+'1'+t+x) = ('1'+'1'+'1'+t_rev+x+z+z.1+z.2))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_05
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+x) = ('1'+'1'+'1'+t_rev+tr+z))  ∥
                       (∃ z.1. (('1'+'1'+'1'+x) = ('1'+'1'+'1'+t_rev+tr+z+z.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_06
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+tr+x) = ('1'+'1'+'1'+t_rev+tr+z))  ∥
                       (∃ z.1. (('1'+'1'+'1'+tr+x) = ('1'+'1'+'1'+t_rev+tr+z+z.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_07
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+x+x.1) = ('1'+'1'+'1'+t_rev+z+x.1+x.2))  ∥
                       (∃ z.1. (('1'+'1'+'1'+x+x.1) = ('1'+'1'+'1'+t_rev+z+x.1+z.1+x.2))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_08
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+tr) = ('1'+'1'+'1'+t_rev+tr+z))  ∥
                       (∃ z.1. (('1'+'1'+t+tr) = ('1'+'1'+'1'+t_rev+tr+z+z.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_09
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+x) = ('1'+'1'+'1'+t_rev+x+z+x.1))  ∥
                       (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+'1'+t_rev+x+z+x.1+z.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_10
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+tr+x) = ('1'+'1'+'1'+t_rev+tr+z))  ∥
                       (∃ z.1. (('1'+'1'+tr+x) = ('1'+'1'+'1'+t_rev+tr+z+z.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_11
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+x+x.1) = ('1'+'1'+'1'+t_rev+z+x.1+x.2))  ∥
                       (∃ z.1. (('1'+'1'+x+x.1) = ('1'+'1'+'1'+t_rev+z+x.1+z.1+x.2))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_revoke_case_01
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_02
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_03
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_04
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_05
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_06
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_07
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_08
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_09
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_10
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_11
            by contradiction /* from formulas */
          qed
        qed
      qed
    qed
  next
    case Init_case_3
    solve( !Pseudonym( pk(x) ) ▶₂ #i )
      case Init
      solve( !Time( ('1'+'1'+'1'+t_rev+tv+tv+z) ) ▶₃ #i )
        case advance_time
        solve( !Time( t_v2v ) ▶₀ #j )
          case advance_time
          solve( !Timeout( ('1'+t+z.1) ) ▶₁ #j )
            case TC_process_heartbeat_no_revoke_case_1
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+tv) = ('1'+'1'+'1'+t_rev+tv+tv+z))  ∥
                       (∃ z.1. (('1'+'1'+t+tv) = ('1'+'1'+'1'+t_rev+tv+tv+z+z.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_2
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_no_revoke_case_3
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+tv+x) = ('1'+'1'+'1'+t_rev+tv+tv+z))  ∥
                       (∃ z.1. (('1'+'1'+'1'+tv+x) = ('1'+'1'+'1'+t_rev+tv+tv+z+z.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_revoke_case_1
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_2
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_3
            by contradiction /* from formulas */
          qed
        qed
      qed
    qed
  next
    case Init_case_4
    solve( !Pseudonym( pk(x) ) ▶₂ #i )
      case Init
      solve( !Time( ('1'+'1'+'1'+t_rev+tr+tv+tv+z) ) ▶₃ #i )
        case advance_time
        solve( !Time( t_v2v ) ▶₀ #j )
          case advance_time
          solve( !Timeout( ('1'+t+z.1) ) ▶₁ #j )
            case TC_process_heartbeat_no_revoke_case_01
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+tv) = ('1'+'1'+'1'+t_rev+tr+tv+tv+z))  ∥
                       (∃ z.1. (('1'+'1'+t+tv) = ('1'+'1'+'1'+t_rev+tr+tv+tv+z+z.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_02
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_no_revoke_case_03
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+t+tv) = ('1'+'1'+'1'+t_rev+tr+tv+tv+z))  ∥
                       (∃ z.1. (('1'+'1'+'1'+t+tv) = ('1'+'1'+'1'+t_rev+tr+tv+tv+z+z.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_04
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+t+tv+x) = ('1'+'1'+'1'+t_rev+tv+tv+x+z+z.1))  ∥
                       (∃ z.2. (('1'+'1'+'1'+t+tv+x) = ('1'+'1'+'1'+t_rev+tv+tv+x+z+z.1+z.2))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_05
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+tv+x) = ('1'+'1'+'1'+t_rev+tr+tv+tv+z))  ∥
                       (∃ z.1. (('1'+'1'+'1'+tv+x) = ('1'+'1'+'1'+t_rev+tr+tv+tv+z+z.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_06
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+tr+tv+x) = ('1'+'1'+'1'+t_rev+tr+tv+tv+z))  ∥
                       (∃ z.1. (('1'+'1'+'1'+tr+tv+x) = ('1'+'1'+'1'+t_rev+tr+tv+tv+z+z.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_07
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+'1'+tv+x+x.1) = ('1'+'1'+'1'+t_rev+tv+tv+z+x.1+x.2))  ∥
                       (∃ z.1.
                         (('1'+'1'+'1'+tv+x+x.1) = ('1'+'1'+'1'+t_rev+tv+tv+z+x.1+z.1+x.2))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_08
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+tr+tv) = ('1'+'1'+'1'+t_rev+tr+tv+tv+z))  ∥
                       (∃ z.1. (('1'+'1'+t+tr+tv) = ('1'+'1'+'1'+t_rev+tr+tv+tv+z+z.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_09
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+t+tv+x) = ('1'+'1'+'1'+t_rev+tv+tv+x+z+x.1))  ∥
                       (∃ z.1. (('1'+'1'+t+tv+x) = ('1'+'1'+'1'+t_rev+tv+tv+x+z+x.1+z.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_10
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+'1'+t_rev+tr+tv+tv+z))  ∥
                       (∃ z.1. (('1'+'1'+tr+tv+x) = ('1'+'1'+'1'+t_rev+tr+tv+tv+z+z.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_no_revoke_case_11
            solve( !Pseudonym( pk(~ps_key) ) ▶₂ #j )
              case Init
              solve( !Ltk( pk(~ps_key), ps_key.1 ) ▶₃ #j )
                case Init
                solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+'1'+t_rev+tv+tv+z+x.1+x.2))  ∥
                       (∃ z.1. (('1'+'1'+tv+x+x.1) = ('1'+'1'+'1'+t_rev+tv+tv+z+x.1+z.1+x.2))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            qed
          next
            case TC_process_heartbeat_revoke_case_01
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_02
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_03
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_04
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_05
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_06
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_07
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_08
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_09
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_10
            by contradiction /* from formulas */
          next
            case TC_process_heartbeat_revoke_case_11
            by contradiction /* from formulas */
          qed
        qed
      qed
    qed
  qed
qed

lemma no_operations_after_t [heuristic=o "oracle.py"]:
  all-traces
  "∀ t #i.
    (NewOperation( t ) @ #i) ⇒
    (∃ tv tr #j.
      ((SystemInitialized( tv, tr ) @ #j) ∧ (#j < #i)) ∧
      ((¬(∃ ps t_rev #k.
           ((RevocationIssued( ps, t_rev ) @ #k) ∧ (#k < #i)) ∧
           ((t = (t_rev+tr+tv)) ∨ (∃ z. t = (t_rev+tr+tv+z))))) ∨
       (∃ ps t2 #k. (PseudonymRevoked( ps, t2 ) @ #k) ∧ (#k < #i))))"
/*
guarded formula characterizing all counter-examples:
"∃ t #i.
  (NewOperation( t ) @ #i)
 ∧
  ∀ tv tr #j.
   (SystemInitialized( tv, tr ) @ #j)
  ⇒
   ((¬(#j < #i)) ∨
    ((∃ ps t_rev #k.
       (RevocationIssued( ps, t_rev ) @ #k)
      ∧
       (#k < #i) ∧ (((t = (t_rev+tr+tv)) ∨ (∃ z. (t = (t_rev+tr+tv+z)))))) ∧
     (∀ ps t2 #k. (PseudonymRevoked( ps, t2 ) @ #k) ⇒ ¬(#k < #i))))"
*/
simplify
solve( !Timeout( (t+z) ) ▶₁ #i )
  case TC_process_heartbeat_no_revoke_case_01
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_no_revoke_case_02
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_no_revoke_case_03
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( !Time( ('1'+'1'+x) ) ▶₀ #i )
          case advance_time
          solve( !Time( ('1'+x) ) ▶₀ #vr.7 )
            case advance_time
            solve( (¬(#vr.1 < #k))  ∥ (∀ z.1. (('1'+x+z) = (t_rev+z.1)) ⇒ ⊥) )
              case case_1
              solve( (¬(#k < #vr.4))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+'1'+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+z))) )
                      case case_1
                      solve( (('1'+'1'+t) = ('1'+t_rev+z))  ∥
                             (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+z+z.1))) )
                        case case_1_case_1
                        by contradiction /* from formulas */
                      next
                        case case_1_case_2
                        by contradiction /* cyclic */
                      next
                        case case_1_case_3
                        by contradiction /* from formulas */
                      next
                        case case_1_case_4
                        by contradiction /* from formulas */
                      next
                        case case_2_case_1
                        by contradiction /* from formulas */
                      next
                        case case_2_case_2
                        by contradiction /* cyclic */
                      next
                        case case_2_case_3
                        by contradiction /* from formulas */
                      next
                        case case_2_case_4
                        by contradiction /* from formulas */
                      next
                        case case_2_case_5
                        by contradiction /* from formulas */
                      next
                        case case_2_case_6
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+'1'+t) = ('1'+t_rev+z+z.1))  ∥
                             (∃ z.2. (('1'+'1'+t) = ('1'+t_rev+z+z.1+z.2))) )
                        case case_1_case_1
                        by contradiction /* from formulas */
                      next
                        case case_1_case_2
                        by contradiction /* cyclic */
                      next
                        case case_1_case_3
                        by contradiction /* from formulas */
                      next
                        case case_1_case_4
                        by contradiction /* from formulas */
                      next
                        case case_1_case_5
                        by contradiction /* from formulas */
                      next
                        case case_1_case_6
                        by contradiction /* from formulas */
                      next
                        case case_2_case_1
                        by contradiction /* from formulas */
                      next
                        case case_2_case_2
                        by contradiction /* from formulas */
                      next
                        case case_2_case_3
                        by contradiction /* cyclic */
                      next
                        case case_2_case_4
                        by contradiction /* from formulas */
                      next
                        case case_2_case_5
                        by contradiction /* from formulas */
                      next
                        case case_2_case_6
                        by contradiction /* from formulas */
                      next
                        case case_2_case_7
                        by contradiction /* from formulas */
                      next
                        case case_2_case_8
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2
              solve( (¬(#k < #vr.4))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+'1'+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_04
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( !Time( ('1'+t) ) ▶₀ #i )
          case advance_time
          solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
            case case_1
            solve( (¬(#k < #vr.4))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              by solve( (('1'+'1') = ('1'+t))  ∥ (∃ z. (('1'+'1') = ('1'+t+z))) )
            next
              case case_2
              by contradiction /* from formulas */
            qed
          next
            case case_2
            solve( (¬(#k < #vr.4))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              by solve( (('1'+'1') = ('1'+t))  ∥ (∃ z. (('1'+'1') = ('1'+t+z))) )
            next
              case case_2
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        solve( !Time( ('1'+t) ) ▶₀ #i )
          case advance_time
          solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
            case case_1
            solve( (¬(#k < #vr.4))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (('1'+'1'+t.1) = ('1'+t))  ∥ (∃ z. (('1'+'1'+t.1) = ('1'+t+z))) )
                case case_1
                solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (('1'+'1'+t) = ('1'+'1'+t_rev))  ∥
                         (∃ z. (('1'+'1'+t) = ('1'+'1'+t_rev+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case case_2_case_1
                by contradiction /* cyclic */
              next
                case case_2_case_2
                by contradiction /* from formulas */
              next
                case case_2_case_3
                solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          next
            case case_2
            solve( (¬(#k < #vr.4))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (('1'+'1'+t.1) = ('1'+t))  ∥ (∃ z. (('1'+'1'+t.1) = ('1'+t+z))) )
                case case_1
                solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (('1'+'1'+t) = ('1'+'1'+t_rev))  ∥
                         (∃ z. (('1'+'1'+t) = ('1'+'1'+t_rev+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case case_2_case_1
                solve( (('1'+t) = ('1'+'1'+t_rev))  ∥
                       (∃ z. (('1'+t) = ('1'+'1'+t_rev+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              next
                case case_2_case_2
                by contradiction /* from formulas */
              next
                case case_2_case_3
                solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_4
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_5
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_05
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_no_revoke_case_06
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_no_revoke_case_07
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_no_revoke_case_08
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( !Time( ('1'+'1'+t) ) ▶₀ #i )
          case advance_time
          solve( !Time( ('1'+t) ) ▶₀ #vr.7 )
            case advance_time
            solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                by solve( (('1'+'1'+t) = ('1'+'1'+t_rev+z))  ∥
                          (∃ z.1. (('1'+'1'+t) = ('1'+'1'+t_rev+z+z.1))) )
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+'1'+t) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  by solve( (('1'+'1'+t) = ('1'+'1'+t_rev+z))  ∥
                            (∃ z.1. (('1'+'1'+t) = ('1'+'1'+t_rev+z+z.1))) )
                next
                  case case_2
                  by solve( (('1'+'1'+t) = ('1'+'1'+t_rev+z))  ∥
                            (∃ z.1. (('1'+'1'+t) = ('1'+'1'+t_rev+z+z.1))) )
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        solve( !Time( ('1'+'1'+t) ) ▶₀ #i )
          case advance_time
          solve( !Time( ('1'+t) ) ▶₀ #vr.8 )
            case advance_time
            solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (('1'+'1'+t) = ('1'+'1'+t_rev+z))  ∥
                       (∃ z.1. (('1'+'1'+t) = ('1'+'1'+t_rev+z+z.1))) )
                  case case_1
                  solve( (('1'+'1'+t) = ('1'+t_rev+z))  ∥
                         (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+z+z.1))) )
                    case case_1_case_1
                    by contradiction /* from formulas */
                  next
                    case case_1_case_2
                    by contradiction /* from formulas */
                  next
                    case case_1_case_3
                    by contradiction /* from formulas */
                  next
                    case case_1_case_4
                    by contradiction /* from formulas */
                  next
                    case case_2_case_1
                    by contradiction /* from formulas */
                  next
                    case case_2_case_2
                    by contradiction /* cyclic */
                  next
                    case case_2_case_3
                    by contradiction /* from formulas */
                  next
                    case case_2_case_4
                    by contradiction /* from formulas */
                  next
                    case case_2_case_5
                    by contradiction /* from formulas */
                  next
                    case case_2_case_6
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( (('1'+'1'+t) = ('1'+t_rev+z+z.1))  ∥
                         (∃ z.2. (('1'+'1'+t) = ('1'+t_rev+z+z.1+z.2))) )
                    case case_1_case_1
                    by contradiction /* from formulas */
                  next
                    case case_1_case_2
                    by contradiction /* from formulas */
                  next
                    case case_1_case_3
                    by contradiction /* from formulas */
                  next
                    case case_1_case_4
                    by contradiction /* from formulas */
                  next
                    case case_1_case_5
                    by contradiction /* from formulas */
                  next
                    case case_1_case_6
                    by contradiction /* from formulas */
                  next
                    case case_2_case_1
                    by contradiction /* from formulas */
                  next
                    case case_2_case_2
                    by contradiction /* from formulas */
                  next
                    case case_2_case_3
                    by contradiction /* cyclic */
                  next
                    case case_2_case_4
                    by contradiction /* from formulas */
                  next
                    case case_2_case_5
                    by contradiction /* from formulas */
                  next
                    case case_2_case_6
                    by contradiction /* from formulas */
                  next
                    case case_2_case_7
                    by contradiction /* from formulas */
                  next
                    case case_2_case_8
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+'1'+t) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (('1'+'1'+t) = ('1'+'1'+t_rev+z))  ∥
                         (∃ z.1. (('1'+'1'+t) = ('1'+'1'+t_rev+z+z.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( (('1'+'1'+t) = ('1'+'1'+t_rev+z))  ∥
                         (∃ z.1. (('1'+'1'+t) = ('1'+'1'+t_rev+z+z.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_4
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_5
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_09
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( !Time( ('1'+'1'+t+x) ) ▶₀ #i )
          case advance_time
          solve( !Time( ('1'+t+x) ) ▶₀ #vr.7 )
            case advance_time
            solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+'1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                              (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                  next
                    case case_2
                    by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                              (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                  qed
                next
                  case case_2
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                              (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                  next
                    case case_2
                    by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                              (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+'1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                              (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                  next
                    case case_2
                    by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                              (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                  qed
                next
                  case case_2
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                              (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                  next
                    case case_2
                    by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                              (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        solve( !Time( ('1'+'1'+t+x) ) ▶₀ #i )
          case advance_time
          solve( !Time( ('1'+t+x) ) ▶₀ #vr.8 )
            case advance_time
            solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+'1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                           (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                      case case_1
                      solve( (('1'+'1'+t) = ('1'+t_rev+z))  ∥
                             (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+z+z.1))) )
                        case case_1_case_1
                        by contradiction /* from formulas */
                      next
                        case case_1_case_2
                        by contradiction /* from formulas */
                      next
                        case case_1_case_3
                        by contradiction /* from formulas */
                      next
                        case case_1_case_4
                        by contradiction /* from formulas */
                      next
                        case case_2_case_1
                        by contradiction /* from formulas */
                      next
                        case case_2_case_2
                        by contradiction /* cyclic */
                      next
                        case case_2_case_3
                        by contradiction /* from formulas */
                      next
                        case case_2_case_4
                        by contradiction /* from formulas */
                      next
                        case case_2_case_5
                        by contradiction /* from formulas */
                      next
                        case case_2_case_6
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+'1'+t) = ('1'+t_rev+z+z.1))  ∥
                             (∃ z.2. (('1'+'1'+t) = ('1'+t_rev+z+z.1+z.2))) )
                        case case_1_case_1
                        by contradiction /* from formulas */
                      next
                        case case_1_case_2
                        by contradiction /* from formulas */
                      next
                        case case_1_case_3
                        by contradiction /* from formulas */
                      next
                        case case_1_case_4
                        by contradiction /* from formulas */
                      next
                        case case_1_case_5
                        by contradiction /* from formulas */
                      next
                        case case_1_case_6
                        by contradiction /* from formulas */
                      next
                        case case_2_case_1
                        by contradiction /* from formulas */
                      next
                        case case_2_case_2
                        by contradiction /* from formulas */
                      next
                        case case_2_case_3
                        by contradiction /* cyclic */
                      next
                        case case_2_case_4
                        by contradiction /* from formulas */
                      next
                        case case_2_case_5
                        by contradiction /* from formulas */
                      next
                        case case_2_case_6
                        by contradiction /* from formulas */
                      next
                        case case_2_case_7
                        by contradiction /* from formulas */
                      next
                        case case_2_case_8
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                           (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                           (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                           (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+'1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                           (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                           (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                           (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                           (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_4
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_5
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_10
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( !Time( ('1'+'1'+x) ) ▶₀ #i )
          case advance_time
          solve( !Time( ('1'+x) ) ▶₀ #vr.8 )
            case advance_time
            solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+'1'+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      solve( (('1'+'1'+t) = ('1'+t_rev+tr+x))  ∥
                             (∃ z. (('1'+'1'+t) = ('1'+t_rev+tr+x+z))) )
                        case case_1_case_1
                        by contradiction /* from formulas */
                      next
                        case case_1_case_2
                        by contradiction /* cyclic */
                      next
                        case case_1_case_3
                        by contradiction /* from formulas */
                      next
                        case case_1_case_4
                        by contradiction /* from formulas */
                      next
                        case case_1_case_5
                        by contradiction /* from formulas */
                      next
                        case case_1_case_6
                        by contradiction /* from formulas */
                      next
                        case case_2_case_1
                        by contradiction /* from formulas */
                      next
                        case case_2_case_2
                        by contradiction /* from formulas */
                      next
                        case case_2_case_3
                        by contradiction /* cyclic */
                      next
                        case case_2_case_4
                        by contradiction /* from formulas */
                      next
                        case case_2_case_5
                        by contradiction /* from formulas */
                      next
                        case case_2_case_6
                        by contradiction /* from formulas */
                      next
                        case case_2_case_7
                        by contradiction /* from formulas */
                      next
                        case case_2_case_8
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+'1'+t) = ('1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+tr+x+z+z.1))) )
                        case case_1_case_1
                        by contradiction /* from formulas */
                      next
                        case case_1_case_2
                        by contradiction /* cyclic */
                      next
                        case case_1_case_3
                        by contradiction /* from formulas */
                      next
                        case case_1_case_4
                        by contradiction /* from formulas */
                      next
                        case case_1_case_5
                        by contradiction /* from formulas */
                      next
                        case case_1_case_6
                        by contradiction /* from formulas */
                      next
                        case case_1_case_7
                        by contradiction /* from formulas */
                      next
                        case case_1_case_8
                        by contradiction /* from formulas */
                      next
                        case case_2_case_01
                        by contradiction /* from formulas */
                      next
                        case case_2_case_02
                        by contradiction /* from formulas */
                      next
                        case case_2_case_03
                        by contradiction /* from formulas */
                      next
                        case case_2_case_04
                        by contradiction /* cyclic */
                      next
                        case case_2_case_05
                        by contradiction /* from formulas */
                      next
                        case case_2_case_06
                        by contradiction /* from formulas */
                      next
                        case case_2_case_07
                        by contradiction /* from formulas */
                      next
                        case case_2_case_08
                        by contradiction /* from formulas */
                      next
                        case case_2_case_09
                        by contradiction /* from formulas */
                      next
                        case case_2_case_10
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+'1'+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_11
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( !Time( ('1'+'1'+tr+x) ) ▶₀ #i )
          case advance_time
          solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
            case advance_time
            solve( (¬(#vr.1 < #k))  ∥ (∀ z.1. (('1'+x+z) = (t_rev+z.1)) ⇒ ⊥) )
              case case_1
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+'1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      solve( (('1'+'1'+t) = ('1'+t_rev+z))  ∥
                             (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+z+z.1))) )
                        case case_1_case_1
                        by contradiction /* from formulas */
                      next
                        case case_1_case_2
                        by contradiction /* from formulas */
                      next
                        case case_1_case_3
                        by contradiction /* from formulas */
                      next
                        case case_1_case_4
                        by contradiction /* from formulas */
                      next
                        case case_2_case_1
                        by contradiction /* from formulas */
                      next
                        case case_2_case_2
                        by contradiction /* cyclic */
                      next
                        case case_2_case_3
                        by contradiction /* from formulas */
                      next
                        case case_2_case_4
                        by contradiction /* from formulas */
                      next
                        case case_2_case_5
                        by contradiction /* from formulas */
                      next
                        case case_2_case_6
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+'1'+t) = ('1'+t_rev+z+z.1))  ∥
                             (∃ z.2. (('1'+'1'+t) = ('1'+t_rev+z+z.1+z.2))) )
                        case case_1_case_1
                        by contradiction /* from formulas */
                      next
                        case case_1_case_2
                        by contradiction /* from formulas */
                      next
                        case case_1_case_3
                        by contradiction /* from formulas */
                      next
                        case case_1_case_4
                        by contradiction /* from formulas */
                      next
                        case case_1_case_5
                        by contradiction /* from formulas */
                      next
                        case case_1_case_6
                        by contradiction /* from formulas */
                      next
                        case case_2_case_1
                        by contradiction /* from formulas */
                      next
                        case case_2_case_2
                        by contradiction /* from formulas */
                      next
                        case case_2_case_3
                        by contradiction /* cyclic */
                      next
                        case case_2_case_4
                        by contradiction /* from formulas */
                      next
                        case case_2_case_5
                        by contradiction /* from formulas */
                      next
                        case case_2_case_6
                        by contradiction /* from formulas */
                      next
                        case case_2_case_7
                        by contradiction /* from formulas */
                      next
                        case case_2_case_8
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+'1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_12
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( !Time( ('1'+'1'+x+x.1) ) ▶₀ #i )
          case advance_time
          solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
            case advance_time
            solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+x+x.2) = (t_rev+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+'1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x.1+x.3))  ∥
                           (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+z+x.1+x.3))) )
                      case case_1
                      solve( (('1'+'1'+t) = ('1'+t_rev+x.1+x.2))  ∥
                             (∃ z. (('1'+'1'+t) = ('1'+t_rev+z+x.1+x.2))) )
                        case case_1_case_1
                        by contradiction /* from formulas */
                      next
                        case case_1_case_2
                        by contradiction /* from formulas */
                      next
                        case case_1_case_3
                        by contradiction /* from formulas */
                      next
                        case case_1_case_4
                        by contradiction /* from formulas */
                      next
                        case case_1_case_5
                        by contradiction /* from formulas */
                      next
                        case case_1_case_6
                        by contradiction /* from formulas */
                      next
                        case case_2_case_1
                        by contradiction /* from formulas */
                      next
                        case case_2_case_2
                        by contradiction /* from formulas */
                      next
                        case case_2_case_3
                        by contradiction /* cyclic */
                      next
                        case case_2_case_4
                        by contradiction /* from formulas */
                      next
                        case case_2_case_5
                        by contradiction /* from formulas */
                      next
                        case case_2_case_6
                        by contradiction /* from formulas */
                      next
                        case case_2_case_7
                        by contradiction /* from formulas */
                      next
                        case case_2_case_8
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+'1'+t) = ('1'+t_rev+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+'1'+t) = ('1'+t_rev+z+x.1+z.1+x.2))) )
                        case case_1_case_1
                        by contradiction /* from formulas */
                      next
                        case case_1_case_2
                        by contradiction /* from formulas */
                      next
                        case case_1_case_3
                        by contradiction /* from formulas */
                      next
                        case case_1_case_4
                        by contradiction /* from formulas */
                      next
                        case case_1_case_5
                        by contradiction /* from formulas */
                      next
                        case case_1_case_6
                        by contradiction /* from formulas */
                      next
                        case case_1_case_7
                        by contradiction /* from formulas */
                      next
                        case case_1_case_8
                        by contradiction /* from formulas */
                      next
                        case case_2_case_01
                        by contradiction /* from formulas */
                      next
                        case case_2_case_02
                        by contradiction /* from formulas */
                      next
                        case case_2_case_03
                        by contradiction /* from formulas */
                      next
                        case case_2_case_04
                        by contradiction /* cyclic */
                      next
                        case case_2_case_05
                        by contradiction /* from formulas */
                      next
                        case case_2_case_06
                        by contradiction /* from formulas */
                      next
                        case case_2_case_07
                        by contradiction /* from formulas */
                      next
                        case case_2_case_08
                        by contradiction /* from formulas */
                      next
                        case case_2_case_09
                        by contradiction /* from formulas */
                      next
                        case case_2_case_10
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x.1+x.3))  ∥
                           (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+z+x.1+x.3))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x.1+x.3))  ∥
                           (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+z+x.1+x.3))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x.1+x.3))  ∥
                           (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+z+x.1+x.3))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+'1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x.1+x.3))  ∥
                           (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+z+x.1+x.3))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x.1+x.3))  ∥
                           (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+z+x.1+x.3))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x.1+x.3))  ∥
                           (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+z+x.1+x.3))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x.1+x.3))  ∥
                           (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+z+x.1+x.3))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_13
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( !Time( ('1'+t) ) ▶₀ #i )
          case advance_time
          solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
            case case_1
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              by solve( (('1'+'1') = ('1'+t))  ∥ (∃ z. (('1'+'1') = ('1'+t+z))) )
            next
              case case_2
              by contradiction /* from formulas */
            qed
          next
            case case_2
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              by solve( (('1'+'1') = ('1'+t))  ∥ (∃ z. (('1'+'1') = ('1'+t+z))) )
            next
              case case_2
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        solve( !Time( ('1'+t) ) ▶₀ #i )
          case advance_time
          solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
            case case_1
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (('1'+'1'+t.1) = ('1'+t))  ∥ (∃ z. (('1'+'1'+t.1) = ('1'+t+z))) )
                case case_1
                solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (('1'+'1'+t) = ('1'+'1'+t_rev+tr))  ∥
                         (∃ z. (('1'+'1'+t) = ('1'+'1'+t_rev+tr+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case case_2_case_1
                by contradiction /* cyclic */
              next
                case case_2_case_2
                by contradiction /* from formulas */
              next
                case case_2_case_3
                solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          next
            case case_2
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (('1'+'1'+t.1) = ('1'+t))  ∥ (∃ z. (('1'+'1'+t.1) = ('1'+t+z))) )
                case case_1
                solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (('1'+'1'+t) = ('1'+'1'+t_rev+tr))  ∥
                         (∃ z. (('1'+'1'+t) = ('1'+'1'+t_rev+tr+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case case_2_case_1
                solve( (('1'+t) = ('1'+'1'+t_rev+tr))  ∥
                       (∃ z. (('1'+t) = ('1'+'1'+t_rev+tr+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              next
                case case_2_case_2
                by contradiction /* from formulas */
              next
                case case_2_case_3
                solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_4
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_5
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_14
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( !Time( ('1'+t+tr) ) ▶₀ #i )
          case advance_time
          solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
            case case_1
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                by solve( (('1'+'1') = ('1'+t))  ∥ (∃ z. (('1'+'1') = ('1'+t+z))) )
              next
                case case_2
                by solve( (('1'+'1') = ('1'+t))  ∥ (∃ z. (('1'+'1') = ('1'+t+z))) )
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          next
            case case_2
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                by solve( (('1'+'1') = ('1'+t))  ∥ (∃ z. (('1'+'1') = ('1'+t+z))) )
              next
                case case_2
                by solve( (('1'+'1') = ('1'+t))  ∥ (∃ z. (('1'+'1') = ('1'+t+z))) )
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        solve( !Time( ('1'+t+tr) ) ▶₀ #i )
          case advance_time
          solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
            case case_1
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                solve( (('1'+'1'+t.1) = ('1'+t))  ∥ (∃ z. (('1'+'1'+t.1) = ('1'+t+z))) )
                  case case_1
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr))  ∥
                               (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr))  ∥
                               (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_1
                  by contradiction /* cyclic */
                next
                  case case_2_case_2
                  by contradiction /* from formulas */
                next
                  case case_2_case_3
                  solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( (('1'+'1'+t.1) = ('1'+t))  ∥ (∃ z. (('1'+'1'+t.1) = ('1'+t+z))) )
                  case case_1
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr))  ∥
                               (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr))  ∥
                               (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_1
                  by contradiction /* cyclic */
                next
                  case case_2_case_2
                  by contradiction /* from formulas */
                next
                  case case_2_case_3
                  solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          next
            case case_2
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                solve( (('1'+'1'+t.1) = ('1'+t))  ∥ (∃ z. (('1'+'1'+t.1) = ('1'+t+z))) )
                  case case_1
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr))  ∥
                               (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr))  ∥
                               (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_1
                  solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr))  ∥
                         (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_2
                  by contradiction /* from formulas */
                next
                  case case_2_case_3
                  solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( (('1'+'1'+t.1) = ('1'+t))  ∥ (∃ z. (('1'+'1'+t.1) = ('1'+t+z))) )
                  case case_1
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr))  ∥
                               (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr))  ∥
                               (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_1
                  solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr))  ∥
                         (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_2
                  by contradiction /* from formulas */
                next
                  case case_2_case_3
                  solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_4
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_5
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_15
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( !Time( ('1'+t+x) ) ▶₀ #i )
          case advance_time
          solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
            case case_1
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                by solve( (('1'+'1') = ('1'+t))  ∥ (∃ z. (('1'+'1') = ('1'+t+z))) )
              next
                case case_2
                by solve( (('1'+'1') = ('1'+t))  ∥ (∃ z. (('1'+'1') = ('1'+t+z))) )
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          next
            case case_2
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                by solve( (('1'+'1') = ('1'+t))  ∥ (∃ z. (('1'+'1') = ('1'+t+z))) )
              next
                case case_2
                by solve( (('1'+'1') = ('1'+t))  ∥ (∃ z. (('1'+'1') = ('1'+t+z))) )
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        solve( !Time( ('1'+t+x) ) ▶₀ #i )
          case advance_time
          solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
            case case_1
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                solve( (('1'+'1'+t.1) = ('1'+t))  ∥ (∃ z. (('1'+'1'+t.1) = ('1'+t+z))) )
                  case case_1
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                               (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                               (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_1
                  by contradiction /* cyclic */
                next
                  case case_2_case_2
                  by contradiction /* from formulas */
                next
                  case case_2_case_3
                  solve( !Time( ('1'+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( (('1'+'1'+t.1) = ('1'+t))  ∥ (∃ z. (('1'+'1'+t.1) = ('1'+t+z))) )
                  case case_1
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                               (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                               (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_1
                  by contradiction /* cyclic */
                next
                  case case_2_case_2
                  by contradiction /* from formulas */
                next
                  case case_2_case_3
                  solve( !Time( ('1'+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          next
            case case_2
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                solve( (('1'+'1'+t.1) = ('1'+t))  ∥ (∃ z. (('1'+'1'+t.1) = ('1'+t+z))) )
                  case case_1
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                               (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                               (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_1
                  solve( (('1'+t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                         (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_2
                  by contradiction /* from formulas */
                next
                  case case_2_case_3
                  solve( !Time( ('1'+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( (('1'+'1'+t.1) = ('1'+t))  ∥ (∃ z. (('1'+'1'+t.1) = ('1'+t+z))) )
                  case case_1
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                               (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                               (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_1
                  solve( (('1'+t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                         (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_2
                  by contradiction /* from formulas */
                next
                  case case_2_case_3
                  solve( !Time( ('1'+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_4
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_5
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_16
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_no_revoke_case_17
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( !Time( ('1'+tr+x) ) ▶₀ #i )
          case advance_time
          solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
            case case_1
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                solve( (('1'+'1'+t) = ('1'+x+x.1))  ∥
                       (∃ z. (('1'+'1'+t) = ('1'+x+z+x.1))) )
                  case case_1_case_1
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_1_case_2
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_1_case_3
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                               (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                               (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_1
                  by contradiction /* cyclic */
                next
                  case case_2_case_2
                  solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_3
                  by contradiction /* from formulas */
                next
                  case case_2_case_4
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_5
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( (('1'+'1'+t) = ('1'+x+x.1))  ∥
                       (∃ z. (('1'+'1'+t) = ('1'+x+z+x.1))) )
                  case case_1_case_1
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_1_case_2
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_1_case_3
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                               (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                               (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_1
                  by contradiction /* cyclic */
                next
                  case case_2_case_2
                  solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_3
                  by contradiction /* from formulas */
                next
                  case case_2_case_4
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_5
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          next
            case case_2
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                solve( (('1'+'1'+t) = ('1'+x+x.1))  ∥
                       (∃ z. (('1'+'1'+t) = ('1'+x+z+x.1))) )
                  case case_1_case_1
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_1_case_2
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_1_case_3
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                               (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                               (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_1
                  solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                         (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_2
                  solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_3
                  by contradiction /* from formulas */
                next
                  case case_2_case_4
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_5
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( (('1'+'1'+t) = ('1'+x+x.1))  ∥
                       (∃ z. (('1'+'1'+t) = ('1'+x+z+x.1))) )
                  case case_1_case_1
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_1_case_2
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_1_case_3
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                               (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                               (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_1
                  solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                         (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_2
                  solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_3
                  by contradiction /* from formulas */
                next
                  case case_2_case_4
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_5
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_18
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( !Time( ('1'+x+x.1) ) ▶₀ #i )
          case advance_time
          solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+x+x.2) = (t_rev+z)) ⇒ ⊥) )
            case case_1
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                solve( (('1'+'1'+t) = ('1'+x+x.2))  ∥
                       (∃ z. (('1'+'1'+t) = ('1'+x+z+x.2))) )
                  case case_1_case_1
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                           (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_1_case_2
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                           (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_1_case_3
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                               (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                               (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_1
                  by contradiction /* cyclic */
                next
                  case case_2_case_2
                  solve( !Time( ('1'+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_3
                  by contradiction /* from formulas */
                next
                  case case_2_case_4
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_5
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( (('1'+'1'+t) = ('1'+x+x.2))  ∥
                       (∃ z. (('1'+'1'+t) = ('1'+x+z+x.2))) )
                  case case_1_case_1
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                           (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_1_case_2
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                           (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_1_case_3
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                               (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                               (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_1
                  by contradiction /* cyclic */
                next
                  case case_2_case_2
                  solve( !Time( ('1'+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_3
                  by contradiction /* from formulas */
                next
                  case case_2_case_4
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_5
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          next
            case case_2
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                solve( (('1'+'1'+t) = ('1'+x+x.2))  ∥
                       (∃ z. (('1'+'1'+t) = ('1'+x+z+x.2))) )
                  case case_1_case_1
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                           (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_1_case_2
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                           (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_1_case_3
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                               (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                               (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_1
                  solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                         (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_2
                  solve( !Time( ('1'+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_3
                  by contradiction /* from formulas */
                next
                  case case_2_case_4
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_5
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case case_2
                solve( (('1'+'1'+t) = ('1'+x+x.2))  ∥
                       (∃ z. (('1'+'1'+t) = ('1'+x+z+x.2))) )
                  case case_1_case_1
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                           (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_1_case_2
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                           (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_1_case_3
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                               (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                               (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_1
                  solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                         (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_2
                  solve( !Time( ('1'+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_3
                  by contradiction /* from formulas */
                next
                  case case_2_case_4
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_5
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_19
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
          case case_1
          solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
            case case_1
            by solve( (('1'+'1') = ('1'+t))  ∥ (∃ z. (('1'+'1') = ('1'+t+z))) )
          next
            case case_2
            by contradiction /* from formulas */
          qed
        next
          case case_2
          solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
            case case_1
            by solve( (('1'+'1') = ('1'+t))  ∥ (∃ z. (('1'+'1') = ('1'+t+z))) )
          next
            case case_2
            by contradiction /* from formulas */
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
          case case_1
          solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
            case case_1
            solve( (('1'+'1'+t.1) = ('1'+t))  ∥ (∃ z. (('1'+'1'+t.1) = ('1'+t+z))) )
              case case_1
              solve( !Time( ('1'+t+tr) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_1
              by contradiction /* cyclic */
            next
              case case_2_case_2
              by contradiction /* from formulas */
            next
              case case_2_case_3
              solve( !Time( ('1'+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case case_2
            by contradiction /* from formulas */
          qed
        next
          case case_2
          solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
            case case_1
            solve( (('1'+'1'+t.1) = ('1'+t))  ∥ (∃ z. (('1'+'1'+t.1) = ('1'+t+z))) )
              case case_1
              solve( !Time( ('1'+t+tr) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_1
              solve( ((t+tr) = ('1'+'1'+t_rev+tr))  ∥
                     (∃ z. ((t+tr) = ('1'+'1'+t_rev+tr+z))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_2
              by contradiction /* from formulas */
            next
              case case_2_case_3
              solve( !Time( ('1'+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case case_2
            by contradiction /* from formulas */
          qed
        qed
      next
        case RA_generate_heartbeat_case_4
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_5
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_20
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
          case case_1
          solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
            case case_1
            by solve( (('1'+'1') = ('1'+t))  ∥ (∃ z. (('1'+'1') = ('1'+t+z))) )
          next
            case case_2
            by contradiction /* from formulas */
          qed
        next
          case case_2
          solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
            case case_1
            by solve( (('1'+'1') = ('1'+t))  ∥ (∃ z. (('1'+'1') = ('1'+t+z))) )
          next
            case case_2
            by contradiction /* from formulas */
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
          case case_1
          solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
            case case_1
            solve( (('1'+'1'+t.1) = ('1'+t))  ∥ (∃ z. (('1'+'1'+t.1) = ('1'+t+z))) )
              case case_1
              solve( !Time( ('1'+t+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                           (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                           (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_1
              by contradiction /* cyclic */
            next
              case case_2_case_2
              by contradiction /* from formulas */
            next
              case case_2_case_3
              solve( !Time( ('1'+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case case_2
            by contradiction /* from formulas */
          qed
        next
          case case_2
          solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
            case case_1
            solve( (('1'+'1'+t.1) = ('1'+t))  ∥ (∃ z. (('1'+'1'+t.1) = ('1'+t+z))) )
              case case_1
              solve( !Time( ('1'+t+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                           (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                           (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_1
              solve( ((t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                     (∃ z. ((t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_2
              by contradiction /* from formulas */
            next
              case case_2_case_3
              solve( !Time( ('1'+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case case_2
            by contradiction /* from formulas */
          qed
        qed
      next
        case RA_generate_heartbeat_case_4
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_5
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_21
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
          case case_1
          solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
            case case_1
            solve( (('1'+'1'+t) = ('1'+x+x.1))  ∥
                   (∃ z. (('1'+'1'+t) = ('1'+x+z+x.1))) )
              case case_1_case_1
              solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                case advance_time
                solve( ((t+tr) = ('1'+'1'+t_rev+tr))  ∥
                       (∃ z. ((t+tr) = ('1'+'1'+t_rev+tr+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case case_1_case_2
              solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( ((tr+x) = ('1'+'1'+t_rev+tr))  ∥
                       (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case case_1_case_3
              solve( !Time( ('1'+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_1
              by contradiction /* cyclic */
            next
              case case_2_case_2
              solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_3
              by contradiction /* from formulas */
            next
              case case_2_case_4
              solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_5
              solve( !Time( ('1'+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case case_2
            by contradiction /* from formulas */
          qed
        next
          case case_2
          solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
            case case_1
            solve( (('1'+'1'+t) = ('1'+x+x.1))  ∥
                   (∃ z. (('1'+'1'+t) = ('1'+x+z+x.1))) )
              case case_1_case_1
              solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                case advance_time
                solve( ((t+tr) = ('1'+'1'+t_rev+tr))  ∥
                       (∃ z. ((t+tr) = ('1'+'1'+t_rev+tr+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case case_1_case_2
              solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( ((tr+x) = ('1'+'1'+t_rev+tr))  ∥
                       (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case case_1_case_3
              solve( !Time( ('1'+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                           (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_1
              solve( ((tr+x) = ('1'+'1'+t_rev+tr))  ∥
                     (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+z))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_2
              solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_3
              by contradiction /* from formulas */
            next
              case case_2_case_4
              solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_5
              solve( !Time( ('1'+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case case_2
            by contradiction /* from formulas */
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_22
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+x+x.2) = (t_rev+z)) ⇒ ⊥) )
          case case_1
          solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
            case case_1
            solve( (('1'+'1'+t) = ('1'+x+x.2))  ∥
                   (∃ z. (('1'+'1'+t) = ('1'+x+z+x.2))) )
              case case_1_case_1
              solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                case advance_time
                solve( ((t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                       (∃ z. ((t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case case_1_case_2
              solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( ((x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                       (∃ z. ((x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case case_1_case_3
              solve( !Time( ('1'+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                           (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                           (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_1
              by contradiction /* cyclic */
            next
              case case_2_case_2
              solve( !Time( ('1'+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_3
              by contradiction /* from formulas */
            next
              case case_2_case_4
              solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_5
              solve( !Time( ('1'+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case case_2
            by contradiction /* from formulas */
          qed
        next
          case case_2
          solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
            case case_1
            solve( (('1'+'1'+t) = ('1'+x+x.2))  ∥
                   (∃ z. (('1'+'1'+t) = ('1'+x+z+x.2))) )
              case case_1_case_1
              solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                case advance_time
                solve( ((t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                       (∃ z. ((t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case case_1_case_2
              solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( ((x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                       (∃ z. ((x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case case_1_case_3
              solve( !Time( ('1'+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                           (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                           (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_1
              solve( ((x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                     (∃ z. ((x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_2
              solve( !Time( ('1'+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_3
              by contradiction /* from formulas */
            next
              case case_2_case_4
              solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_5
              solve( !Time( ('1'+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case case_2
            by contradiction /* from formulas */
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_23
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_no_revoke_case_24
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_no_revoke_case_25
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( !Time( ('1'+'1'+x) ) ▶₀ #i )
          case advance_time
          solve( !Time( ('1'+x) ) ▶₀ #vr.7 )
            case advance_time
            solve( (¬(#vr.1 < #k))  ∥ (∀ z.1. (('1'+x+z) = (t_rev+z.1)) ⇒ ⊥) )
              case case_1
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+'1'+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                              (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                  next
                    case case_2
                    by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                              (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                  qed
                next
                  case case_2
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                              (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                  next
                    case case_2
                    by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                              (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+'1'+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                              (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                  next
                    case case_2
                    by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                              (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                  qed
                next
                  case case_2
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                              (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                  next
                    case case_2
                    by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                              (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        solve( !Time( ('1'+'1'+x) ) ▶₀ #i )
          case advance_time
          solve( !Time( ('1'+x) ) ▶₀ #vr.8 )
            case advance_time
            solve( (¬(#vr.1 < #k))  ∥ (∀ z.1. (('1'+x+z) = (t_rev+z.1)) ⇒ ⊥) )
              case case_1
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+'1'+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                      case case_1
                      solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z))  ∥
                             (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))) )
                        case case_1_case_1
                        by contradiction /* from formulas */
                      next
                        case case_1_case_2
                        by contradiction /* from formulas */
                      next
                        case case_1_case_3
                        by contradiction /* from formulas */
                      next
                        case case_1_case_4
                        by contradiction /* from formulas */
                      next
                        case case_2_case_1
                        by contradiction /* from formulas */
                      next
                        case case_2_case_2
                        by contradiction /* from formulas */
                      next
                        case case_2_case_3
                        by contradiction /* from formulas */
                      next
                        case case_2_case_4
                        by contradiction /* from formulas */
                      next
                        case case_2_case_5
                        by contradiction /* from formulas */
                      next
                        case case_2_case_6
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                             (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                        case case_1_case_1
                        by contradiction /* from formulas */
                      next
                        case case_1_case_2
                        by contradiction /* from formulas */
                      next
                        case case_1_case_3
                        by contradiction /* from formulas */
                      next
                        case case_1_case_4
                        by contradiction /* from formulas */
                      next
                        case case_1_case_5
                        by contradiction /* from formulas */
                      next
                        case case_1_case_6
                        by contradiction /* from formulas */
                      next
                        case case_2_case_1
                        by contradiction /* from formulas */
                      next
                        case case_2_case_2
                        by contradiction /* from formulas */
                      next
                        case case_2_case_3
                        by contradiction /* from formulas */
                      next
                        case case_2_case_4
                        by contradiction /* from formulas */
                      next
                        case case_2_case_5
                        by contradiction /* from formulas */
                      next
                        case case_2_case_6
                        by contradiction /* from formulas */
                      next
                        case case_2_case_7
                        by contradiction /* from formulas */
                      next
                        case case_2_case_8
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+'1'+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_4
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_5
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_26
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( !Time( ('1'+t) ) ▶₀ #i )
          case advance_time
          solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
            case case_1
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              by solve( (('1'+'1'+tv) = ('1'+t))  ∥ (∃ z. (('1'+'1'+tv) = ('1'+t+z))) )
            next
              case case_2
              by contradiction /* from formulas */
            qed
          next
            case case_2
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              by solve( (('1'+'1'+tv) = ('1'+t))  ∥ (∃ z. (('1'+'1'+tv) = ('1'+t+z))) )
            next
              case case_2
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        solve( !Time( ('1'+t) ) ▶₀ #i )
          case advance_time
          solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
            case case_1
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (('1'+'1'+tv+t.1) = ('1'+t))  ∥
                     (∃ z. (('1'+'1'+tv+t.1) = ('1'+t+z))) )
                case case_1
                solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+t+tv) = ('1'+'1'+t_rev+tv))  ∥
                           (∃ z. (('1'+'1'+t+tv) = ('1'+'1'+t_rev+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+t+tv) = ('1'+'1'+t_rev+tv))  ∥
                           (∃ z. (('1'+'1'+t+tv) = ('1'+'1'+t_rev+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2_case_01
                by contradiction /* cyclic */
              next
                case case_2_case_02
                by contradiction /* from formulas */
              next
                case case_2_case_03
                solve( !Time( ('1'+tv+x) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+tv+x) = ('1'+'1'+t_rev+tv))  ∥
                           (∃ z. (('1'+'1'+tv+x) = ('1'+'1'+t_rev+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+tv+x) = ('1'+'1'+t_rev+tv))  ∥
                           (∃ z. (('1'+'1'+tv+x) = ('1'+'1'+t_rev+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2_case_04
                solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (('1'+'1'+t) = ('1'+'1'+t_rev+tv))  ∥
                         (∃ z. (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case case_2_case_05
                solve( !Time( ('1'+t+x) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                           (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                           (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2_case_06
                solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.3))  ∥
                           (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.3))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.3))  ∥
                           (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.3))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2_case_07
                solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2_case_08
                solve( (('1'+t+tv) = ('1'+'1'+t_rev+tv))  ∥
                       (∃ z. (('1'+t+tv) = ('1'+'1'+t_rev+tv+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              next
                case case_2_case_09
                solve( (('1'+tv+x) = ('1'+'1'+t_rev+tv))  ∥
                       (∃ z. (('1'+tv+x) = ('1'+'1'+t_rev+tv+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              next
                case case_2_case_10
                solve( (('1'+t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                       (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              next
                case case_2_case_11
                solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.3))  ∥
                       (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.3))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          next
            case case_2
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (('1'+'1'+tv+t.1) = ('1'+t))  ∥
                     (∃ z. (('1'+'1'+tv+t.1) = ('1'+t+z))) )
                case case_1
                solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+t+tv) = ('1'+'1'+t_rev+tv))  ∥
                           (∃ z. (('1'+'1'+t+tv) = ('1'+'1'+t_rev+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+t+tv) = ('1'+'1'+t_rev+tv))  ∥
                           (∃ z. (('1'+'1'+t+tv) = ('1'+'1'+t_rev+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2_case_01
                solve( (('1'+t) = ('1'+'1'+t_rev+tv))  ∥
                       (∃ z. (('1'+t) = ('1'+'1'+t_rev+tv+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              next
                case case_2_case_02
                by contradiction /* from formulas */
              next
                case case_2_case_03
                solve( !Time( ('1'+tv+x) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+tv+x) = ('1'+'1'+t_rev+tv))  ∥
                           (∃ z. (('1'+'1'+tv+x) = ('1'+'1'+t_rev+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+tv+x) = ('1'+'1'+t_rev+tv))  ∥
                           (∃ z. (('1'+'1'+tv+x) = ('1'+'1'+t_rev+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2_case_04
                solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (('1'+'1'+t) = ('1'+'1'+t_rev+tv))  ∥
                         (∃ z. (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case case_2_case_05
                solve( !Time( ('1'+t+x) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                           (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z))  ∥
                           (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+z.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2_case_06
                solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.3))  ∥
                           (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.3))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.3))  ∥
                           (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.3))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2_case_07
                solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tv))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2_case_08
                solve( (('1'+t+tv) = ('1'+'1'+t_rev+tv))  ∥
                       (∃ z. (('1'+t+tv) = ('1'+'1'+t_rev+tv+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              next
                case case_2_case_09
                solve( (('1'+tv+x) = ('1'+'1'+t_rev+tv))  ∥
                       (∃ z. (('1'+tv+x) = ('1'+'1'+t_rev+tv+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              next
                case case_2_case_10
                solve( (('1'+t+x) = ('1'+'1'+t_rev+x+x.1))  ∥
                       (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              next
                case case_2_case_11
                solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.3))  ∥
                       (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.3))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_4
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_5
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_27
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_no_revoke_case_28
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_no_revoke_case_29
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_no_revoke_case_30
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( !Time( ('1'+'1'+t) ) ▶₀ #i )
          case advance_time
          solve( !Time( ('1'+t) ) ▶₀ #vr.7 )
            case advance_time
            solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                by solve( (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z))  ∥
                          (∃ z.1. (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z+z.1))) )
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+'1'+t) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  by solve( (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z))  ∥
                            (∃ z.1. (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z+z.1))) )
                next
                  case case_2
                  by solve( (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z))  ∥
                            (∃ z.1. (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z+z.1))) )
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        solve( !Time( ('1'+'1'+t) ) ▶₀ #i )
          case advance_time
          solve( !Time( ('1'+t) ) ▶₀ #vr.8 )
            case advance_time
            solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z))  ∥
                       (∃ z.1. (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z+z.1))) )
                  case case_1
                  solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z))  ∥
                         (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))) )
                    case case_1_case_1
                    by contradiction /* from formulas */
                  next
                    case case_1_case_2
                    by contradiction /* from formulas */
                  next
                    case case_1_case_3
                    by contradiction /* from formulas */
                  next
                    case case_1_case_4
                    by contradiction /* from formulas */
                  next
                    case case_2_case_1
                    by contradiction /* from formulas */
                  next
                    case case_2_case_2
                    by contradiction /* from formulas */
                  next
                    case case_2_case_3
                    by contradiction /* from formulas */
                  next
                    case case_2_case_4
                    by contradiction /* from formulas */
                  next
                    case case_2_case_5
                    by contradiction /* from formulas */
                  next
                    case case_2_case_6
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                         (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                    case case_1_case_1
                    by contradiction /* from formulas */
                  next
                    case case_1_case_2
                    by contradiction /* from formulas */
                  next
                    case case_1_case_3
                    by contradiction /* from formulas */
                  next
                    case case_1_case_4
                    by contradiction /* from formulas */
                  next
                    case case_1_case_5
                    by contradiction /* from formulas */
                  next
                    case case_1_case_6
                    by contradiction /* from formulas */
                  next
                    case case_2_case_1
                    by contradiction /* from formulas */
                  next
                    case case_2_case_2
                    by contradiction /* from formulas */
                  next
                    case case_2_case_3
                    by contradiction /* from formulas */
                  next
                    case case_2_case_4
                    by contradiction /* from formulas */
                  next
                    case case_2_case_5
                    by contradiction /* from formulas */
                  next
                    case case_2_case_6
                    by contradiction /* from formulas */
                  next
                    case case_2_case_7
                    by contradiction /* from formulas */
                  next
                    case case_2_case_8
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+'1'+t) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z))  ∥
                         (∃ z.1. (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z+z.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z))  ∥
                         (∃ z.1. (('1'+'1'+t) = ('1'+'1'+t_rev+tv+z+z.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_4
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_5
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_31
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( !Time( ('1'+'1'+t+x) ) ▶₀ #i )
          case advance_time
          solve( !Time( ('1'+t+x) ) ▶₀ #vr.7 )
            case advance_time
            solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+'1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                              (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                  next
                    case case_2
                    by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                              (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                  qed
                next
                  case case_2
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                              (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                  next
                    case case_2
                    by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                              (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+'1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                              (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                  next
                    case case_2
                    by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                              (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                  qed
                next
                  case case_2
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                              (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                  next
                    case case_2
                    by solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                              (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        solve( !Time( ('1'+'1'+t+x) ) ▶₀ #i )
          case advance_time
          solve( !Time( ('1'+t+x) ) ▶₀ #vr.8 )
            case advance_time
            solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+'1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                           (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                      case case_1
                      solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z))  ∥
                             (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))) )
                        case case_1_case_1
                        by contradiction /* from formulas */
                      next
                        case case_1_case_2
                        by contradiction /* from formulas */
                      next
                        case case_1_case_3
                        by contradiction /* from formulas */
                      next
                        case case_1_case_4
                        by contradiction /* from formulas */
                      next
                        case case_2_case_1
                        by contradiction /* from formulas */
                      next
                        case case_2_case_2
                        by contradiction /* from formulas */
                      next
                        case case_2_case_3
                        by contradiction /* from formulas */
                      next
                        case case_2_case_4
                        by contradiction /* from formulas */
                      next
                        case case_2_case_5
                        by contradiction /* from formulas */
                      next
                        case case_2_case_6
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                             (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                        case case_1_case_1
                        by contradiction /* from formulas */
                      next
                        case case_1_case_2
                        by contradiction /* from formulas */
                      next
                        case case_1_case_3
                        by contradiction /* from formulas */
                      next
                        case case_1_case_4
                        by contradiction /* from formulas */
                      next
                        case case_1_case_5
                        by contradiction /* from formulas */
                      next
                        case case_1_case_6
                        by contradiction /* from formulas */
                      next
                        case case_2_case_1
                        by contradiction /* from formulas */
                      next
                        case case_2_case_2
                        by contradiction /* from formulas */
                      next
                        case case_2_case_3
                        by contradiction /* from formulas */
                      next
                        case case_2_case_4
                        by contradiction /* from formulas */
                      next
                        case case_2_case_5
                        by contradiction /* from formulas */
                      next
                        case case_2_case_6
                        by contradiction /* from formulas */
                      next
                        case case_2_case_7
                        by contradiction /* from formulas */
                      next
                        case case_2_case_8
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                           (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                           (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                           (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+'1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                           (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                           (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                           (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z))  ∥
                           (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+z.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_4
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_5
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_32
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( !Time( ('1'+'1'+x) ) ▶₀ #i )
          case advance_time
          solve( !Time( ('1'+x) ) ▶₀ #vr.7 )
            case advance_time
            solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+'1'+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                              (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                  next
                    case case_2
                    by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                              (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                  qed
                next
                  case case_2
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                              (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                  next
                    case case_2
                    by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                              (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+'1'+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                              (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                  next
                    case case_2
                    by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                              (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                  qed
                next
                  case case_2
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                              (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                  next
                    case case_2
                    by solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                              (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        solve( !Time( ('1'+'1'+x) ) ▶₀ #i )
          case advance_time
          solve( !Time( ('1'+x) ) ▶₀ #vr.8 )
            case advance_time
            solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+'1'+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      solve( (('1'+'1'+t+tv) = ('1'+t_rev+tr+tv+x))  ∥
                             (∃ z. (('1'+'1'+t+tv) = ('1'+t_rev+tr+tv+x+z))) )
                        case case_1_case_1
                        by contradiction /* from formulas */
                      next
                        case case_1_case_2
                        by contradiction /* from formulas */
                      next
                        case case_1_case_3
                        by contradiction /* from formulas */
                      next
                        case case_1_case_4
                        by contradiction /* from formulas */
                      next
                        case case_1_case_5
                        by contradiction /* from formulas */
                      next
                        case case_1_case_6
                        by contradiction /* from formulas */
                      next
                        case case_2_case_1
                        by contradiction /* from formulas */
                      next
                        case case_2_case_2
                        by contradiction /* from formulas */
                      next
                        case case_2_case_3
                        by contradiction /* from formulas */
                      next
                        case case_2_case_4
                        by contradiction /* from formulas */
                      next
                        case case_2_case_5
                        by contradiction /* from formulas */
                      next
                        case case_2_case_6
                        by contradiction /* from formulas */
                      next
                        case case_2_case_7
                        by contradiction /* from formulas */
                      next
                        case case_2_case_8
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+'1'+t+tv) = ('1'+t_rev+tr+tv+x+z))  ∥
                             (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tr+tv+x+z+z.1))) )
                        case case_1_case_1
                        by contradiction /* from formulas */
                      next
                        case case_1_case_2
                        by contradiction /* from formulas */
                      next
                        case case_1_case_3
                        by contradiction /* from formulas */
                      next
                        case case_1_case_4
                        by contradiction /* from formulas */
                      next
                        case case_1_case_5
                        by contradiction /* from formulas */
                      next
                        case case_1_case_6
                        by contradiction /* from formulas */
                      next
                        case case_1_case_7
                        by contradiction /* from formulas */
                      next
                        case case_1_case_8
                        by contradiction /* from formulas */
                      next
                        case case_2_case_01
                        by contradiction /* from formulas */
                      next
                        case case_2_case_02
                        by contradiction /* from formulas */
                      next
                        case case_2_case_03
                        by contradiction /* from formulas */
                      next
                        case case_2_case_04
                        by contradiction /* from formulas */
                      next
                        case case_2_case_05
                        by contradiction /* from formulas */
                      next
                        case case_2_case_06
                        by contradiction /* from formulas */
                      next
                        case case_2_case_07
                        by contradiction /* from formulas */
                      next
                        case case_2_case_08
                        by contradiction /* from formulas */
                      next
                        case case_2_case_09
                        by contradiction /* from formulas */
                      next
                        case case_2_case_10
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+'1'+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_4
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_5
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_33
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( !Time( ('1'+'1'+tr+x) ) ▶₀ #i )
          case advance_time
          solve( !Time( ('1'+tr+x) ) ▶₀ #vr.7 )
            case advance_time
            solve( (¬(#vr.1 < #k))  ∥ (∀ z.1. (('1'+x+z) = (t_rev+z.1)) ⇒ ⊥) )
              case case_1
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+'1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                              (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                  next
                    case case_2
                    by solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                              (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                  qed
                next
                  case case_2
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                              (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                  next
                    case case_2
                    by solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                              (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+'1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                              (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                  next
                    case case_2
                    by solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                              (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                  qed
                next
                  case case_2
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                              (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                  next
                    case case_2
                    by solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                              (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        solve( !Time( ('1'+'1'+tr+x) ) ▶₀ #i )
          case advance_time
          solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
            case advance_time
            solve( (¬(#vr.1 < #k))  ∥ (∀ z.1. (('1'+x+z) = (t_rev+z.1)) ⇒ ⊥) )
              case case_1
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+'1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z))  ∥
                             (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))) )
                        case case_1_case_1
                        by contradiction /* from formulas */
                      next
                        case case_1_case_2
                        by contradiction /* from formulas */
                      next
                        case case_1_case_3
                        by contradiction /* from formulas */
                      next
                        case case_1_case_4
                        by contradiction /* from formulas */
                      next
                        case case_2_case_1
                        by contradiction /* from formulas */
                      next
                        case case_2_case_2
                        by contradiction /* from formulas */
                      next
                        case case_2_case_3
                        by contradiction /* from formulas */
                      next
                        case case_2_case_4
                        by contradiction /* from formulas */
                      next
                        case case_2_case_5
                        by contradiction /* from formulas */
                      next
                        case case_2_case_6
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1))  ∥
                             (∃ z.2. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+z.1+z.2))) )
                        case case_1_case_1
                        by contradiction /* from formulas */
                      next
                        case case_1_case_2
                        by contradiction /* from formulas */
                      next
                        case case_1_case_3
                        by contradiction /* from formulas */
                      next
                        case case_1_case_4
                        by contradiction /* from formulas */
                      next
                        case case_1_case_5
                        by contradiction /* from formulas */
                      next
                        case case_1_case_6
                        by contradiction /* from formulas */
                      next
                        case case_2_case_1
                        by contradiction /* from formulas */
                      next
                        case case_2_case_2
                        by contradiction /* from formulas */
                      next
                        case case_2_case_3
                        by contradiction /* from formulas */
                      next
                        case case_2_case_4
                        by contradiction /* from formulas */
                      next
                        case case_2_case_5
                        by contradiction /* from formulas */
                      next
                        case case_2_case_6
                        by contradiction /* from formulas */
                      next
                        case case_2_case_7
                        by contradiction /* from formulas */
                      next
                        case case_2_case_8
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+'1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_4
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_5
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_34
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( !Time( ('1'+'1'+x+x.1) ) ▶₀ #i )
          case advance_time
          solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.7 )
            case advance_time
            solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+x+x.2) = (t_rev+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+'1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.3))  ∥
                              (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.3))) )
                  next
                    case case_2
                    by solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.3))  ∥
                              (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.3))) )
                  qed
                next
                  case case_2
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.3))  ∥
                              (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.3))) )
                  next
                    case case_2
                    by solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.3))  ∥
                              (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.3))) )
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+'1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.3))  ∥
                              (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.3))) )
                  next
                    case case_2
                    by solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.3))  ∥
                              (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.3))) )
                  qed
                next
                  case case_2
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    by solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.3))  ∥
                              (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.3))) )
                  next
                    case case_2
                    by solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.3))  ∥
                              (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.3))) )
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        solve( !Time( ('1'+'1'+x+x.1) ) ▶₀ #i )
          case advance_time
          solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
            case advance_time
            solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+x+x.2) = (t_rev+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+'1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.3))  ∥
                           (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.3))) )
                      case case_1
                      solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+x.1+x.2))  ∥
                             (∃ z. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+x.1+x.2))) )
                        case case_1_case_1
                        by contradiction /* from formulas */
                      next
                        case case_1_case_2
                        by contradiction /* from formulas */
                      next
                        case case_1_case_3
                        by contradiction /* from formulas */
                      next
                        case case_1_case_4
                        by contradiction /* from formulas */
                      next
                        case case_1_case_5
                        by contradiction /* from formulas */
                      next
                        case case_1_case_6
                        by contradiction /* from formulas */
                      next
                        case case_2_case_1
                        by contradiction /* from formulas */
                      next
                        case case_2_case_2
                        by contradiction /* from formulas */
                      next
                        case case_2_case_3
                        by contradiction /* from formulas */
                      next
                        case case_2_case_4
                        by contradiction /* from formulas */
                      next
                        case case_2_case_5
                        by contradiction /* from formulas */
                      next
                        case case_2_case_6
                        by contradiction /* from formulas */
                      next
                        case case_2_case_7
                        by contradiction /* from formulas */
                      next
                        case case_2_case_8
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+'1'+t+tv) = ('1'+t_rev+tv+z+x.1+z.1+x.2))) )
                        case case_1_case_1
                        by contradiction /* from formulas */
                      next
                        case case_1_case_2
                        by contradiction /* from formulas */
                      next
                        case case_1_case_3
                        by contradiction /* from formulas */
                      next
                        case case_1_case_4
                        by contradiction /* from formulas */
                      next
                        case case_1_case_5
                        by contradiction /* from formulas */
                      next
                        case case_1_case_6
                        by contradiction /* from formulas */
                      next
                        case case_1_case_7
                        by contradiction /* from formulas */
                      next
                        case case_1_case_8
                        by contradiction /* from formulas */
                      next
                        case case_2_case_01
                        by contradiction /* from formulas */
                      next
                        case case_2_case_02
                        by contradiction /* from formulas */
                      next
                        case case_2_case_03
                        by contradiction /* from formulas */
                      next
                        case case_2_case_04
                        by contradiction /* from formulas */
                      next
                        case case_2_case_05
                        by contradiction /* from formulas */
                      next
                        case case_2_case_06
                        by contradiction /* from formulas */
                      next
                        case case_2_case_07
                        by contradiction /* from formulas */
                      next
                        case case_2_case_08
                        by contradiction /* from formulas */
                      next
                        case case_2_case_09
                        by contradiction /* from formulas */
                      next
                        case case_2_case_10
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.3))  ∥
                           (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.3))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.3))  ∥
                           (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.3))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.3))  ∥
                           (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.3))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2
              solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
                case case_1
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+'1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.3))  ∥
                           (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.3))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.3))  ∥
                           (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.3))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2
                  solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.3))  ∥
                           (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.3))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x.1+x.3))  ∥
                           (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+z+x.1+x.3))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_4
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_5
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_35
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( !Time( ('1'+t) ) ▶₀ #i )
          case advance_time
          solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
            case case_1
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              by solve( (('1'+'1'+tv) = ('1'+t))  ∥ (∃ z. (('1'+'1'+tv) = ('1'+t+z))) )
            next
              case case_2
              by contradiction /* from formulas */
            qed
          next
            case case_2
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              by solve( (('1'+'1'+tv) = ('1'+t))  ∥ (∃ z. (('1'+'1'+tv) = ('1'+t+z))) )
            next
              case case_2
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        solve( !Time( ('1'+t) ) ▶₀ #i )
          case advance_time
          solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
            case case_1
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (('1'+'1'+tv+t.1) = ('1'+t))  ∥
                     (∃ z. (('1'+'1'+tv+t.1) = ('1'+t+z))) )
                case case_1
                solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+t+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+'1'+t+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+t+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+'1'+t+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2_case_01
                by contradiction /* cyclic */
              next
                case case_2_case_02
                by contradiction /* from formulas */
              next
                case case_2_case_03
                solve( !Time( ('1'+tv+x) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+'1'+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+'1'+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2_case_04
                solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (('1'+'1'+t) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+'1'+t) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case case_2_case_05
                solve( !Time( ('1'+t+x) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                           (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                           (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2_case_06
                solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                           (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                           (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2_case_07
                solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2_case_08
                solve( (('1'+t+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                       (∃ z. (('1'+t+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              next
                case case_2_case_09
                solve( (('1'+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                       (∃ z. (('1'+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              next
                case case_2_case_10
                solve( (('1'+t+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                       (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              next
                case case_2_case_11
                solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                       (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          next
            case case_2
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (('1'+'1'+tv+t.1) = ('1'+t))  ∥
                     (∃ z. (('1'+'1'+tv+t.1) = ('1'+t+z))) )
                case case_1
                solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+t+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+'1'+t+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+t+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+'1'+t+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2_case_01
                solve( (('1'+t) = ('1'+'1'+t_rev+tr+tv))  ∥
                       (∃ z. (('1'+t) = ('1'+'1'+t_rev+tr+tv+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              next
                case case_2_case_02
                by contradiction /* from formulas */
              next
                case case_2_case_03
                solve( !Time( ('1'+tv+x) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+'1'+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+'1'+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2_case_04
                solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (('1'+'1'+t) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+'1'+t) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case case_2_case_05
                solve( !Time( ('1'+t+x) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                           (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                           (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2_case_06
                solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                           (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                           (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2_case_07
                solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+'1'+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              next
                case case_2_case_08
                solve( (('1'+t+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                       (∃ z. (('1'+t+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              next
                case case_2_case_09
                solve( (('1'+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                       (∃ z. (('1'+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              next
                case case_2_case_10
                solve( (('1'+t+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                       (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              next
                case case_2_case_11
                solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                       (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_4
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_5
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_36
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( !Time( ('1'+t+tr) ) ▶₀ #i )
          case advance_time
          solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
            case case_1
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                by solve( (('1'+'1'+tv) = ('1'+t))  ∥ (∃ z. (('1'+'1'+tv) = ('1'+t+z))) )
              next
                case case_2
                by solve( (('1'+'1'+tv) = ('1'+t))  ∥ (∃ z. (('1'+'1'+tv) = ('1'+t+z))) )
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          next
            case case_2
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                by solve( (('1'+'1'+tv) = ('1'+t))  ∥ (∃ z. (('1'+'1'+tv) = ('1'+t+z))) )
              next
                case case_2
                by solve( (('1'+'1'+tv) = ('1'+t))  ∥ (∃ z. (('1'+'1'+tv) = ('1'+t+z))) )
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        solve( !Time( ('1'+t+tr) ) ▶₀ #i )
          case advance_time
          solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
            case case_1
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                solve( (('1'+'1'+tv+t.1) = ('1'+t))  ∥
                       (∃ z. (('1'+'1'+tv+t.1) = ('1'+t+z))) )
                  case case_1
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr+tv) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+tv) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+tv) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_01
                  by contradiction /* cyclic */
                next
                  case case_2_case_02
                  by contradiction /* from formulas */
                next
                  case case_2_case_03
                  solve( !Time( ('1'+tv+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+tv+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_04
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                               (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                               (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_05
                  solve( !Time( ('1'+t+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_06
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_07
                  solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_08
                  solve( (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_09
                  solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_10
                  solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                         (∃ z. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_11
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case case_2
                solve( (('1'+'1'+tv+t.1) = ('1'+t))  ∥
                       (∃ z. (('1'+'1'+tv+t.1) = ('1'+t+z))) )
                  case case_1
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr+tv) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+tv) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+tv) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_01
                  by contradiction /* cyclic */
                next
                  case case_2_case_02
                  by contradiction /* from formulas */
                next
                  case case_2_case_03
                  solve( !Time( ('1'+tv+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+tv+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_04
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                               (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                               (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_05
                  solve( !Time( ('1'+t+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_06
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_07
                  solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_08
                  solve( (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_09
                  solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_10
                  solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                         (∃ z. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_11
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          next
            case case_2
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                solve( (('1'+'1'+tv+t.1) = ('1'+t))  ∥
                       (∃ z. (('1'+'1'+tv+t.1) = ('1'+t+z))) )
                  case case_1
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr+tv) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+tv) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+tv) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_01
                  solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_02
                  by contradiction /* from formulas */
                next
                  case case_2_case_03
                  solve( !Time( ('1'+tv+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+tv+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_04
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                               (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                               (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_05
                  solve( !Time( ('1'+t+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_06
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_07
                  solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_08
                  solve( (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_09
                  solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_10
                  solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                         (∃ z. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_11
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case case_2
                solve( (('1'+'1'+tv+t.1) = ('1'+t))  ∥
                       (∃ z. (('1'+'1'+tv+t.1) = ('1'+t+z))) )
                  case case_1
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr+tv) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+tv) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+tv) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_01
                  solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_02
                  by contradiction /* from formulas */
                next
                  case case_2_case_03
                  solve( !Time( ('1'+tv+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+tv+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_04
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                               (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                               (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_05
                  solve( !Time( ('1'+t+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_06
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_07
                  solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_08
                  solve( (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_09
                  solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_10
                  solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                         (∃ z. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_11
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_4
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_5
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_37
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( !Time( ('1'+t+x) ) ▶₀ #i )
          case advance_time
          solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
            case case_1
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                by solve( (('1'+'1'+tv) = ('1'+t))  ∥ (∃ z. (('1'+'1'+tv) = ('1'+t+z))) )
              next
                case case_2
                by solve( (('1'+'1'+tv) = ('1'+t))  ∥ (∃ z. (('1'+'1'+tv) = ('1'+t+z))) )
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          next
            case case_2
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                by solve( (('1'+'1'+tv) = ('1'+t))  ∥ (∃ z. (('1'+'1'+tv) = ('1'+t+z))) )
              next
                case case_2
                by solve( (('1'+'1'+tv) = ('1'+t))  ∥ (∃ z. (('1'+'1'+tv) = ('1'+t+z))) )
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        solve( !Time( ('1'+t+x) ) ▶₀ #i )
          case advance_time
          solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
            case case_1
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                solve( (('1'+'1'+tv+t.1) = ('1'+t))  ∥
                       (∃ z. (('1'+'1'+tv+t.1) = ('1'+t+z))) )
                  case case_1
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tv+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_01
                  by contradiction /* cyclic */
                next
                  case case_2_case_02
                  by contradiction /* from formulas */
                next
                  case case_2_case_03
                  solve( !Time( ('1'+tv+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_04
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                               (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                               (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_05
                  solve( !Time( ('1'+t+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_06
                  solve( !Time( ('1'+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_07
                  solve( !Time( ('1'+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_08
                  solve( (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                         (∃ z. (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_09
                  solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_10
                  solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                         (∃ z. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_11
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case case_2
                solve( (('1'+'1'+tv+t.1) = ('1'+t))  ∥
                       (∃ z. (('1'+'1'+tv+t.1) = ('1'+t+z))) )
                  case case_1
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tv+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_01
                  by contradiction /* cyclic */
                next
                  case case_2_case_02
                  by contradiction /* from formulas */
                next
                  case case_2_case_03
                  solve( !Time( ('1'+tv+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_04
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                               (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                               (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_05
                  solve( !Time( ('1'+t+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_06
                  solve( !Time( ('1'+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_07
                  solve( !Time( ('1'+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_08
                  solve( (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                         (∃ z. (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_09
                  solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_10
                  solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                         (∃ z. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_11
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          next
            case case_2
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                solve( (('1'+'1'+tv+t.1) = ('1'+t))  ∥
                       (∃ z. (('1'+'1'+tv+t.1) = ('1'+t+z))) )
                  case case_1
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tv+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_01
                  solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                         (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_02
                  by contradiction /* from formulas */
                next
                  case case_2_case_03
                  solve( !Time( ('1'+tv+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_04
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                               (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                               (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_05
                  solve( !Time( ('1'+t+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_06
                  solve( !Time( ('1'+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_07
                  solve( !Time( ('1'+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_08
                  solve( (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                         (∃ z. (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_09
                  solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_10
                  solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                         (∃ z. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_11
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case case_2
                solve( (('1'+'1'+tv+t.1) = ('1'+t))  ∥
                       (∃ z. (('1'+'1'+tv+t.1) = ('1'+t+z))) )
                  case case_1
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tv+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_01
                  solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                         (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_02
                  by contradiction /* from formulas */
                next
                  case case_2_case_03
                  solve( !Time( ('1'+tv+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_04
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                               (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                               (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_05
                  solve( !Time( ('1'+t+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_06
                  solve( !Time( ('1'+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_07
                  solve( !Time( ('1'+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_08
                  solve( (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                         (∃ z. (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_09
                  solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_10
                  solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                         (∃ z. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_11
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_4
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_5
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_38
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_no_revoke_case_39
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( !Time( ('1'+tr+x) ) ▶₀ #i )
          case advance_time
          solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
            case case_1
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                by solve( (('1'+'1'+tv) = ('1'+x+x.1))  ∥
                          (∃ z. (('1'+'1'+tv) = ('1'+x+z+x.1))) )
              next
                case case_2
                by solve( (('1'+'1'+tv) = ('1'+x+x.1))  ∥
                          (∃ z. (('1'+'1'+tv) = ('1'+x+z+x.1))) )
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          next
            case case_2
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                by solve( (('1'+'1'+tv) = ('1'+x+x.1))  ∥
                          (∃ z. (('1'+'1'+tv) = ('1'+x+z+x.1))) )
              next
                case case_2
                by solve( (('1'+'1'+tv) = ('1'+x+x.1))  ∥
                          (∃ z. (('1'+'1'+tv) = ('1'+x+z+x.1))) )
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        solve( !Time( ('1'+tr+x) ) ▶₀ #i )
          case advance_time
          solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
            case case_1
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                solve( (('1'+'1'+t+tv) = ('1'+x+x.1))  ∥
                       (∃ z. (('1'+'1'+t+tv) = ('1'+x+z+x.1))) )
                  case case_1_case_01
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_02
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_03
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_04
                  solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_05
                  solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                             (∃ z. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                             (∃ z. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_06
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_07
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_08
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+tv+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_09
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_10
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_11
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_01
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2_case_02
                  solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_03
                  solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                         (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_04
                  solve( !Time( ('1'+t+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_05
                  solve( !Time( ('1'+t+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_06
                  solve( !Time( ('1'+t+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_07
                  solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                         (∃ z. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_08
                  solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_09
                  solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1+x.2))  ∥
                         (∃ z. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_10
                  solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_11
                  solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_12
                  solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_13
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2_case_14
                  solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_15
                  by contradiction /* cyclic */
                next
                  case case_2_case_16
                  solve( !Time( ('1'+tv+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_17
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                               (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                               (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_18
                  solve( !Time( ('1'+tv+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_19
                  solve( !Time( ('1'+tv+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_20
                  solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_21
                  solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                         (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_22
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                             (∃ z.1. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                             (∃ z.1. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_23
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_24
                  solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.2+x.3))  ∥
                         (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_25
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_26
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_27
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_28
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_29
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_30
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_31
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_32
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_33
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_34
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_35
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_36
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_37
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_38
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_39
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_40
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.4))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_41
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_42
                  solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_43
                  by contradiction /* from formulas */
                next
                  case case_2_case_44
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_45
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_46
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_47
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+tv+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_48
                  solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_49
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_50
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_51
                  solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                         (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_52
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_53
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_54
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_55
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_56
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_57
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_58
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_59
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_60
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_61
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case case_2
                solve( (('1'+'1'+t+tv) = ('1'+x+x.1))  ∥
                       (∃ z. (('1'+'1'+t+tv) = ('1'+x+z+x.1))) )
                  case case_1_case_01
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_02
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_03
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_04
                  solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_05
                  solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                             (∃ z. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                             (∃ z. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_06
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_07
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_08
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+tv+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_09
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_10
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_11
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_01
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2_case_02
                  solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_03
                  solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                         (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_04
                  solve( !Time( ('1'+t+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_05
                  solve( !Time( ('1'+t+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_06
                  solve( !Time( ('1'+t+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_07
                  solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                         (∃ z. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_08
                  solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_09
                  solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1+x.2))  ∥
                         (∃ z. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_10
                  solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_11
                  solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_12
                  solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_13
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2_case_14
                  solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_15
                  by contradiction /* cyclic */
                next
                  case case_2_case_16
                  solve( !Time( ('1'+tv+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_17
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                               (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                               (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_18
                  solve( !Time( ('1'+tv+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_19
                  solve( !Time( ('1'+tv+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_20
                  solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_21
                  solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                         (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_22
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                             (∃ z.1. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                             (∃ z.1. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_23
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_24
                  solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.2+x.3))  ∥
                         (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_25
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_26
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_27
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_28
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_29
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_30
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_31
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_32
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_33
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_34
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_35
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_36
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_37
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_38
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_39
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_40
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.4))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_41
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_42
                  solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_43
                  by contradiction /* from formulas */
                next
                  case case_2_case_44
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_45
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_46
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_47
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+tv+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_48
                  solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_49
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_50
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_51
                  solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                         (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_52
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_53
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_54
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_55
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_56
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_57
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_58
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_59
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_60
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_61
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          next
            case case_2
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                solve( (('1'+'1'+t+tv) = ('1'+x+x.1))  ∥
                       (∃ z. (('1'+'1'+t+tv) = ('1'+x+z+x.1))) )
                  case case_1_case_01
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_02
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_03
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_04
                  solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_05
                  solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                             (∃ z. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                             (∃ z. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_06
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_07
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_08
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+tv+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_09
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_10
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_11
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_01
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2_case_02
                  solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_03
                  solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                         (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_04
                  solve( !Time( ('1'+t+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_05
                  solve( !Time( ('1'+t+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_06
                  solve( !Time( ('1'+t+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_07
                  solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                         (∃ z. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_08
                  solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_09
                  solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1+x.2))  ∥
                         (∃ z. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_10
                  solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_11
                  solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_12
                  solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_13
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2_case_14
                  solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_15
                  solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_16
                  solve( !Time( ('1'+tv+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_17
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                               (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                               (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_18
                  solve( !Time( ('1'+tv+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_19
                  solve( !Time( ('1'+tv+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_20
                  solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_21
                  solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                         (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_22
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                             (∃ z.1. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                             (∃ z.1. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_23
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_24
                  solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.2+x.3))  ∥
                         (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_25
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_26
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_27
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_28
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_29
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_30
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_31
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_32
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_33
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_34
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_35
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_36
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_37
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_38
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_39
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_40
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.4))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_41
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_42
                  solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_43
                  by contradiction /* from formulas */
                next
                  case case_2_case_44
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_45
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_46
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_47
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+tv+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_48
                  solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_49
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_50
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_51
                  solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                         (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_52
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_53
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_54
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_55
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_56
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_57
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_58
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_59
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_60
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_61
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case case_2
                solve( (('1'+'1'+t+tv) = ('1'+x+x.1))  ∥
                       (∃ z. (('1'+'1'+t+tv) = ('1'+x+z+x.1))) )
                  case case_1_case_01
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_02
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_03
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_04
                  solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_05
                  solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                             (∃ z. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                             (∃ z. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_06
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_07
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_08
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+tv+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_09
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_10
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_11
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_01
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2_case_02
                  solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_03
                  solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                         (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_04
                  solve( !Time( ('1'+t+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_05
                  solve( !Time( ('1'+t+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_06
                  solve( !Time( ('1'+t+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_07
                  solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                         (∃ z. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_08
                  solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_09
                  solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1+x.2))  ∥
                         (∃ z. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_10
                  solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_11
                  solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_12
                  solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_13
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2_case_14
                  solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_15
                  solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_16
                  solve( !Time( ('1'+tv+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_17
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                               (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                               (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_18
                  solve( !Time( ('1'+tv+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_19
                  solve( !Time( ('1'+tv+x) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_20
                  solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_21
                  solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                         (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_22
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                             (∃ z.1. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                             (∃ z.1. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_23
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_24
                  solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.2+x.3))  ∥
                         (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_25
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_26
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_27
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_28
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_29
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_30
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_31
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_32
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_33
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_34
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_35
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_36
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_37
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_38
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_39
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_40
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.4))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_41
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_42
                  solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_43
                  by contradiction /* from formulas */
                next
                  case case_2_case_44
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_45
                  solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_46
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_47
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+tv+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                                 (∃ z. (('1'+'1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_48
                  solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_49
                  solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_50
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_51
                  solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                         (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_52
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_53
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_54
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_55
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_56
                  solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_57
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_58
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_59
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_60
                  solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_61
                  solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                         (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_4
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_5
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_40
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( !Time( ('1'+x+x.1) ) ▶₀ #i )
          case advance_time
          solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+x+x.2) = (t_rev+z)) ⇒ ⊥) )
            case case_1
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                by solve( (('1'+'1'+tv) = ('1'+x+x.2))  ∥
                          (∃ z. (('1'+'1'+tv) = ('1'+x+z+x.2))) )
              next
                case case_2
                by solve( (('1'+'1'+tv) = ('1'+x+x.2))  ∥
                          (∃ z. (('1'+'1'+tv) = ('1'+x+z+x.2))) )
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          next
            case case_2
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#vr.7 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                by solve( (('1'+'1'+tv) = ('1'+x+x.2))  ∥
                          (∃ z. (('1'+'1'+tv) = ('1'+x+z+x.2))) )
              next
                case case_2
                by solve( (('1'+'1'+tv) = ('1'+x+x.2))  ∥
                          (∃ z. (('1'+'1'+tv) = ('1'+x+z+x.2))) )
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        solve( !Time( ('1'+x+x.1) ) ▶₀ #i )
          case advance_time
          solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+x+x.2) = (t_rev+z)) ⇒ ⊥) )
            case case_1
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                solve( (('1'+'1'+t+tv) = ('1'+x+x.2))  ∥
                       (∃ z. (('1'+'1'+t+tv) = ('1'+x+z+x.2))) )
                  case case_1_case_01
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_02
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_03
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_04
                  solve( !Time( ('1'+t+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                                 (∃ z. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                                 (∃ z. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                                 (∃ z. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                                 (∃ z. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_05
                  solve( !Time( ('1'+t+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                             (∃ z. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                             (∃ z. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_06
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_07
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_08
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_09
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_10
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥
                             (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_11
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_01
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                           (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2_case_02
                  solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                         (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_03
                  solve( (('1'+t+x) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                         (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_04
                  solve( !Time( ('1'+t+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_05
                  solve( !Time( ('1'+t+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_06
                  solve( !Time( ('1'+t+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_07
                  solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                         (∃ z. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_08
                  solve( !Time( ('1'+t+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_09
                  solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3+x.4))  ∥
                         (∃ z. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_10
                  solve( !Time( ('1'+t+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_11
                  solve( !Time( ('1'+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_12
                  solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_13
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                           (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2_case_14
                  solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_15
                  by contradiction /* cyclic */
                next
                  case case_2_case_16
                  solve( !Time( ('1'+tv+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_17
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                               (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                               (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_18
                  solve( !Time( ('1'+tv+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_19
                  solve( !Time( ('1'+tv+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_20
                  solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_21
                  solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                         (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_22
                  solve( !Time( ('1'+x.1+x.3+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                             (∃ z.1. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                             (∃ z.1. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_23
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_24
                  solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.4+x.5))  ∥
                         (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_25
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_26
                  solve( !Time( ('1'+x.1+x.3+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_27
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_28
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_29
                  solve( !Time( ('1'+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_30
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_31
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_32
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_33
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_34
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_35
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_36
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥
                             (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_37
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_38
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_39
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_40
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.6))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.6))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_41
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_42
                  solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_43
                  by contradiction /* from formulas */
                next
                  case case_2_case_44
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_45
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_46
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_47
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_48
                  solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_49
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_50
                  solve( !Time( ('1'+x.1+x.3+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_51
                  solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                         (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_52
                  solve( !Time( ('1'+x.1+x.3+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_53
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_54
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥
                             (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_55
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_56
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_57
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_58
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_59
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥
                             (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_60
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_61
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case case_2
                solve( (('1'+'1'+t+tv) = ('1'+x+x.2))  ∥
                       (∃ z. (('1'+'1'+t+tv) = ('1'+x+z+x.2))) )
                  case case_1_case_01
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_02
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_03
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_04
                  solve( !Time( ('1'+t+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                                 (∃ z. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                                 (∃ z. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                                 (∃ z. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                                 (∃ z. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_05
                  solve( !Time( ('1'+t+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                             (∃ z. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                             (∃ z. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_06
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_07
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_08
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_09
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_10
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥
                             (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_11
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_01
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                           (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2_case_02
                  solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                         (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_03
                  solve( (('1'+t+x) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                         (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_04
                  solve( !Time( ('1'+t+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_05
                  solve( !Time( ('1'+t+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_06
                  solve( !Time( ('1'+t+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_07
                  solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                         (∃ z. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_08
                  solve( !Time( ('1'+t+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_09
                  solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3+x.4))  ∥
                         (∃ z. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_10
                  solve( !Time( ('1'+t+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_11
                  solve( !Time( ('1'+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_12
                  solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_13
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                           (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2_case_14
                  solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_15
                  by contradiction /* cyclic */
                next
                  case case_2_case_16
                  solve( !Time( ('1'+tv+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_17
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                               (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                               (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_18
                  solve( !Time( ('1'+tv+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_19
                  solve( !Time( ('1'+tv+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_20
                  solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_21
                  solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                         (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_22
                  solve( !Time( ('1'+x.1+x.3+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                             (∃ z.1. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                             (∃ z.1. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_23
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_24
                  solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.4+x.5))  ∥
                         (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_25
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_26
                  solve( !Time( ('1'+x.1+x.3+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_27
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_28
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_29
                  solve( !Time( ('1'+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_30
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_31
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_32
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_33
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_34
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_35
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_36
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥
                             (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_37
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_38
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_39
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_40
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.6))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.6))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_41
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_42
                  solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_43
                  by contradiction /* from formulas */
                next
                  case case_2_case_44
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_45
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_46
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_47
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_48
                  solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_49
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_50
                  solve( !Time( ('1'+x.1+x.3+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_51
                  solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                         (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_52
                  solve( !Time( ('1'+x.1+x.3+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_53
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_54
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥
                             (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_55
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_56
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_57
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_58
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_59
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥
                             (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_60
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_61
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          next
            case case_2
            solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
              case case_1
              solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                case case_1
                solve( (('1'+'1'+t+tv) = ('1'+x+x.2))  ∥
                       (∃ z. (('1'+'1'+t+tv) = ('1'+x+z+x.2))) )
                  case case_1_case_01
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_02
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_03
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_04
                  solve( !Time( ('1'+t+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                                 (∃ z. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                                 (∃ z. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                                 (∃ z. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                                 (∃ z. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_05
                  solve( !Time( ('1'+t+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                             (∃ z. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                             (∃ z. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_06
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_07
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_08
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_09
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_10
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥
                             (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_11
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_01
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                           (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2_case_02
                  solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                         (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_03
                  solve( (('1'+t+x) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                         (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_04
                  solve( !Time( ('1'+t+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_05
                  solve( !Time( ('1'+t+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_06
                  solve( !Time( ('1'+t+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_07
                  solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                         (∃ z. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_08
                  solve( !Time( ('1'+t+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_09
                  solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3+x.4))  ∥
                         (∃ z. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_10
                  solve( !Time( ('1'+t+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_11
                  solve( !Time( ('1'+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_12
                  solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_13
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                           (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2_case_14
                  solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_15
                  solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_16
                  solve( !Time( ('1'+tv+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_17
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                               (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                               (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_18
                  solve( !Time( ('1'+tv+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_19
                  solve( !Time( ('1'+tv+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_20
                  solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_21
                  solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                         (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_22
                  solve( !Time( ('1'+x.1+x.3+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                             (∃ z.1. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                             (∃ z.1. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_23
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_24
                  solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.4+x.5))  ∥
                         (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_25
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_26
                  solve( !Time( ('1'+x.1+x.3+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_27
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_28
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_29
                  solve( !Time( ('1'+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_30
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_31
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_32
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_33
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_34
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_35
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_36
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥
                             (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_37
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_38
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_39
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_40
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.6))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.6))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_41
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_42
                  solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_43
                  by contradiction /* from formulas */
                next
                  case case_2_case_44
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_45
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_46
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_47
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_48
                  solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_49
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_50
                  solve( !Time( ('1'+x.1+x.3+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_51
                  solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                         (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_52
                  solve( !Time( ('1'+x.1+x.3+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_53
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_54
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥
                             (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_55
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_56
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_57
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_58
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_59
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥
                             (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_60
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_61
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              next
                case case_2
                solve( (('1'+'1'+t+tv) = ('1'+x+x.2))  ∥
                       (∃ z. (('1'+'1'+t+tv) = ('1'+x+z+x.2))) )
                  case case_1_case_01
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_02
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                                 (∃ z. (('1'+'1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_03
                  solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_04
                  solve( !Time( ('1'+t+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                                 (∃ z. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                                 (∃ z. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                                 (∃ z. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                                 (∃ z. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_05
                  solve( !Time( ('1'+t+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                             (∃ z. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                             (∃ z. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_06
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_07
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_08
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_09
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_1_case_10
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥
                             (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_1_case_11
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_01
                  solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                           (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2_case_02
                  solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                         (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_03
                  solve( (('1'+t+x) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                         (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_04
                  solve( !Time( ('1'+t+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_05
                  solve( !Time( ('1'+t+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+x) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.2) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                                 (∃ z.1. (('1'+'1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_06
                  solve( !Time( ('1'+t+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_07
                  solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                         (∃ z. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_08
                  solve( !Time( ('1'+t+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_09
                  solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3+x.4))  ∥
                         (∃ z. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_10
                  solve( !Time( ('1'+t+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_11
                  solve( !Time( ('1'+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_12
                  solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_13
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                           (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case case_2_case_14
                  solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_15
                  solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_16
                  solve( !Time( ('1'+tv+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_17
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                               (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      next
                        case case_2
                        solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                               (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          by contradiction /* from formulas */
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_18
                  solve( !Time( ('1'+tv+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_19
                  solve( !Time( ('1'+tv+x.1) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_20
                  solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_21
                  solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                         (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_22
                  solve( !Time( ('1'+x.1+x.3+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                             (∃ z.1. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                             (∃ z.1. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_23
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_24
                  solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.4+x.5))  ∥
                         (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_25
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_26
                  solve( !Time( ('1'+x.1+x.3+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_27
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_28
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_29
                  solve( !Time( ('1'+x.1+x.2) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_30
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_31
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_32
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_33
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_34
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_35
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_36
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥
                             (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                                 (∃ z.1. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_37
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_38
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_39
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_40
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.6))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.6))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_41
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_42
                  solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_43
                  by contradiction /* from formulas */
                next
                  case case_2_case_44
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_45
                  solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_46
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_47
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                                 (∃ z. (('1'+'1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_48
                  solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_49
                  solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_50
                  solve( !Time( ('1'+x.1+x.3+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_51
                  solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                         (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_52
                  solve( !Time( ('1'+x.1+x.3+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_53
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_54
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥
                             (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_55
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_56
                  solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_57
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_58
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2_case_59
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.8 )
                      case advance_time
                      solve( (¬(#vr.9 < #k))  ∥
                             (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                        case case_1
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      next
                        case case_2
                        solve( (¬(#vr.10 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                          case case_1
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        next
                          case case_2
                          solve( (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                                 (∃ z. (('1'+'1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            by contradiction /* from formulas */
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case case_2_case_60
                  solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                    case advance_time
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                next
                  case case_2_case_61
                  solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                         (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2
              by contradiction /* from formulas */
            qed
          qed
        qed
      next
        case RA_generate_heartbeat_case_4
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_5
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_41
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
          case case_1
          solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
            case case_1
            by solve( (('1'+'1'+tv) = ('1'+t))  ∥ (∃ z. (('1'+'1'+tv) = ('1'+t+z))) )
          next
            case case_2
            by contradiction /* from formulas */
          qed
        next
          case case_2
          solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
            case case_1
            by solve( (('1'+'1'+tv) = ('1'+t))  ∥ (∃ z. (('1'+'1'+tv) = ('1'+t+z))) )
          next
            case case_2
            by contradiction /* from formulas */
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
          case case_1
          solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
            case case_1
            solve( (('1'+'1'+tv+t.1) = ('1'+t))  ∥
                   (∃ z. (('1'+'1'+tv+t.1) = ('1'+t+z))) )
              case case_1
              solve( !Time( ('1'+t+tr+tv) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tr+tv) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_01
              by contradiction /* cyclic */
            next
              case case_2_case_02
              by contradiction /* from formulas */
            next
              case case_2_case_03
              solve( !Time( ('1'+tr+tv+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+tv+x) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_04
              solve( !Time( ('1'+t+tr) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_05
              solve( !Time( ('1'+t+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t+x) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_06
              solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_07
              solve( !Time( ('1'+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_08
              solve( ((t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                     (∃ z. ((t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_09
              solve( ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                     (∃ z. ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_10
              solve( ((t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                     (∃ z. ((t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_11
              solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                     (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          next
            case case_2
            by contradiction /* from formulas */
          qed
        next
          case case_2
          solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
            case case_1
            solve( (('1'+'1'+tv+t.1) = ('1'+t))  ∥
                   (∃ z. (('1'+'1'+tv+t.1) = ('1'+t+z))) )
              case case_1
              solve( !Time( ('1'+t+tr+tv) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tr+tv) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_01
              solve( ((t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                     (∃ z. ((t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_02
              by contradiction /* from formulas */
            next
              case case_2_case_03
              solve( !Time( ('1'+tr+tv+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+tv+x) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_04
              solve( !Time( ('1'+t+tr) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_05
              solve( !Time( ('1'+t+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t+x) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_06
              solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_07
              solve( !Time( ('1'+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_08
              solve( ((t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                     (∃ z. ((t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_09
              solve( ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                     (∃ z. ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_10
              solve( ((t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                     (∃ z. ((t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_11
              solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.3))  ∥
                     (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.3))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          next
            case case_2
            by contradiction /* from formulas */
          qed
        qed
      next
        case RA_generate_heartbeat_case_4
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_5
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_42
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
          case case_1
          solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
            case case_1
            by solve( (('1'+'1'+tv) = ('1'+t))  ∥ (∃ z. (('1'+'1'+tv) = ('1'+t+z))) )
          next
            case case_2
            by contradiction /* from formulas */
          qed
        next
          case case_2
          solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
            case case_1
            by solve( (('1'+'1'+tv) = ('1'+t))  ∥ (∃ z. (('1'+'1'+tv) = ('1'+t+z))) )
          next
            case case_2
            by contradiction /* from formulas */
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+t) = (t_rev+z)) ⇒ ⊥) )
          case case_1
          solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
            case case_1
            solve( (('1'+'1'+tv+t.1) = ('1'+t))  ∥
                   (∃ z. (('1'+'1'+tv+t.1) = ('1'+t+z))) )
              case case_1
              solve( !Time( ('1'+t+tv+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tv+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_01
              by contradiction /* cyclic */
            next
              case case_2_case_02
              by contradiction /* from formulas */
            next
              case case_2_case_03
              solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+tv+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_04
              solve( !Time( ('1'+t+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                           (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                           (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_05
              solve( !Time( ('1'+t+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_06
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.2) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_07
              solve( !Time( ('1'+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_08
              solve( ((t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                     (∃ z. ((t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_09
              solve( ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                     (∃ z. ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_10
              solve( ((t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                     (∃ z. ((t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_11
              solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                     (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          next
            case case_2
            by contradiction /* from formulas */
          qed
        next
          case case_2
          solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
            case case_1
            solve( (('1'+'1'+tv+t.1) = ('1'+t))  ∥
                   (∃ z. (('1'+'1'+tv+t.1) = ('1'+t+z))) )
              case case_1
              solve( !Time( ('1'+t+tv+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tv+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_01
              solve( ((t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                     (∃ z. ((t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_02
              by contradiction /* from formulas */
            next
              case case_2_case_03
              solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+tv+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_04
              solve( !Time( ('1'+t+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                           (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                           (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_05
              solve( !Time( ('1'+t+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_06
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.2) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_07
              solve( !Time( ('1'+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_08
              solve( ((t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                     (∃ z. ((t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_09
              solve( ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                     (∃ z. ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_10
              solve( ((t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                     (∃ z. ((t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_11
              solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.5))  ∥
                     (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.5))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          next
            case case_2
            by contradiction /* from formulas */
          qed
        qed
      next
        case RA_generate_heartbeat_case_4
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_5
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_43
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
          case case_1
          solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
            case case_1
            by solve( (('1'+'1'+tv) = ('1'+x+x.1))  ∥
                      (∃ z. (('1'+'1'+tv) = ('1'+x+z+x.1))) )
          next
            case case_2
            by contradiction /* from formulas */
          qed
        next
          case case_2
          solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
            case case_1
            by solve( (('1'+'1'+tv) = ('1'+x+x.1))  ∥
                      (∃ z. (('1'+'1'+tv) = ('1'+x+z+x.1))) )
          next
            case case_2
            by contradiction /* from formulas */
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
          case case_1
          solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
            case case_1
            solve( (('1'+'1'+t+tv) = ('1'+x+x.1))  ∥
                   (∃ z. (('1'+'1'+t+tv) = ('1'+x+z+x.1))) )
              case case_1_case_01
              solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_1_case_02
              solve( !Time( ('1'+t+tr) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_1_case_03
              solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_1_case_04
              solve( !Time( ('1'+t+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                             (∃ z. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                             (∃ z. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                             (∃ z. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                             (∃ z. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_1_case_05
              solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                         (∃ z. ((t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                         (∃ z. ((t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_1_case_06
              solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_1_case_07
              solve( !Time( ('1'+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_1_case_08
              solve( !Time( ('1'+tr+tv+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_1_case_09
              solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_1_case_10
              solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_1_case_11
              solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                         (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                         (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_01
              solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                case advance_time
                solve( ((t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                       (∃ z. ((t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case case_2_case_02
              solve( ((t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                     (∃ z. ((t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_03
              solve( ((t+tr) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                     (∃ z. ((t+tr) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_04
              solve( !Time( ('1'+t+x) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                         (∃ z.1. ((t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                         (∃ z.1. ((t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_05
              solve( !Time( ('1'+t+tr) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t+x) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_06
              solve( !Time( ('1'+t+x) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                         (∃ z.1. ((t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                         (∃ z.1. ((t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_07
              solve( ((t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                     (∃ z. ((t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_08
              solve( !Time( ('1'+t+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_09
              solve( ((t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1+x.2))  ∥
                     (∃ z. ((t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+x.2))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_10
              solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                         (∃ z.1. ((t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                         (∃ z.1. ((t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_11
              solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_12
              solve( ((tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                     (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_13
              solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( ((tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                       (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case case_2_case_14
              solve( ((tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                     (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_15
              by contradiction /* cyclic */
            next
              case case_2_case_16
              solve( !Time( ('1'+tv+x) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_17
              solve( !Time( ('1'+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_18
              solve( !Time( ('1'+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+tv+x) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_19
              solve( !Time( ('1'+tv+x) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_20
              solve( ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                     (∃ z. ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_21
              solve( ((tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                     (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_22
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                         (∃ z.1. ((tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                         (∃ z.1. ((tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_23
              solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_24
              solve( ((tr+x) = ('1'+'1'+t_rev+tr+x.2+x.3))  ∥
                     (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+z+x.2+x.3))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_25
              solve( !Time( ('1'+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_26
              solve( !Time( ('1'+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                             (∃ z.1. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                             (∃ z.1. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                             (∃ z.1. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                             (∃ z.1. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_27
              solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_28
              solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_29
              solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                         (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                         (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_30
              solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                     (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_31
              solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                     (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_32
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                         (∃ z.1. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                         (∃ z.1. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_33
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                         (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                         (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_34
              solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                     (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_35
              solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_36
              solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_37
              solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                     (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_38
              solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                         (∃ z.1. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                         (∃ z.1. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_39
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                         (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                         (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_40
              solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.4))  ∥
                     (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.4))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_41
              solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_42
              solve( ((tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                     (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_43
              by contradiction /* from formulas */
            next
              case case_2_case_44
              solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_45
              solve( !Time( ('1'+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_46
              solve( !Time( ('1'+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_47
              solve( !Time( ('1'+tr+tv+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_48
              solve( ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                     (∃ z. ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_49
              solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_50
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_51
              solve( ((tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                     (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_52
              solve( !Time( ('1'+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_53
              solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_54
              solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_55
              solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                     (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_56
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                         (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                         (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_57
              solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                         (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                         (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_58
              solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                     (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_59
              solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_60
              solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                         (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                         (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_61
              solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                     (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          next
            case case_2
            by contradiction /* from formulas */
          qed
        next
          case case_2
          solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
            case case_1
            solve( (('1'+'1'+t+tv) = ('1'+x+x.1))  ∥
                   (∃ z. (('1'+'1'+t+tv) = ('1'+x+z+x.1))) )
              case case_1_case_01
              solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_1_case_02
              solve( !Time( ('1'+t+tr) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_1_case_03
              solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((t+tr+tv) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((t+tr+tv) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_1_case_04
              solve( !Time( ('1'+t+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                             (∃ z. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                             (∃ z. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                             (∃ z. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                             (∃ z. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_1_case_05
              solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                         (∃ z. ((t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                         (∃ z. ((t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_1_case_06
              solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_1_case_07
              solve( !Time( ('1'+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_1_case_08
              solve( !Time( ('1'+tr+tv+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_1_case_09
              solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_1_case_10
              solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_1_case_11
              solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                         (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                         (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_01
              solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                case advance_time
                solve( ((t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                       (∃ z. ((t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case case_2_case_02
              solve( ((t+tr) = ('1'+'1'+t_rev+tr+tv))  ∥
                     (∃ z. ((t+tr) = ('1'+'1'+t_rev+tr+tv+z))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_03
              solve( ((t+tr) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                     (∃ z. ((t+tr) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_04
              solve( !Time( ('1'+t+x) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                         (∃ z.1. ((t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                         (∃ z.1. ((t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_05
              solve( !Time( ('1'+t+tr) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t+x) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tr) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z))  ∥
                             (∃ z.1. (('1'+t+tr) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_06
              solve( !Time( ('1'+t+x) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                         (∃ z.1. ((t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((t+tr+x) = ('1'+'1'+t_rev+tr+x+z))  ∥
                         (∃ z.1. ((t+tr+x) = ('1'+'1'+t_rev+tr+x+z+z.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_07
              solve( ((t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1))  ∥
                     (∃ z. ((t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_08
              solve( !Time( ('1'+t+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                             (∃ z.1. (('1'+t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_09
              solve( ((t+tr+x) = ('1'+'1'+t_rev+tr+x+x.1+x.2))  ∥
                     (∃ z. ((t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+x.2))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_10
              solve( !Time( ('1'+t+x+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                         (∃ z.1. ((t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1))  ∥
                         (∃ z.1. ((t+tr+x) = ('1'+'1'+t_rev+tr+x+z+x.1+z.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_11
              solve( !Time( ('1'+x) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_12
              solve( ((tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                     (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_13
              solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( ((tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                       (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case case_2_case_14
              solve( ((tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                     (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_15
              solve( ((tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                     (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_16
              solve( !Time( ('1'+tv+x) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_17
              solve( !Time( ('1'+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                           (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_18
              solve( !Time( ('1'+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+tv+x) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_19
              solve( !Time( ('1'+tv+x) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_20
              solve( ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                     (∃ z. ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_21
              solve( ((tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                     (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_22
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                         (∃ z.1. ((tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                         (∃ z.1. ((tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_23
              solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_24
              solve( ((tr+x) = ('1'+'1'+t_rev+tr+x.2+x.3))  ∥
                     (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+z+x.2+x.3))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_25
              solve( !Time( ('1'+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_26
              solve( !Time( ('1'+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                             (∃ z.1. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                             (∃ z.1. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                             (∃ z.1. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.2))  ∥
                             (∃ z.1. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_27
              solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_28
              solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_29
              solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                         (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                         (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_30
              solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                     (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_31
              solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                     (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_32
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                         (∃ z.1. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1))  ∥
                         (∃ z.1. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_33
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                         (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2))  ∥
                         (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_34
              solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3))  ∥
                     (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_35
              solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_36
              solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                             (∃ z.1. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_37
              solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                     (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_38
              solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                         (∃ z.1. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3))  ∥
                         (∃ z.1. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+z.1+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_39
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                         (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.2+x.4))  ∥
                         (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.2+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_40
              solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.4))  ∥
                     (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.4))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_41
              solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_42
              solve( ((tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                     (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_43
              by contradiction /* from formulas */
            next
              case case_2_case_44
              solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_45
              solve( !Time( ('1'+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_46
              solve( !Time( ('1'+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_47
              solve( !Time( ('1'+tr+tv+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+tv+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                             (∃ z. (('1'+tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_48
              solve( ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                     (∃ z. ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_49
              solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv))  ∥
                         (∃ z. ((tr+tv+x) = ('1'+'1'+t_rev+tr+tv+z))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_50
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                         (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_51
              solve( ((tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                     (∃ z. ((tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_52
              solve( !Time( ('1'+tr+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x) = ('1'+'1'+t_rev+tr+x.1+x.4))  ∥
                             (∃ z. (('1'+tr+x) = ('1'+'1'+t_rev+tr+z+x.1+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_53
              solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_54
              solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_55
              solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                     (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_56
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                         (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.4))  ∥
                         (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_57
              solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                         (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                         (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_58
              solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x+x.2))  ∥
                     (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x+z+x.2))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_59
              solve( !Time( ('1'+tr+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tr+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                             (∃ z. (('1'+tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_60
              solve( !Time( ('1'+x+x.1+x.2+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2+x.3) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                         (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                         (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_61
              solve( ((tr+x+x.1) = ('1'+'1'+t_rev+tr+x.1+x.3+x.5))  ∥
                     (∃ z. ((tr+x+x.1) = ('1'+'1'+t_rev+tr+z+x.1+x.3+x.5))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          next
            case case_2
            by contradiction /* from formulas */
          qed
        qed
      next
        case RA_generate_heartbeat_case_4
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_5
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_no_revoke_case_44
  solve( !Pseudonym( ps ) ▶₁ #k )
    case Init
    solve( !PRL( prl, cnt ) ▶₂ #k )
      case Init
      solve( !KU( sign(<prl, t_hb>, ~ltk) ) @ #vk.4 )
        case RA_generate_heartbeat_case_1
        solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+x+x.2) = (t_rev+z)) ⇒ ⊥) )
          case case_1
          solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
            case case_1
            by solve( (('1'+'1'+tv) = ('1'+x+x.2))  ∥
                      (∃ z. (('1'+'1'+tv) = ('1'+x+z+x.2))) )
          next
            case case_2
            by contradiction /* from formulas */
          qed
        next
          case case_2
          solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
            case case_1
            by solve( (('1'+'1'+tv) = ('1'+x+x.2))  ∥
                      (∃ z. (('1'+'1'+tv) = ('1'+x+z+x.2))) )
          next
            case case_2
            by contradiction /* from formulas */
          qed
        qed
      next
        case RA_generate_heartbeat_case_2
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_3
        solve( (¬(#vr.1 < #k))  ∥ (∀ z. (('1'+x+x.2) = (t_rev+z)) ⇒ ⊥) )
          case case_1
          solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
            case case_1
            solve( (('1'+'1'+t+tv) = ('1'+x+x.2))  ∥
                   (∃ z. (('1'+'1'+t+tv) = ('1'+x+z+x.2))) )
              case case_1_case_01
              solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                         (∃ z. ((t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                         (∃ z. ((t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_1_case_02
              solve( !Time( ('1'+t+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_1_case_03
              solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                         (∃ z. ((t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                         (∃ z. ((t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_1_case_04
              solve( !Time( ('1'+t+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t+x.1+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                             (∃ z. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                             (∃ z. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                             (∃ z. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                             (∃ z. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_1_case_05
              solve( !Time( ('1'+t+x.1+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                         (∃ z. ((t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                         (∃ z. ((t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_1_case_06
              solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_1_case_07
              solve( !Time( ('1'+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_1_case_08
              solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_1_case_09
              solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_1_case_10
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_1_case_11
              solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥
                       (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                         (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                         (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_01
              solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                case advance_time
                solve( ((t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                       (∃ z. ((t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case case_2_case_02
              solve( ((t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                     (∃ z. ((t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_03
              solve( ((t+x) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                     (∃ z. ((t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_04
              solve( !Time( ('1'+t+x.2) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x.2) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                         (∃ z.1. ((t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                         (∃ z.1. ((t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_05
              solve( !Time( ('1'+t+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t+x.2) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_06
              solve( !Time( ('1'+t+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                         (∃ z.1. ((t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                         (∃ z.1. ((t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_07
              solve( ((t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                     (∃ z. ((t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_08
              solve( !Time( ('1'+t+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t+x.1+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_09
              solve( ((t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3+x.4))  ∥
                     (∃ z. ((t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3+x.4))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_10
              solve( !Time( ('1'+t+x.1+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                         (∃ z.1. ((t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                         (∃ z.1. ((t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_11
              solve( !Time( ('1'+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_12
              solve( ((x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                     (∃ z. ((x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_13
              solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( ((x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                       (∃ z. ((x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case case_2_case_14
              solve( ((x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                     (∃ z. ((x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_15
              by contradiction /* cyclic */
            next
              case case_2_case_16
              solve( !Time( ('1'+tv+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_17
              solve( !Time( ('1'+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                           (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                           (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_18
              solve( !Time( ('1'+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+tv+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_19
              solve( !Time( ('1'+tv+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_20
              solve( ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                     (∃ z. ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_21
              solve( ((x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                     (∃ z. ((x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_22
              solve( !Time( ('1'+x.1+x.3+x.4) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x.1+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                         (∃ z.1. ((x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                         (∃ z.1. ((x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_23
              solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_24
              solve( ((x+x.1) = ('1'+'1'+t_rev+x+x.2+x.4+x.5))  ∥
                     (∃ z. ((x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4+x.5))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_25
              solve( !Time( ('1'+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_26
              solve( !Time( ('1'+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.3+x.4) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                             (∃ z.1. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                             (∃ z.1. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                             (∃ z.1. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                             (∃ z.1. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_27
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_28
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_29
              solve( !Time( ('1'+x.1+x.2) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                         (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                         (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_30
              solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                     (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_31
              solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                     (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_32
              solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                         (∃ z.1. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                         (∃ z.1. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_33
              solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                         (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                         (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_34
              solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                     (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_35
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_36
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_37
              solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                     (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_38
              solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥
                       (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                         (∃ z.1. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                         (∃ z.1. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_39
              solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                         (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                         (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_40
              solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.6))  ∥
                     (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.6))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_41
              solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_42
              solve( ((x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                     (∃ z. ((x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_43
              by contradiction /* from formulas */
            next
              case case_2_case_44
              solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_45
              solve( !Time( ('1'+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_46
              solve( !Time( ('1'+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_47
              solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_48
              solve( ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                     (∃ z. ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_49
              solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_50
              solve( !Time( ('1'+x.1+x.3+x.4) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x.1+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_51
              solve( ((x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                     (∃ z. ((x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_52
              solve( !Time( ('1'+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.3+x.4) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_53
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_54
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_55
              solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                     (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_56
              solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                         (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                         (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_57
              solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥
                       (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                         (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                         (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_58
              solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                     (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_59
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_60
              solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥
                       (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                         (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                         (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_61
              solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                     (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          next
            case case_2
            by contradiction /* from formulas */
          qed
        next
          case case_2
          solve( (¬(#k < #vr.5))  ∥ (∀ z. (('1'+'1') = ('1'+z)) ⇒ ⊥) )
            case case_1
            solve( (('1'+'1'+t+tv) = ('1'+x+x.2))  ∥
                   (∃ z. (('1'+'1'+t+tv) = ('1'+x+z+x.2))) )
              case case_1_case_01
              solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                         (∃ z. ((t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                         (∃ z. ((t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_1_case_02
              solve( !Time( ('1'+t+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                             (∃ z. (('1'+t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_1_case_03
              solve( !Time( ('1'+t+tv) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+tv) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                         (∃ z. ((t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((t+tv+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                         (∃ z. ((t+tv+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_1_case_04
              solve( !Time( ('1'+t+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t+x.1+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                             (∃ z. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                             (∃ z. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                             (∃ z. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                             (∃ z. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_1_case_05
              solve( !Time( ('1'+t+x.1+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                         (∃ z. ((t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                         (∃ z. ((t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_1_case_06
              solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_1_case_07
              solve( !Time( ('1'+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_1_case_08
              solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_1_case_09
              solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_1_case_10
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_1_case_11
              solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥
                       (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                         (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                         (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_01
              solve( !Time( ('1'+t) ) ▶₀ #vr.1 )
                case advance_time
                solve( ((t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                       (∃ z. ((t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case case_2_case_02
              solve( ((t+x) = ('1'+'1'+t_rev+tv+x+x.1))  ∥
                     (∃ z. ((t+x) = ('1'+'1'+t_rev+tv+x+z+x.1))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_03
              solve( ((t+x) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                     (∃ z. ((t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_04
              solve( !Time( ('1'+t+x.2) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x.2) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                         (∃ z.1. ((t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                         (∃ z.1. ((t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_05
              solve( !Time( ('1'+t+x) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t+x.2) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.2) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                             (∃ z.1. (('1'+t+x) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_06
              solve( !Time( ('1'+t+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                         (∃ z.1. ((t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2))  ∥
                         (∃ z.1. ((t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_07
              solve( ((t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3))  ∥
                     (∃ z. ((t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_08
              solve( !Time( ('1'+t+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+t+x.1+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+t+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                             (∃ z.1. (('1'+t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_09
              solve( ((t+x+x.1) = ('1'+'1'+t_rev+x+x.1+x.2+x.3+x.4))  ∥
                     (∃ z. ((t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3+x.4))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_10
              solve( !Time( ('1'+t+x.1+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+t+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                         (∃ z.1. ((t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+x.2+x.3))  ∥
                         (∃ z.1. ((t+x+x.1) = ('1'+'1'+t_rev+x+z+x.1+z.1+x.2+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_11
              solve( !Time( ('1'+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_12
              solve( ((x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                     (∃ z. ((x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_13
              solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( ((x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                       (∃ z. ((x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                  case case_1
                  by contradiction /* from formulas */
                next
                  case case_2
                  by contradiction /* from formulas */
                qed
              qed
            next
              case case_2_case_14
              solve( ((x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                     (∃ z. ((x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_15
              solve( ((x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                     (∃ z. ((x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_16
              solve( !Time( ('1'+tv+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_17
              solve( !Time( ('1'+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                           (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case case_2
                    solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                           (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_18
              solve( !Time( ('1'+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+tv+x.1) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_19
              solve( !Time( ('1'+tv+x.1) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x.1) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_20
              solve( ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                     (∃ z. ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_21
              solve( ((x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                     (∃ z. ((x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_22
              solve( !Time( ('1'+x.1+x.3+x.4) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x.1+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                         (∃ z.1. ((x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                         (∃ z.1. ((x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_23
              solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_24
              solve( ((x+x.1) = ('1'+'1'+t_rev+x+x.2+x.4+x.5))  ∥
                     (∃ z. ((x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4+x.5))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_25
              solve( !Time( ('1'+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_26
              solve( !Time( ('1'+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.3+x.4) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                             (∃ z.1. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                             (∃ z.1. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                             (∃ z.1. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.4))  ∥
                             (∃ z.1. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_27
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_28
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_29
              solve( !Time( ('1'+x.1+x.2) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                         (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                         (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_30
              solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                     (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_31
              solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                     (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_32
              solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                         (∃ z.1. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3))  ∥
                         (∃ z.1. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_33
              solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                         (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4))  ∥
                         (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_34
              solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5))  ∥
                     (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_35
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_36
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                             (∃ z.1. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_37
              solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                     (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_38
              solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥
                       (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                         (∃ z.1. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5))  ∥
                         (∃ z.1. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+z.1+x.2+x.3+x.5))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_39
              solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                         (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.4+x.6))  ∥
                         (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.4+x.6))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_40
              solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.6))  ∥
                     (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.6))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_41
              solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_42
              solve( ((x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                     (∃ z. ((x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_43
              by contradiction /* from formulas */
            next
              case case_2_case_44
              solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_45
              solve( !Time( ('1'+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_46
              solve( !Time( ('1'+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_47
              solve( !Time( ('1'+tv+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                             (∃ z. (('1'+tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_48
              solve( ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                     (∃ z. ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_49
              solve( !Time( ('1'+tv+x.1+x.3) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+tv+x.1+x.3) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+x.2))  ∥
                         (∃ z. ((tv+x+x.1) = ('1'+'1'+t_rev+tv+x+z+x.2))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_50
              solve( !Time( ('1'+x.1+x.3+x.4) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x.1+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                         (∃ z. ((x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_51
              solve( ((x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                     (∃ z. ((x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_52
              solve( !Time( ('1'+x+x.1) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.3+x.4) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.3+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1) = ('1'+'1'+t_rev+x+x.2+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_53
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_54
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_55
              solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                     (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_56
              solve( !Time( ('1'+x.1+x.2+x.4) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x.1+x.2+x.4) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                         (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.6))  ∥
                         (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.6))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_57
              solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥
                       (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                         (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                         (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_58
              solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.1+x.3+x.4))  ∥
                     (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.1+x.3+x.4))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            next
              case case_2_case_59
              solve( !Time( ('1'+x+x.1+x.2) ) ▶₀ #i )
                case advance_time
                solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                  case advance_time
                  solve( (¬(#vr.8 < #k))  ∥ (∀ z. (('1'+x+x.1+x.2) = (t_rev+z)) ⇒ ⊥) )
                    case case_1
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case case_2
                    solve( (¬(#vr.9 < #k))  ∥
                           (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                      case case_1
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      solve( (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                             (∃ z. (('1'+x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  qed
                qed
              qed
            next
              case case_2_case_60
              solve( !Time( ('1'+x.1+x.2+x.4+x.5) ) ▶₀ #vr.1 )
                case advance_time
                solve( (¬(#vr.8 < #k))  ∥
                       (∀ z. (('1'+x.1+x.2+x.4+x.5) = (t_rev+z)) ⇒ ⊥) )
                  case case_1
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                         (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                next
                  case case_2
                  solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                         (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                    case case_1
                    by contradiction /* from formulas */
                  next
                    case case_2
                    by contradiction /* from formulas */
                  qed
                qed
              qed
            next
              case case_2_case_61
              solve( ((x+x.1+x.2) = ('1'+'1'+t_rev+x+x.2+x.3+x.5+x.7))  ∥
                     (∃ z. ((x+x.1+x.2) = ('1'+'1'+t_rev+x+z+x.2+x.3+x.5+x.7))) )
                case case_1
                by contradiction /* from formulas */
              next
                case case_2
                by contradiction /* from formulas */
              qed
            qed
          next
            case case_2
            by contradiction /* from formulas */
          qed
        qed
      next
        case RA_generate_heartbeat_case_4
        by contradiction /* from formulas */
      next
        case RA_generate_heartbeat_case_5
        by contradiction /* from formulas */
      next
        case c_sign
        by solve( !KU( ~ltk ) @ #vk.5 )
      qed
    qed
  qed
next
  case TC_process_heartbeat_revoke_case_01
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_02
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_03
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_04
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_05
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_06
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_07
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_08
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_09
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_10
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_11
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_12
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_13
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_14
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_15
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_16
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_17
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_18
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_19
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_20
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_21
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_22
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_23
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_24
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_25
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_26
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_27
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_28
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_29
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_30
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_31
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_32
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_33
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_34
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_35
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_36
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_37
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_38
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_39
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_40
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_41
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_42
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_43
  by contradiction /* from formulas */
next
  case TC_process_heartbeat_revoke_case_44
  by contradiction /* from formulas */
qed

/* All well-formedness checks were successful. */

end